{"ast":null,"code":"var _jsxFileName = \"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/MultiplayerResultScreen.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MultiplayerResultScreen = _ref => {\n  let {\n    winner,\n    playerDa,\n    onGameFinished,\n    das,\n    playerTwoDa,\n    onChooseNextRandomDa,\n    onPlayerDaContinue,\n    onNewDasList,\n    onAllDasBeaten,\n    messages,\n    changeMultiplayer\n  } = _ref;\n\n  const findWinMessage = function () {\n    const copyMessages = [...messages];\n    const winMessages = copyMessages.filter(message => {\n      return message.messageType === \"WIN\";\n    });\n    const randomIndexWin = Math.floor(Math.random() * winMessages.length);\n    const randomWinMessage = winMessages[randomIndexWin];\n    return randomWinMessage.comment;\n  };\n\n  const handleOnClick = function () {\n    onGameFinished(null);\n    changeMultiplayer(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"health\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [winner.name, \" Won, he battered \", playerTwoDa.name, \" !\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" Some say \", playerTwoDa.name, \" \", findWinMessage()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/mode\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleOnClick,\n          children: \"Play again ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MultiplayerResultScreen;\nexport default MultiplayerResultScreen; // if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiplayerResultScreen\");","map":{"version":3,"sources":["/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/MultiplayerResultScreen.js"],"names":["React","Link","MultiplayerResultScreen","winner","playerDa","onGameFinished","das","playerTwoDa","onChooseNextRandomDa","onPlayerDaContinue","onNewDasList","onAllDasBeaten","messages","changeMultiplayer","findWinMessage","copyMessages","winMessages","filter","message","messageType","randomIndexWin","Math","floor","random","length","randomWinMessage","comment","handleOnClick","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,uBAAuB,GAAG,QAAiK;AAAA,MAAhK;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,cAApB;AAAoCC,IAAAA,GAApC;AAAyCC,IAAAA,WAAzC;AAAsDC,IAAAA,oBAAtD;AAA4EC,IAAAA,kBAA5E;AAAgGC,IAAAA,YAAhG;AAA8GC,IAAAA,cAA9G;AAA8HC,IAAAA,QAA9H;AAAwIC,IAAAA;AAAxI,GAAgK;;AAE7L,QAAMC,cAAc,GAAG,YAAY;AAC/B,UAAMC,YAAY,GAAG,CAAC,GAAGH,QAAJ,CAArB;AACA,UAAMI,WAAW,GAAGD,YAAY,CAACE,MAAb,CAAqBC,OAAD,IAAa;AACjD,aAAOA,OAAO,CAACC,WAAR,KAAwB,KAA/B;AACH,KAFmB,CAApB;AAGA,UAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,WAAW,CAACQ,MAAvC,CAAvB;AACA,UAAMC,gBAAgB,GAAGT,WAAW,CAACI,cAAD,CAApC;AACA,WAAOK,gBAAgB,CAACC,OAAxB;AACH,GARD;;AAUA,QAAMC,aAAa,GAAG,YAAY;AAC9BtB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAQ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAA,iBAAKV,MAAM,CAACyB,IAAZ,wBAAoCrB,WAAW,CAACqB,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEQ;AAAA,8BACI;AAAA,iCAAerB,WAAW,CAACqB,IAA3B,OAAkCd,cAAc,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,OAAT;AAAA,+BAAiB;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEa,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA3BD;;KAAMzB,uB;AA6BN,eAAeA,uBAAf,C,CAEA;AACA","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst MultiplayerResultScreen = ({ winner, playerDa, onGameFinished, das, playerTwoDa, onChooseNextRandomDa, onPlayerDaContinue, onNewDasList, onAllDasBeaten, messages, changeMultiplayer }) => {\n\n    const findWinMessage = function () {\n        const copyMessages = [...messages]\n        const winMessages = copyMessages.filter((message) => {\n            return message.messageType === \"WIN\"\n        })\n        const randomIndexWin = Math.floor(Math.random() * winMessages.length)\n        const randomWinMessage = winMessages[randomIndexWin]\n        return randomWinMessage.comment\n    }\n\n    const handleOnClick = function () {\n        onGameFinished(null);\n        changeMultiplayer(false);\n    }\n\n    return (\n        <div className=\"health\">\n            <h1>{winner.name} Won, he battered {playerTwoDa.name} !</h1>\n                <div>\n                    <h2> Some say {playerTwoDa.name} {findWinMessage()}</h2>\n                        <Link to=\"/mode\"><button type=\"button\" onClick={handleOnClick}>Play again ...</button>\n                        </Link>\n                </div>\n        </div>\n    )\n}\n\nexport default MultiplayerResultScreen\n\n// if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)"]},"metadata":{},"sourceType":"module"}