{"ast":null,"code":"var _jsxFileName = \"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/DaContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DaList from '../components/DaList';\nimport DaForm from '../components/DaForm';\nimport Request from '../helpers/request';\nimport FightScreen from '../components/FightScreen';\nimport Home from '../components/Home';\nimport ResultScreen from '../components/ResultScreen';\nimport FinishScreen from '../components/FinishScreen';\nimport ModeScreen from '../components/ModeScreen';\nimport Multiplayer from '../components/Multiplayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DaContainer = () => {\n  _s();\n\n  const [das, setDas] = useState([]);\n  const [playerDa, setPlayerDa] = useState(null);\n  const [computerDa, setComputerDa] = useState(null);\n  const [winner, setWinner] = useState(null);\n  const [gameFinished, setGameFinished] = useState(null);\n  const [playerTwoDa, setPlayerTwoDa] = useState(null);\n\n  const requestAll = function () {\n    const request = new Request();\n    const dasPromise = request.get('/das');\n    Promise.all([dasPromise]).then(data => {\n      setDas(data[0]);\n    });\n  };\n\n  useEffect(() => {\n    requestAll();\n  }, []);\n  useEffect(() => {\n    selectComputerDa();\n  }, [playerDa]);\n\n  const handlePost = function (da) {\n    const request = new Request();\n    request.post(\"/api/das\", da).then(() => window.location = '/das');\n  };\n\n  const onDaClicked = function (da) {\n    setPlayerDa(da); // <Route path=\"/result\" render={() => {\n    //   return <ResultScreen />\n    // }} />\n  };\n\n  const onPlayerTwoDaClicked = function (da) {\n    setPlayerTwoDa(da);\n  };\n\n  const onGameFinished = function (da) {\n    setWinner(da);\n  };\n\n  const onChooseNextRandomDa = function (da) {\n    setComputerDa(da);\n  };\n\n  const onPlayerDaContinue = function (da) {\n    setPlayerDa(da);\n  };\n\n  const onNewDasList = function (das) {\n    setDas(das);\n  };\n\n  const onAllDasBeaten = function (da) {\n    setGameFinished(da);\n  };\n\n  const selectComputerDa = function () {\n    const copiedDas = [...das];\n\n    for (var i = 0; i < copiedDas.length; i++) {\n      if (copiedDas[i] === playerDa) {\n        copiedDas.splice(i, 1);\n      }\n    }\n\n    const randomIndex = Math.floor(Math.random() * copiedDas.length);\n    const randomDa = copiedDas[randomIndex];\n    setComputerDa(randomDa);\n  };\n\n  if (winner === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/select\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(DaList, {\n              das: das,\n              onDaClicked: onDaClicked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 20\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/fight\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(FightScreen, {\n              playerDa: playerDa,\n              computerDa: computerDa,\n              onGameFinished: onGameFinished,\n              das: das\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 20\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/mode\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(ModeScreen, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 20\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/multiplayer\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(Multiplayer, {\n              das: das,\n              onDaClicked: onDaClicked,\n              onPlayerTwoDaClicked: onPlayerTwoDaClicked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 20\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  } else if (gameFinished != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FinishScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ResultScreen, {\n        winner: winner,\n        playerDa: playerDa,\n        onGameFinished: onGameFinished,\n        das: das,\n        computerDa: computerDa,\n        onChooseNextRandomDa: onChooseNextRandomDa,\n        onPlayerDaContinue: onPlayerDaContinue,\n        onNewDasList: onNewDasList,\n        onAllDasBeaten: onAllDasBeaten\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(DaContainer, \"DuZ3YNOP3xsAv1SjLyyRQBLYJSE=\");\n\n_c = DaContainer;\nexport default DaContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DaContainer\");","map":{"version":3,"sources":["/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/DaContainer.js"],"names":["React","useState","useEffect","Route","Switch","DaList","DaForm","Request","FightScreen","Home","ResultScreen","FinishScreen","ModeScreen","Multiplayer","DaContainer","das","setDas","playerDa","setPlayerDa","computerDa","setComputerDa","winner","setWinner","gameFinished","setGameFinished","playerTwoDa","setPlayerTwoDa","requestAll","request","dasPromise","get","Promise","all","then","data","selectComputerDa","handlePost","da","post","window","location","onDaClicked","onPlayerTwoDaClicked","onGameFinished","onChooseNextRandomDa","onPlayerDaContinue","onNewDasList","onAllDasBeaten","copiedDas","i","length","splice","randomIndex","Math","floor","random","randomDa"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DaList from '../components/DaList';\nimport DaForm from '../components/DaForm';\nimport Request from '../helpers/request';\nimport FightScreen from '../components/FightScreen';\nimport Home from '../components/Home';\nimport ResultScreen from '../components/ResultScreen';\nimport FinishScreen from '../components/FinishScreen';\nimport ModeScreen from '../components/ModeScreen';\nimport Multiplayer from '../components/Multiplayer';\n\n\nconst DaContainer = () => {\n  const [das, setDas] = useState([]);\n  const [playerDa, setPlayerDa] = useState(null)\n  const [computerDa, setComputerDa] = useState(null)\n  const [winner, setWinner] = useState(null)\n  const [gameFinished, setGameFinished] = useState(null)\n  const [playerTwoDa, setPlayerTwoDa] = useState(null)\n\n  const requestAll = function () {\n    const request = new Request();\n    const dasPromise = request.get('/das')\n\n    Promise.all([dasPromise])\n      .then((data) => {\n        setDas(data[0]);\n      })\n  }\n\n  useEffect(() => {\n    requestAll()\n  }, [])\n\n  useEffect(() => {\n    selectComputerDa()\n  }, [playerDa])\n\n  const handlePost = function (da) {\n    const request = new Request();\n    request.post(\"/api/das\", da)\n      .then(() => window.location = '/das')\n  }\n\n  const onDaClicked = function (da) {\n    setPlayerDa(da);\n    // <Route path=\"/result\" render={() => {\n    //   return <ResultScreen />\n    // }} />\n  }\n\n  const onPlayerTwoDaClicked = function (da) {\n    setPlayerTwoDa(da);\n  }\n\n  const onGameFinished = function (da) {\n    setWinner(da)\n  }\n\n  const onChooseNextRandomDa = function (da) {\n    setComputerDa(da)\n  }\n\n  const onPlayerDaContinue = function (da) {\n    setPlayerDa(da)\n  }\n\n  const onNewDasList = function (das) {\n    setDas(das)\n  }\n\n  const onAllDasBeaten = function (da) {\n    setGameFinished(da)\n  }\n\n  const selectComputerDa = function () {\n    const copiedDas = [...das]\n    for (var i = 0; i < copiedDas.length; i++) {\n      if (copiedDas[i] === playerDa) {\n        copiedDas.splice(i, 1);\n      }\n    }\n    const randomIndex = Math.floor(Math.random() * copiedDas.length);\n    const randomDa = copiedDas[randomIndex];\n    setComputerDa(randomDa)\n  }\n\n\n  if (winner === null) {\n    return (\n      <div>\n        <Switch>\n\n          {/* <Route exact path=\"/das/new\" render={() => {\n          return <DaForm handlePost={handlePost} />\n        }} /> */}\n          <Route path=\"/select\" render={() => {\n            return <DaList das={das} onDaClicked={onDaClicked} />\n          }} />\n          <Route path=\"/fight\" render={() => {\n            return <FightScreen playerDa={playerDa} computerDa={computerDa} onGameFinished={onGameFinished} das={das} />\n          }} />\n          <Route path=\"/mode\" render={() => {\n            return <ModeScreen />\n          }} />\n          <Route path=\"/multiplayer\" render={() => {\n            return <Multiplayer das={das} onDaClicked={onDaClicked} onPlayerTwoDaClicked={onPlayerTwoDaClicked}/>\n          }} />\n          {/* <Route path=\"/result\" render={() => {\n          return <ResultScreen playerDa={playerDa} computerDa={computerDa} />\n        }} /> */}\n        </Switch>\n      </div>\n    )\n  } else if (gameFinished != null) {\n    return (\n      <div>\n        <FinishScreen />\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <ResultScreen winner={winner} playerDa={playerDa} onGameFinished={onGameFinished} das={das} computerDa={computerDa} onChooseNextRandomDa={onChooseNextRandomDa} onPlayerDaContinue={onPlayerDaContinue} onNewDasList={onNewDasList} onAllDasBeaten={onAllDasBeaten} />\n      </div>\n    )\n  }\n}\n\nexport default DaContainer;"]},"metadata":{},"sourceType":"module"}