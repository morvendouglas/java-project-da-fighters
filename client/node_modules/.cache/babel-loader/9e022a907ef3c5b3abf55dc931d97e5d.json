{"ast":null,"code":"var _jsxFileName = \"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FightScreen = _ref => {\n  _s();\n\n  let {\n    playerDa,\n    computerDa,\n    onGameFinished,\n    das\n  } = _ref;\n  const [computerHealth, setComputerHealth] = useState(20);\n  const [previousComputerHealth, setPreviousComputerHealth] = useState(0);\n  const [playerHealth, setPlayerHealth] = useState(100);\n  const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n  const [computerSpecialUsed, setComputerSpecialUsed] = useState(false);\n  const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n  useEffect(() => {\n    if (computerHealth <= 0 & playerHealth > 0) {\n      onGameFinished(playerDa);\n    } else if (playerHealth <= 0 & computerHealth > 0) {\n      onGameFinished(computerDa);\n    }\n  }, [computerHealth, playerHealth]);\n\n  const getRandomNumber = function (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const handleAttack1Click = function () {\n    let damage = 0;\n\n    if (playerDa.daType === \"BUFFDA\") {\n      damage = getRandomNumber(18, 30);\n    } else if (playerDa.daType === \"AVERAGEDA\") {\n      damage = getRandomNumber(23, 25);\n    } else {\n      damage = getRandomNumber(18, 25);\n    }\n\n    setPreviousComputerHealth(computerHealth);\n    setComputerHealth(computerHealth => computerHealth - damage);\n    console.log(\"player hit computer for : \" + damage);\n    setTimeout(function () {\n      computerTurn();\n    }, 2000);\n  };\n\n  const handleAttack2Click = function () {\n    let damage = getRandomNumber(10, 35);\n    setPreviousComputerHealth(computerHealth);\n    setComputerHealth(computerHealth => computerHealth - damage);\n    console.log(\"player hit computer for : \" + damage);\n    setTimeout(function () {\n      computerTurn();\n    }, 2000);\n  };\n\n  const handleHealClick = function () {\n    let heal = 0;\n\n    if (playerDa.daType === \"SOFTDA\") {\n      heal = getRandomNumber(23, 25);\n    } else {\n      heal = getRandomNumber(18, 25);\n    }\n\n    if (playerHealth + heal >= 100) {\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerhealth => 100);\n    } else if (playerHealth <= 30) {\n      heal = getRandomNumber(24, 25);\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth + heal);\n    } else {\n      const health = playerHealth + heal;\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth + heal);\n    }\n\n    console.log(\"player healed for : \" + heal);\n    setTimeout(function () {\n      computerTurn();\n    }, 2000);\n  };\n\n  const handleSpecialClick = function () {\n    if (playerSpecialUsed === false) {\n      let opponentDamage = 45;\n      let selfDamage = 25;\n      const specialOutcome = [opponentDamage, opponentDamage, selfDamage];\n      const specialNumber = Math.floor(Math.random() * 3);\n\n      if (specialOutcome[specialNumber] === opponentDamage) {\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => computerHealth - opponentDamage);\n        setPlayerSpecialUsed(true);\n        playerDa.specialName = \"Special Used\";\n        console.log(\"player hit computer for : \" + opponentDamage);\n        setTimeout(function () {\n          computerTurn();\n        }, 2000);\n      } else if (specialOutcome[specialNumber] === selfDamage) {\n        setPreviousPlayerHealth(playerHealth);\n        setPlayerHealth(playerHealth => playerHealth - selfDamage);\n        setPlayerSpecialUsed(true);\n        playerDa.specialName = \"Special Used\";\n        console.log(\"player hit themselves for : \" + selfDamage);\n        setTimeout(function () {\n          computerTurn();\n        }, 2000);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const computerTurn = function () {\n    const Attack1 = function () {\n      let damage = 0;\n\n      if (computerDa.daType === \"BUFFDA\") {\n        damage = getRandomNumber(18, 30);\n      } else if (computerDa.daType === \"AVERAGEDA\") {\n        damage = getRandomNumber(23, 25);\n      } else {\n        damage = getRandomNumber(18, 25);\n      }\n\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth - damage);\n      console.log(\"computer hit player for : \" + damage);\n    };\n\n    const Attack2 = function () {\n      let damage = getRandomNumber(10, 35);\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth - damage);\n      console.log(\"computer hit player for : \" + damage);\n    };\n\n    const Heal = function () {\n      let heal = 0;\n\n      if (computerDa.daType === \"SOFTDA\") {\n        heal = getRandomNumber(23, 25);\n      } else {\n        heal = getRandomNumber(18, 25);\n      }\n\n      if (computerHealth + heal >= 100) {\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => 100);\n      } else if (computerHealth <= 30) {\n        heal = getRandomNumber(24, 25);\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => computerHealth + heal);\n      } else {\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => computerHealth + heal);\n      }\n\n      console.log(\"computer healed for : \" + heal);\n    };\n\n    const Special = function () {\n      let opponentDamage = 45;\n      let selfDamage = 25;\n      const specialOutcome = [opponentDamage, opponentDamage, selfDamage];\n      const specialNumber = Math.floor(Math.random() * 3);\n\n      if (specialOutcome[specialNumber] === opponentDamage) {\n        setPreviousPlayerHealth(playerHealth);\n        setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n        setComputerSpecialUsed(true);\n        computerDa.specialName = \"Special Used\";\n        console.log(\"computer hit player for : \" + opponentDamage);\n      } else if (specialOutcome[specialNumber] === selfDamage) {\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => computerHealth - selfDamage);\n        setComputerSpecialUsed(true);\n        computerDa.specialName = \"Special Used\";\n        console.log(\"computer hit themselves for : \" + selfDamage);\n      }\n    };\n\n    if (computerHealth >= 80) {\n      if (computerSpecialUsed === false) {\n        const randomMove = [Attack1, Attack2, Special];\n        const randomNumber = Math.floor(Math.random() * 3);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      } else {\n        const randomMove = [Attack1, Attack2];\n        const randomNumber = Math.floor(Math.random() * 2);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      }\n    } else if (computerHealth >= 60) {\n      if (computerSpecialUsed === false) {\n        const randomMove = [Attack1, Attack2, Heal, Special];\n        const randomNumber = Math.floor(Math.random() * 4);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      } else {\n        const randomMove = [Attack1, Attack2, Heal];\n        const randomNumber = Math.floor(Math.random() * 3);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      }\n    } else if (computerHealth >= 40) {\n      if (computerSpecialUsed === false) {\n        const randomMove = [Attack1, Attack2, Heal, Heal, Special];\n        const randomNumber = Math.floor(Math.random() * 5);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      } else {\n        const randomMove = [Attack1, Attack2, Heal, Heal];\n        const randomNumber = Math.floor(Math.random() * 4);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      }\n    } else if (computerHealth <= 39) {\n      if (computerSpecialUsed === false) {\n        const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special];\n        const randomNumber = Math.floor(Math.random() * 7);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      } else {\n        const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal];\n        const randomNumber = Math.floor(Math.random() * 6);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [das.length < 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"health\",\n        children: \"FINAL ROUND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [playerDa.name, /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAttack1Click,\n            children: playerDa.attackOneName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAttack2Click,\n            children: playerDa.attackTwoName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleHealClick,\n            children: playerDa.healName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSpecialClick,\n            children: playerDa.specialName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(CountUp, {\n            className: \"health\",\n            start: previousPlayerHealth,\n            end: playerHealth,\n            duration: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [computerDa.name, /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: computerDa.attackOneName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: computerDa.attackTwoName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: computerDa.healName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: computerDa.specialName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(CountUp, {\n            className: \"health\",\n            start: previousComputerHealth,\n            end: computerHealth,\n            duration: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FightScreen, \"hf2SNCVW39wYzixgk0Pbw7Z4Oys=\");\n\n_c = FightScreen;\nexport default FightScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FightScreen\");","map":{"version":3,"sources":["/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js"],"names":["React","useEffect","useRef","useState","CountUp","Link","FightScreen","playerDa","computerDa","onGameFinished","das","computerHealth","setComputerHealth","previousComputerHealth","setPreviousComputerHealth","playerHealth","setPlayerHealth","previousPlayerHealth","setPreviousPlayerHealth","computerSpecialUsed","setComputerSpecialUsed","playerSpecialUsed","setPlayerSpecialUsed","getRandomNumber","min","max","Math","floor","random","handleAttack1Click","damage","daType","console","log","setTimeout","computerTurn","handleAttack2Click","handleHealClick","heal","playerhealth","health","handleSpecialClick","opponentDamage","selfDamage","specialOutcome","specialNumber","specialName","Attack1","Attack2","Heal","Special","randomMove","randomNumber","length","name","attackOneName","attackTwoName","healName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,YAAP;;;;AAEA,MAAMC,WAAW,GAAG,QAAmD;AAAA;;AAAA,MAAlD;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA,cAAxB;AAAwCC,IAAAA;AAAxC,GAAkD;AAEnE,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACU,sBAAD,EAAyBC,yBAAzB,IAAsDX,QAAQ,CAAC,CAAD,CAApE;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,GAAD,CAAhD;AACA,QAAM,CAACc,oBAAD,EAAuBC,uBAAvB,IAAkDf,QAAQ,CAAC,CAAD,CAAhE;AACA,QAAM,CAACgB,mBAAD,EAAsBC,sBAAtB,IAAgDjB,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACkB,iBAAD,EAAoBC,oBAApB,IAA4CnB,QAAQ,CAAC,KAAD,CAA1D;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,cAAc,IAAI,CAAlB,GAAsBI,YAAY,GAAG,CAAzC,EAA4C;AACxCN,MAAAA,cAAc,CAACF,QAAD,CAAd;AACH,KAFD,MAEO,IAAIQ,YAAY,IAAI,CAAhB,GAAoBJ,cAAc,GAAG,CAAzC,EAA4C;AAC/CF,MAAAA,cAAc,CAACD,UAAD,CAAd;AACH;AACJ,GANQ,EAMN,CAACG,cAAD,EAAiBI,YAAjB,CANM,CAAT;;AAQA,QAAMQ,eAAe,GAAG,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACxC,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAkBH,GAAG,GAAGD,GAAP,GAAc,CAA/B,IAAoCA,GAA/C,CAAP;AACH,GAFD;;AAIA,QAAMK,kBAAkB,GAAG,YAAY;AACnC,QAAIC,MAAM,GAAG,CAAb;;AACA,QAAIvB,QAAQ,CAACwB,MAAT,KAAoB,QAAxB,EAAkC;AAC9BD,MAAAA,MAAM,GAAGP,eAAe,CAAC,EAAD,EAAK,EAAL,CAAxB;AACH,KAFD,MAEO,IAAIhB,QAAQ,CAACwB,MAAT,KAAoB,WAAxB,EAAqC;AACxCD,MAAAA,MAAM,GAAGP,eAAe,CAAC,EAAD,EAAK,EAAL,CAAxB;AACH,KAFM,MAEA;AACHO,MAAAA,MAAM,GAAGP,eAAe,CAAC,EAAD,EAAK,EAAL,CAAxB;AACH;;AACDT,IAAAA,yBAAyB,CAACH,cAAD,CAAzB;AACAC,IAAAA,iBAAiB,CAACD,cAAc,IAAIA,cAAc,GAAGmB,MAApC,CAAjB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BH,MAA3C;AACAI,IAAAA,UAAU,CAAC,YAAY;AACnBC,MAAAA,YAAY;AACf,KAFS,EAEP,IAFO,CAAV;AAGH,GAfD;;AAiBA,QAAMC,kBAAkB,GAAG,YAAY;AACnC,QAAIN,MAAM,GAAGP,eAAe,CAAC,EAAD,EAAK,EAAL,CAA5B;AACAT,IAAAA,yBAAyB,CAACH,cAAD,CAAzB;AACAC,IAAAA,iBAAiB,CAACD,cAAc,IAAIA,cAAc,GAAGmB,MAApC,CAAjB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BH,MAA3C;AACAI,IAAAA,UAAU,CAAC,YAAY;AACnBC,MAAAA,YAAY;AACf,KAFS,EAEP,IAFO,CAAV;AAGH,GARD;;AAUA,QAAME,eAAe,GAAG,YAAY;AAChC,QAAIC,IAAI,GAAG,CAAX;;AACA,QAAI/B,QAAQ,CAACwB,MAAT,KAAoB,QAAxB,EAAkC;AAC9BO,MAAAA,IAAI,GAAGf,eAAe,CAAC,EAAD,EAAK,EAAL,CAAtB;AACH,KAFD,MAEO;AACHe,MAAAA,IAAI,GAAGf,eAAe,CAAC,EAAD,EAAK,EAAL,CAAtB;AACH;;AACD,QAAKR,YAAY,GAAGuB,IAAhB,IAAyB,GAA7B,EAAkC;AAC9BpB,MAAAA,uBAAuB,CAACH,YAAD,CAAvB;AACAC,MAAAA,eAAe,CAACuB,YAAY,IAAI,GAAjB,CAAf;AACH,KAHD,MAGO,IAAIxB,YAAY,IAAI,EAApB,EAAwB;AAC3BuB,MAAAA,IAAI,GAAGf,eAAe,CAAC,EAAD,EAAK,EAAL,CAAtB;AACAL,MAAAA,uBAAuB,CAACH,YAAD,CAAvB;AACAC,MAAAA,eAAe,CAACD,YAAY,IAAIA,YAAY,GAAGuB,IAAhC,CAAf;AACH,KAJM,MAIA;AACH,YAAME,MAAM,GAAGzB,YAAY,GAAGuB,IAA9B;AACApB,MAAAA,uBAAuB,CAACH,YAAD,CAAvB;AACAC,MAAAA,eAAe,CAACD,YAAY,IAAIA,YAAY,GAAGuB,IAAhC,CAAf;AACH;;AACDN,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBK,IAArC;AACAJ,IAAAA,UAAU,CAAC,YAAY;AACnBC,MAAAA,YAAY;AACf,KAFS,EAEP,IAFO,CAAV;AAGH,GAvBD;;AAyBA,QAAMM,kBAAkB,GAAG,YAAY;AACnC,QAAIpB,iBAAiB,KAAK,KAA1B,EAAiC;AAC7B,UAAIqB,cAAc,GAAG,EAArB;AACA,UAAIC,UAAU,GAAG,EAAjB;AACA,YAAMC,cAAc,GAAG,CAACF,cAAD,EAAiBA,cAAjB,EAAiCC,UAAjC,CAAvB;AACA,YAAME,aAAa,GAAGnB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAtB;;AACA,UAAIgB,cAAc,CAACC,aAAD,CAAd,KAAkCH,cAAtC,EAAsD;AAClD5B,QAAAA,yBAAyB,CAACH,cAAD,CAAzB;AACAC,QAAAA,iBAAiB,CAACD,cAAc,IAAIA,cAAc,GAAG+B,cAApC,CAAjB;AACApB,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAf,QAAAA,QAAQ,CAACuC,WAAT,GAAuB,cAAvB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BS,cAA3C;AACAR,QAAAA,UAAU,CAAC,YAAY;AACnBC,UAAAA,YAAY;AACf,SAFS,EAEP,IAFO,CAAV;AAGH,OATD,MASO,IAAIS,cAAc,CAACC,aAAD,CAAd,KAAkCF,UAAtC,EAAkD;AACrDzB,QAAAA,uBAAuB,CAACH,YAAD,CAAvB;AACAC,QAAAA,eAAe,CAACD,YAAY,IAAIA,YAAY,GAAG4B,UAAhC,CAAf;AACArB,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAf,QAAAA,QAAQ,CAACuC,WAAT,GAAuB,cAAvB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCU,UAA7C;AACAT,QAAAA,UAAU,CAAC,YAAY;AACnBC,UAAAA,YAAY;AACf,SAFS,EAEP,IAFO,CAAV;AAGH;AACJ,KAxBD,MAwBO;AACH,aAAO,IAAP;AACH;AACJ,GA5BD;;AA8BA,QAAMA,YAAY,GAAG,YAAY;AAC7B,UAAMY,OAAO,GAAG,YAAY;AACxB,UAAIjB,MAAM,GAAG,CAAb;;AACA,UAAItB,UAAU,CAACuB,MAAX,KAAsB,QAA1B,EAAoC;AAChCD,QAAAA,MAAM,GAAGP,eAAe,CAAC,EAAD,EAAK,EAAL,CAAxB;AACH,OAFD,MAEO,IAAIf,UAAU,CAACuB,MAAX,KAAsB,WAA1B,EAAuC;AAC1CD,QAAAA,MAAM,GAAGP,eAAe,CAAC,EAAD,EAAK,EAAL,CAAxB;AACH,OAFM,MAEA;AACHO,QAAAA,MAAM,GAAGP,eAAe,CAAC,EAAD,EAAK,EAAL,CAAxB;AACH;;AACDL,MAAAA,uBAAuB,CAACH,YAAD,CAAvB;AACAC,MAAAA,eAAe,CAACD,YAAY,IAAIA,YAAY,GAAGe,MAAhC,CAAf;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BH,MAA3C;AACH,KAZD;;AAaA,UAAMkB,OAAO,GAAG,YAAY;AACxB,UAAIlB,MAAM,GAAGP,eAAe,CAAC,EAAD,EAAK,EAAL,CAA5B;AACAL,MAAAA,uBAAuB,CAACH,YAAD,CAAvB;AACAC,MAAAA,eAAe,CAACD,YAAY,IAAIA,YAAY,GAAGe,MAAhC,CAAf;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BH,MAA3C;AACH,KALD;;AAMA,UAAMmB,IAAI,GAAG,YAAY;AACrB,UAAIX,IAAI,GAAG,CAAX;;AACA,UAAI9B,UAAU,CAACuB,MAAX,KAAsB,QAA1B,EAAoC;AAChCO,QAAAA,IAAI,GAAGf,eAAe,CAAC,EAAD,EAAK,EAAL,CAAtB;AACH,OAFD,MAEO;AACHe,QAAAA,IAAI,GAAGf,eAAe,CAAC,EAAD,EAAK,EAAL,CAAtB;AACH;;AACD,UAAKZ,cAAc,GAAG2B,IAAlB,IAA2B,GAA/B,EAAoC;AAChCxB,QAAAA,yBAAyB,CAACH,cAAD,CAAzB;AACAC,QAAAA,iBAAiB,CAACD,cAAc,IAAI,GAAnB,CAAjB;AACH,OAHD,MAGO,IAAIA,cAAc,IAAI,EAAtB,EAA0B;AAC7B2B,QAAAA,IAAI,GAAGf,eAAe,CAAC,EAAD,EAAK,EAAL,CAAtB;AACAT,QAAAA,yBAAyB,CAACH,cAAD,CAAzB;AACAC,QAAAA,iBAAiB,CAACD,cAAc,IAAIA,cAAc,GAAG2B,IAApC,CAAjB;AACH,OAJM,MAIA;AACHxB,QAAAA,yBAAyB,CAACH,cAAD,CAAzB;AACAC,QAAAA,iBAAiB,CAACD,cAAc,IAAIA,cAAc,GAAG2B,IAApC,CAAjB;AACH;;AACDN,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BK,IAAvC;AACH,KAnBD;;AAoBA,UAAMY,OAAO,GAAG,YAAY;AACxB,UAAIR,cAAc,GAAG,EAArB;AACA,UAAIC,UAAU,GAAG,EAAjB;AACA,YAAMC,cAAc,GAAG,CAACF,cAAD,EAAiBA,cAAjB,EAAiCC,UAAjC,CAAvB;AACA,YAAME,aAAa,GAAGnB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAtB;;AACA,UAAIgB,cAAc,CAACC,aAAD,CAAd,KAAkCH,cAAtC,EAAsD;AAClDxB,QAAAA,uBAAuB,CAACH,YAAD,CAAvB;AACAC,QAAAA,eAAe,CAACD,YAAY,IAAIA,YAAY,GAAG2B,cAAhC,CAAf;AACAtB,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAZ,QAAAA,UAAU,CAACsC,WAAX,GAAyB,cAAzB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BS,cAA3C;AACH,OAND,MAMO,IAAIE,cAAc,CAACC,aAAD,CAAd,KAAkCF,UAAtC,EAAkD;AACrD7B,QAAAA,yBAAyB,CAACH,cAAD,CAAzB;AACAC,QAAAA,iBAAiB,CAACD,cAAc,IAAIA,cAAc,GAAGgC,UAApC,CAAjB;AACAvB,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAZ,QAAAA,UAAU,CAACsC,WAAX,GAAyB,cAAzB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCU,UAA/C;AACH;AACJ,KAlBD;;AAmBA,QAAIhC,cAAc,IAAI,EAAtB,EAA0B;AACtB,UAAIQ,mBAAmB,KAAK,KAA5B,EAAmC;AAC/B,cAAMgC,UAAU,GAAG,CAACJ,OAAD,EAAUC,OAAV,EAAmBE,OAAnB,CAAnB;AACA,cAAME,YAAY,GAAG1B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArB;AACAM,QAAAA,UAAU,CAAC,YAAY;AACnBiB,UAAAA,UAAU,CAACC,YAAD,CAAV;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OAND,MAMO;AACH,cAAMD,UAAU,GAAG,CAACJ,OAAD,EAAUC,OAAV,CAAnB;AACA,cAAMI,YAAY,GAAG1B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArB;AACAM,QAAAA,UAAU,CAAC,YAAY;AACnBiB,UAAAA,UAAU,CAACC,YAAD,CAAV;AACH,SAFS,EAEP,IAFO,CAAV;AAGH;AACJ,KAdD,MAcO,IAAIzC,cAAc,IAAI,EAAtB,EAA0B;AAC7B,UAAIQ,mBAAmB,KAAK,KAA5B,EAAmC;AAC/B,cAAMgC,UAAU,GAAG,CAACJ,OAAD,EAAUC,OAAV,EAAmBC,IAAnB,EAAyBC,OAAzB,CAAnB;AACA,cAAME,YAAY,GAAG1B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArB;AACAM,QAAAA,UAAU,CAAC,YAAY;AACnBiB,UAAAA,UAAU,CAACC,YAAD,CAAV;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OAND,MAMO;AACH,cAAMD,UAAU,GAAG,CAACJ,OAAD,EAAUC,OAAV,EAAmBC,IAAnB,CAAnB;AACA,cAAMG,YAAY,GAAG1B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArB;AACAM,QAAAA,UAAU,CAAC,YAAY;AACnBiB,UAAAA,UAAU,CAACC,YAAD,CAAV;AACH,SAFS,EAEP,IAFO,CAAV;AAGH;AACJ,KAdM,MAcA,IAAIzC,cAAc,IAAI,EAAtB,EAA0B;AAC7B,UAAIQ,mBAAmB,KAAK,KAA5B,EAAmC;AAC/B,cAAMgC,UAAU,GAAG,CAACJ,OAAD,EAAUC,OAAV,EAAmBC,IAAnB,EAAyBA,IAAzB,EAA+BC,OAA/B,CAAnB;AACA,cAAME,YAAY,GAAG1B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArB;AACAM,QAAAA,UAAU,CAAC,YAAY;AACnBiB,UAAAA,UAAU,CAACC,YAAD,CAAV;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OAND,MAMO;AACH,cAAMD,UAAU,GAAG,CAACJ,OAAD,EAAUC,OAAV,EAAmBC,IAAnB,EAAyBA,IAAzB,CAAnB;AACA,cAAMG,YAAY,GAAG1B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArB;AACAM,QAAAA,UAAU,CAAC,YAAY;AACnBiB,UAAAA,UAAU,CAACC,YAAD,CAAV;AACH,SAFS,EAEP,IAFO,CAAV;AAGH;AACJ,KAdM,MAcA,IAAIzC,cAAc,IAAI,EAAtB,EAA0B;AAC7B,UAAIQ,mBAAmB,KAAK,KAA5B,EAAmC;AAC/B,cAAMgC,UAAU,GAAG,CAACJ,OAAD,EAAUC,OAAV,EAAmBC,IAAnB,EAAyBA,IAAzB,EAA+BA,IAA/B,EAAqCA,IAArC,EAA2CC,OAA3C,CAAnB;AACA,cAAME,YAAY,GAAG1B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArB;AACAM,QAAAA,UAAU,CAAC,YAAY;AACnBiB,UAAAA,UAAU,CAACC,YAAD,CAAV;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OAND,MAMO;AACH,cAAMD,UAAU,GAAG,CAACJ,OAAD,EAAUC,OAAV,EAAmBC,IAAnB,EAAyBA,IAAzB,EAA+BA,IAA/B,EAAqCA,IAArC,CAAnB;AACA,cAAMG,YAAY,GAAG1B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArB;AACAM,QAAAA,UAAU,CAAC,YAAY;AACnBiB,UAAAA,UAAU,CAACC,YAAD,CAAV;AACH,SAFS,EAEP,IAFO,CAAV;AAGH;AACJ;AACJ,GApHD;;AAsHA,sBACI;AAAA,eACC1C,GAAG,CAAC2C,MAAJ,GAAa,CAAb,gBACD;AAAA,6BACA;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADC,gBAKD;AAAA;AAAA;AAAA;AAAA,YANA,eAQI;AAAA,iBACK9C,QAAQ,CAAC+C,IADd,eAGI;AAAA,gCACI;AAAA,iCAAI;AAAQ,YAAA,OAAO,EAAEzB,kBAAjB;AAAA,sBAAsCtB,QAAQ,CAACgD;AAA/C;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCAAI;AAAQ,YAAA,OAAO,EAAEnB,kBAAjB;AAAA,sBAAsC7B,QAAQ,CAACiD;AAA/C;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,iCAAI;AAAQ,YAAA,OAAO,EAAEnB,eAAjB;AAAA,sBAAmC9B,QAAQ,CAACkD;AAA5C;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,iCAAI;AAAQ,YAAA,OAAO,EAAEhB,kBAAjB;AAAA,sBAAsClC,QAAQ,CAACuC;AAA/C;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,iCAAI,QAAC,OAAD;AACA,YAAA,SAAS,EAAC,QADV;AAEA,YAAA,KAAK,EAAE7B,oBAFP;AAGA,YAAA,GAAG,EAAEF,YAHL;AAIA,YAAA,QAAQ,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAyBI;AAAA,iBACKP,UAAU,CAAC8C,IADhB,eAEI;AAAA,gCACI;AAAA,iCAAI;AAAA,sBAAS9C,UAAU,CAAC+C;AAApB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCAAI;AAAA,sBAAS/C,UAAU,CAACgD;AAApB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,iCAAI;AAAA,sBAAShD,UAAU,CAACiD;AAApB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,iCAAI;AAAA,sBAASjD,UAAU,CAACsC;AAApB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,iCAAI,QAAC,OAAD;AACA,YAAA,SAAS,EAAC,QADV;AAEA,YAAA,KAAK,EAAEjC,sBAFP;AAGA,YAAA,GAAG,EAAEF,cAHL;AAIA,YAAA,QAAQ,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA,kBADJ;AA4CH,CAzQD;;GAAML,W;;KAAAA,W;AA2QN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\n\nconst FightScreen = ({ playerDa, computerDa, onGameFinished, das }) => {\n\n    const [computerHealth, setComputerHealth] = useState(20);\n    const [previousComputerHealth, setPreviousComputerHealth] = useState(0);\n    const [playerHealth, setPlayerHealth] = useState(100);\n    const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n    const [computerSpecialUsed, setComputerSpecialUsed] = useState(false);\n    const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n\n    useEffect(() => {\n        if (computerHealth <= 0 & playerHealth > 0) {\n            onGameFinished(playerDa);\n        } else if (playerHealth <= 0 & computerHealth > 0) {\n            onGameFinished(computerDa);\n        }\n    }, [computerHealth, playerHealth])\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const handleAttack1Click = function () {\n        let damage = 0;\n        if (playerDa.daType === \"BUFFDA\") {\n            damage = getRandomNumber(18, 30)\n        } else if (playerDa.daType === \"AVERAGEDA\") {\n            damage = getRandomNumber(23, 25)\n        } else {\n            damage = getRandomNumber(18, 25)\n        }\n        setPreviousComputerHealth(computerHealth)\n        setComputerHealth(computerHealth => computerHealth - damage)\n        console.log(\"player hit computer for : \" + damage);\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleAttack2Click = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousComputerHealth(computerHealth)\n        setComputerHealth(computerHealth => computerHealth - damage)\n        console.log(\"player hit computer for : \" + damage);\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleHealClick = function () {\n        let heal = 0;\n        if (playerDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerHealth + heal) >= 100) {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerhealth => 100)\n        } else if (playerHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        } else {\n            const health = playerHealth + heal;\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        }\n        console.log(\"player healed for : \" + heal);\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleSpecialClick = function () {\n        if (playerSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - opponentDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit computer for : \" + opponentDamage);\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - selfDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit themselves for : \" + selfDamage);\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const computerTurn = function () {\n        const Attack1 = function () {\n            let damage = 0;\n            if (computerDa.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (computerDa.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth - damage)\n            console.log(\"computer hit player for : \" + damage);\n        }\n        const Attack2 = function () {\n            let damage = getRandomNumber(10, 35);\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth - damage);\n            console.log(\"computer hit player for : \" + damage);\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDa.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerHealth + heal) >= 100) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => 100);\n            } else if (computerHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            } else {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            }\n            console.log(\"computer healed for : \" + heal);\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n                setComputerSpecialUsed(true);\n                computerDa.specialName = \"Special Used\"\n                console.log(\"computer hit player for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - selfDamage);\n                setComputerSpecialUsed(true);\n                computerDa.specialName = \"Special Used\"\n                console.log(\"computer hit themselves for : \" + selfDamage);\n            }\n        }\n        if (computerHealth >= 80) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 60) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 40) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth <= 39) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n    };\n\n    return (\n        <>\n        {das.length < 2 ?\n        <div>\n        <h1 className=\"health\">FINAL ROUND</h1>\n        </div>\n        :\n        <div></div>\n        }\n            <div>\n                {playerDa.name}\n                {/* <img src={`${process.env.PUBLIC_URL}/${playerDa.specialName}`} /> */}\n                <ul>\n                    <li><button onClick={handleAttack1Click}>{playerDa.attackOneName}</button></li>\n                    <li><button onClick={handleAttack2Click}>{playerDa.attackTwoName}</button></li>\n                    <li><button onClick={handleHealClick}>{playerDa.healName}</button></li>\n                    <li><button onClick={handleSpecialClick}>{playerDa.specialName}</button></li>\n                    <li><CountUp\n                        className=\"health\"\n                        start={previousPlayerHealth}\n                        end={playerHealth}\n                        duration=\"1\"\n                    />\n                    </li>\n                </ul>\n            </div>\n            <div>\n                {computerDa.name}\n                <ul>\n                    <li><button>{computerDa.attackOneName}</button></li>\n                    <li><button>{computerDa.attackTwoName}</button></li>\n                    <li><button>{computerDa.healName}</button></li>\n                    <li><button>{computerDa.specialName}</button></li>\n                    <li><CountUp\n                        className=\"health\"\n                        start={previousComputerHealth}\n                        end={computerHealth}\n                        duration=\"1\"\n                    />\n                    </li>\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default FightScreen;"]},"metadata":{},"sourceType":"module"}