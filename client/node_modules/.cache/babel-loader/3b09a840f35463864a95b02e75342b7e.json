{"ast":null,"code":"var _jsxFileName = \"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport { getFID } from 'web-vitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FightScreen = _ref => {\n  _s();\n\n  let {\n    playerDa,\n    computerDa,\n    onGameFinished,\n    das\n  } = _ref;\n  const [computerHealth, setComputerHealth] = useState(100);\n  const [previousComputerHealth, setPreviousComputerHealth] = useState(0);\n  const [playerHealth, setPlayerHealth] = useState(100);\n  const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n  const [computerSpecialUsed, setComputerSpecialUsed] = useState(false);\n  const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n  const [gameFinished, setGameFinished] = useState(false);\n  const [gif, setGif] = useState(false);\n  useEffect(() => {\n    if (computerHealth <= 0 & playerHealth > 0) {\n      onGameFinished(playerDa);\n    } else if (playerHealth <= 0 & computerHealth > 0) {\n      onGameFinished(computerDa);\n    }\n  }, [computerHealth, playerHealth]);\n\n  const playSound = function () {\n    let audio1 = new Audio(\"/sound1.wav\");\n    let audio2 = new Audio(\"/sound2.wav\");\n    let audio3 = new Audio(\"/sound3.wav\");\n    let audio4 = new Audio(\"/sound4.wav\");\n    const randomAudio = [audio1, audio2, audio3, audio4];\n    const randomNumber = Math.floor(Math.random() * 4);\n    const chosenSound = randomAudio[randomNumber];\n    chosenSound.play();\n  };\n\n  const getRandomNumber = function (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const handleAttack1Click = function () {\n    let damage = 0;\n\n    if (playerDa.daType === \"BUFFDA\") {\n      damage = getRandomNumber(18, 30);\n    } else if (playerDa.daType === \"AVERAGEDA\") {\n      damage = getRandomNumber(23, 25);\n    } else {\n      damage = getRandomNumber(18, 25);\n    }\n\n    setPreviousComputerHealth(computerHealth);\n    setComputerHealth(computerHealth => computerHealth - damage);\n    console.log(\"player hit computer for : \" + damage);\n    playSound(); // checkIfGameFinished()\n\n    setGif(true);\n    setTimeout(function () {\n      setGif(false);\n    }, 1500);\n    setTimeout(function () {\n      computerTurn();\n    }, 2000);\n  };\n\n  const handleAttack2Click = function () {\n    let damage = getRandomNumber(10, 35);\n    setPreviousComputerHealth(computerHealth);\n    setComputerHealth(computerHealth => computerHealth - damage);\n    console.log(\"player hit computer for : \" + damage); // checkIfGameFinished();\n\n    setGif(true);\n    setTimeout(function () {\n      setGif(false);\n    }, 1500);\n    setTimeout(function () {\n      computerTurn();\n    }, 2000);\n  };\n\n  const handleHealClick = function () {\n    let heal = 0;\n\n    if (playerDa.daType === \"SOFTDA\") {\n      heal = getRandomNumber(23, 25);\n    } else {\n      heal = getRandomNumber(18, 25);\n    }\n\n    if (playerHealth + heal >= 100) {\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerhealth => 100);\n    } else if (playerHealth <= 30) {\n      heal = getRandomNumber(24, 25);\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth + heal);\n    } else {\n      const health = playerHealth + heal;\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth + heal);\n    }\n\n    console.log(\"player healed for : \" + heal);\n    setTimeout(function () {\n      computerTurn();\n    }, 2000);\n  };\n\n  const handleSpecialClick = function () {\n    if (playerSpecialUsed === false) {\n      let opponentDamage = 45;\n      let selfDamage = 25;\n      const specialOutcome = [opponentDamage, opponentDamage, selfDamage];\n      const specialNumber = Math.floor(Math.random() * 3);\n\n      if (specialOutcome[specialNumber] === opponentDamage) {\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => computerHealth - opponentDamage);\n        setPlayerSpecialUsed(true);\n        playerDa.specialName = \"Special Used\";\n        console.log(\"player hit computer for : \" + opponentDamage);\n        setTimeout(function () {\n          computerTurn();\n        }, 2000);\n      } else if (specialOutcome[specialNumber] === selfDamage) {\n        setPreviousPlayerHealth(playerHealth);\n        setPlayerHealth(playerHealth => playerHealth - selfDamage);\n        setPlayerSpecialUsed(true);\n        playerDa.specialName = \"Special Used\";\n        console.log(\"player hit themselves for : \" + selfDamage);\n        setTimeout(function () {\n          computerTurn();\n        }, 2000);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const computerTurn = function () {\n    const Attack1 = function () {\n      let damage = 0;\n\n      if (computerDa.daType === \"BUFFDA\") {\n        damage = getRandomNumber(18, 30);\n      } else if (computerDa.daType === \"AVERAGEDA\") {\n        damage = getRandomNumber(23, 25);\n      } else {\n        damage = getRandomNumber(18, 25);\n      }\n\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth - damage);\n      console.log(\"computer hit player for : \" + damage); // checkIfGameFinished();\n\n      setGif(true);\n      setTimeout(function () {\n        setGif(false);\n      }, 1500);\n    };\n\n    const Attack2 = function () {\n      let damage = getRandomNumber(10, 35);\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth - damage);\n      console.log(\"computer hit player for : \" + damage); // checkIfGameFinished();\n\n      setGif(true);\n      setTimeout(function () {\n        setGif(false);\n      }, 1500);\n    };\n\n    const Heal = function () {\n      let heal = 0;\n\n      if (computerDa.daType === \"SOFTDA\") {\n        heal = getRandomNumber(23, 25);\n      } else {\n        heal = getRandomNumber(18, 25);\n      }\n\n      if (computerHealth + heal >= 100) {\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => 100);\n      } else if (computerHealth <= 30) {\n        heal = getRandomNumber(24, 25);\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => computerHealth + heal);\n      } else {\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => computerHealth + heal);\n      }\n\n      console.log(\"computer healed for : \" + heal);\n    };\n\n    const Special = function () {\n      let opponentDamage = 45;\n      let selfDamage = 25;\n      const specialOutcome = [opponentDamage, opponentDamage, selfDamage];\n      const specialNumber = Math.floor(Math.random() * 3);\n\n      if (specialOutcome[specialNumber] === opponentDamage) {\n        setPreviousPlayerHealth(playerHealth);\n        setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n        setComputerSpecialUsed(true);\n        computerDa.specialName = \"Special Used\";\n        console.log(\"computer hit player for : \" + opponentDamage);\n      } else if (specialOutcome[specialNumber] === selfDamage) {\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => computerHealth - selfDamage);\n        setComputerSpecialUsed(true);\n        computerDa.specialName = \"Special Used\";\n        console.log(\"computer hit themselves for : \" + selfDamage);\n      }\n    };\n\n    if (computerHealth >= 80) {\n      if (computerSpecialUsed === false) {\n        const randomMove = [Attack1, Attack2, Special];\n        const randomNumber = Math.floor(Math.random() * 3);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      } else {\n        const randomMove = [Attack1, Attack2];\n        const randomNumber = Math.floor(Math.random() * 2);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      }\n    } else if (computerHealth >= 60) {\n      if (computerSpecialUsed === false) {\n        const randomMove = [Attack1, Attack2, Heal, Special];\n        const randomNumber = Math.floor(Math.random() * 4);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      } else {\n        const randomMove = [Attack1, Attack2, Heal];\n        const randomNumber = Math.floor(Math.random() * 3);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      }\n    } else if (computerHealth >= 40) {\n      if (computerSpecialUsed === false) {\n        const randomMove = [Attack1, Attack2, Heal, Heal, Special];\n        const randomNumber = Math.floor(Math.random() * 5);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      } else {\n        const randomMove = [Attack1, Attack2, Heal, Heal];\n        const randomNumber = Math.floor(Math.random() * 4);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      }\n    } else if (computerHealth <= 39) {\n      if (computerSpecialUsed === false) {\n        const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special];\n        const randomNumber = Math.floor(Math.random() * 7);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      } else {\n        const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal];\n        const randomNumber = Math.floor(Math.random() * 6);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      }\n    }\n  };\n\n  const showFist = function () {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/fist.gif`,\n      height: \"200px\",\n      width: \"200px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 16\n    }, this);\n  };\n\n  if (gameFinished === false) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [das.length < 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"health\",\n          children: \"FINAL ROUND\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/${playerDa.imgName}`,\n          width: \"200\",\n          height: \"250\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: playerDa.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: playerDa.bio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: [playerDa.attackOneName, \"...  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAttack1Click,\n              children: \"ATTACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 77\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: [playerDa.attackTwoName, \"...  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAttack2Click,\n              children: \"ATTACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 77\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: [playerDa.healName, \"...  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleHealClick,\n              children: \"HEAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 72\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), previousPlayerHealth > playerHealth ? /*#__PURE__*/_jsxDEV(CountUp, {\n          className: \"countUpRed\",\n          start: previousPlayerHealth,\n          end: playerHealth,\n          duration: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(CountUp, {\n          className: \"countUpGreen\",\n          start: previousPlayerHealth,\n          end: playerHealth,\n          duration: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), gif === true ? showFist() : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/${computerDa.imgName}`,\n          width: \"220\",\n          height: \"250\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: computerDa.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: computerDa.bio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: [computerDa.attackOneName, \"...  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"ATTACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 79\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: [computerDa.attackTwoName, \"...  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"ATTACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 79\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: [computerDa.healName, \"...  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"HEAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 74\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), previousComputerHealth > computerHealth ? /*#__PURE__*/_jsxDEV(CountUp, {\n          className: \"countUpRed\",\n          start: previousComputerHealth,\n          end: computerHealth,\n          duration: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(CountUp, {\n          className: \"countUpGreen\",\n          start: previousComputerHealth,\n          end: computerHealth,\n          duration: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    if (computerHealth <= 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [playerDa.name, \" smashed \", computerDa.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"You Win !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [computerDa.name, \" wrecked \", playerDa.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"You Lose !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } //         <div>\n    //             {playerDa.name}\n    //             {/* <img src={`${process.env.PUBLIC_URL}/${playerDa.specialName}`} /> */}\n    //             <ul>\n    //                 <li><button onClick={handleAttack1Click}>{playerDa.attackOneName}</button></li>\n    //                 <li><button onClick={handleAttack2Click}>{playerDa.attackTwoName}</button></li>\n    //                 <li><button onClick={handleHealClick}>{playerDa.healName}</button></li>\n    //                 <li><button onClick={handleSpecialClick}>{playerDa.specialName}</button></li>\n    //                 <li><CountUp\n    //                     className=\"health\"\n    //                     start={previousPlayerHealth}\n    //                     end={playerHealth}\n    //                     duration=\"1\"\n    //                 />\n    //                 </li>\n    //             </ul>\n    //         </div>\n    //         <div>\n    //             {computerDa.name}\n    //             <ul>\n    //                 <li><button>{computerDa.attackOneName}</button></li>\n    //                 <li><button>{computerDa.attackTwoName}</button></li>\n    //                 <li><button>{computerDa.healName}</button></li>\n    //                 <li><button>{computerDa.specialName}</button></li>\n    //                 <li><CountUp\n    //                     className=\"health\"\n    //                     start={previousComputerHealth}\n    //                     end={computerHealth}\n    //                     duration=\"1\"\n    //                 />\n    //                 </li>\n    //             </ul>\n    //         </div>\n    //     </>\n\n  }\n};\n\n_s(FightScreen, \"R4BGYGUjFvagC77DdfadupgOAPQ=\");\n\n_c = FightScreen;\nexport default FightScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FightScreen\");","map":{"version":3,"sources":["/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js"],"names":["React","useEffect","useState","CountUp","Link","getFID","FightScreen","playerDa","computerDa","onGameFinished","das","computerHealth","setComputerHealth","previousComputerHealth","setPreviousComputerHealth","playerHealth","setPlayerHealth","previousPlayerHealth","setPreviousPlayerHealth","computerSpecialUsed","setComputerSpecialUsed","playerSpecialUsed","setPlayerSpecialUsed","gameFinished","setGameFinished","gif","setGif","playSound","audio1","Audio","audio2","audio3","audio4","randomAudio","randomNumber","Math","floor","random","chosenSound","play","getRandomNumber","min","max","handleAttack1Click","damage","daType","console","log","setTimeout","computerTurn","handleAttack2Click","handleHealClick","heal","playerhealth","health","handleSpecialClick","opponentDamage","selfDamage","specialOutcome","specialNumber","specialName","Attack1","Attack2","Heal","Special","randomMove","showFist","process","env","PUBLIC_URL","length","imgName","name","bio","attackOneName","attackTwoName","healName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\nimport { getFID } from 'web-vitals';\n\nconst FightScreen = ({ playerDa, computerDa, onGameFinished, das }) => {\n\n    const [computerHealth, setComputerHealth] = useState(100);\n    const [previousComputerHealth, setPreviousComputerHealth] = useState(0);\n    const [playerHealth, setPlayerHealth] = useState(100);\n    const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n    const [computerSpecialUsed, setComputerSpecialUsed] = useState(false);\n    const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [gif, setGif] = useState(false)\n\n    useEffect(() => {\n        if (computerHealth <= 0 & playerHealth > 0) {\n            onGameFinished(playerDa);\n        } else if (playerHealth <= 0 & computerHealth > 0) {\n            onGameFinished(computerDa);\n        }\n    }, [computerHealth, playerHealth])\n\n    const playSound = function () {\n        let audio1 = new Audio (\"/sound1.wav\")\n        let audio2 = new Audio (\"/sound2.wav\")\n        let audio3 = new Audio (\"/sound3.wav\")\n        let audio4 = new Audio (\"/sound4.wav\")\n        const randomAudio = [audio1, audio2, audio3, audio4]\n        const randomNumber = Math.floor(Math.random() * 4);\n        const chosenSound = randomAudio[randomNumber]\n        chosenSound.play()\n    };\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const handleAttack1Click = function () {\n        let damage = 0;\n        if (playerDa.daType === \"BUFFDA\") {\n            damage = getRandomNumber(18, 30)\n        } else if (playerDa.daType === \"AVERAGEDA\") {\n            damage = getRandomNumber(23, 25)\n        } else {\n            damage = getRandomNumber(18, 25)\n        }\n        setPreviousComputerHealth(computerHealth)\n        setComputerHealth(computerHealth => computerHealth - damage)\n        console.log(\"player hit computer for : \" + damage);\n        playSound()\n        // checkIfGameFinished()\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleAttack2Click = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousComputerHealth(computerHealth)\n        setComputerHealth(computerHealth => computerHealth - damage)\n        console.log(\"player hit computer for : \" + damage);\n        // checkIfGameFinished();\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleHealClick = function () {\n        let heal = 0;\n        if (playerDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerHealth + heal) >= 100) {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerhealth => 100)\n        } else if (playerHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        } else {\n            const health = playerHealth + heal;\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        }\n        console.log(\"player healed for : \" + heal);\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleSpecialClick = function () {\n        if (playerSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - opponentDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit computer for : \" + opponentDamage);\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - selfDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit themselves for : \" + selfDamage);\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const computerTurn = function () {\n        const Attack1 = function () {\n            let damage = 0;\n            if (computerDa.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (computerDa.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth - damage)\n            console.log(\"computer hit player for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Attack2 = function () {\n            let damage = getRandomNumber(10, 35);\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth - damage);\n            console.log(\"computer hit player for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDa.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerHealth + heal) >= 100) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => 100);\n            } else if (computerHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            } else {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            }\n            console.log(\"computer healed for : \" + heal);\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n                setComputerSpecialUsed(true);\n                computerDa.specialName = \"Special Used\"\n                console.log(\"computer hit player for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - selfDamage);\n                setComputerSpecialUsed(true);\n                computerDa.specialName = \"Special Used\"\n                console.log(\"computer hit themselves for : \" + selfDamage);\n            }\n        }\n        if (computerHealth >= 80) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 60) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 40) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth <= 39) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n    };\n\n\n    const showFist = function () {\n        return <img src={`${process.env.PUBLIC_URL}/fist.gif`} height=\"200px\" width=\"200px\" />\n    }\n\n\n\n    if (gameFinished === false) {\n        return (\n            <>\n                {das.length < 2 ?\n                    <div>\n                        <h1 className=\"health\">FINAL ROUND</h1>\n                    </div>\n                    :\n                    <div></div>}\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${playerDa.imgName}`} width=\"200\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{playerDa.name}</li>\n                        <li className=\"health\">{playerDa.bio}</li>\n                        <li className=\"health\">{playerDa.attackOneName}...  <button onClick={handleAttack1Click}>ATTACK</button></li>\n                        <li className=\"health\">{playerDa.attackTwoName}...  <button onClick={handleAttack2Click}>ATTACK</button></li>\n                        <li className=\"health\">{playerDa.healName}...  <button onClick={handleHealClick}>HEAL</button></li>\n                    </ul>\n                    {previousPlayerHealth > playerHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n                {gif === true ? showFist() : null}\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${computerDa.imgName}`} width=\"220\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{computerDa.name}</li>\n                        <li className=\"health\">{computerDa.bio}</li>\n                        <li className=\"health\">{computerDa.attackOneName}...  <button>ATTACK</button></li>\n                        <li className=\"health\">{computerDa.attackTwoName}...  <button>ATTACK</button></li>\n                        <li className=\"health\">{computerDa.healName}...  <button>HEAL</button></li>\n                    </ul>\n\n                    {previousComputerHealth > computerHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousComputerHealth}\n                            end={computerHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousComputerHealth}\n                            end={computerHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n            </>\n        )\n    } else {\n        if (computerHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerDa.name} smashed {computerDa.name}</h1>\n                        <h2>You Win !</h2>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDa.name} wrecked {playerDa.name}</h1>\n                        <h2>You Lose !</h2>\n                    </div>\n                </>\n            )\n        }\n\n        //         <div>\n        //             {playerDa.name}\n        //             {/* <img src={`${process.env.PUBLIC_URL}/${playerDa.specialName}`} /> */}\n        //             <ul>\n        //                 <li><button onClick={handleAttack1Click}>{playerDa.attackOneName}</button></li>\n        //                 <li><button onClick={handleAttack2Click}>{playerDa.attackTwoName}</button></li>\n        //                 <li><button onClick={handleHealClick}>{playerDa.healName}</button></li>\n        //                 <li><button onClick={handleSpecialClick}>{playerDa.specialName}</button></li>\n        //                 <li><CountUp\n        //                     className=\"health\"\n        //                     start={previousPlayerHealth}\n        //                     end={playerHealth}\n        //                     duration=\"1\"\n        //                 />\n        //                 </li>\n        //             </ul>\n        //         </div>\n        //         <div>\n        //             {computerDa.name}\n        //             <ul>\n        //                 <li><button>{computerDa.attackOneName}</button></li>\n        //                 <li><button>{computerDa.attackTwoName}</button></li>\n        //                 <li><button>{computerDa.healName}</button></li>\n        //                 <li><button>{computerDa.specialName}</button></li>\n        //                 <li><CountUp\n        //                     className=\"health\"\n        //                     start={previousComputerHealth}\n        //                     end={computerHealth}\n        //                     duration=\"1\"\n        //                 />\n        //                 </li>\n        //             </ul>\n        //         </div>\n        //     </>\n    }\n}\n\nexport default FightScreen;"]},"metadata":{},"sourceType":"module"}