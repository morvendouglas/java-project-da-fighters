{"ast":null,"code":"var _jsxFileName = \"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CountUp from 'react-countup';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FightScreen = _ref => {\n  _s();\n\n  let {\n    playerDa,\n    computerDa,\n    foughtDas,\n    updateComputerDa\n  } = _ref;\n  const [computerHealth, setComputerHealth] = useState(100);\n  const [previousComputerHealth, setPreviousComputerHealth] = useState(0);\n  const [playerHealth, setPlayerHealth] = useState(100);\n  const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n  const [computerSpecialUsed, setComputerSpecialUsed] = useState(false);\n  const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n  const [gameFinished, setGameFinished] = useState(false);\n  const [foughtDaList, setFoughtDaList] = useState(foughtDas);\n  const [opponent, setOpponent] = useState(computerDa);\n  useEffect(() => {\n    if (computerHealth <= 0 || playerHealth <= 0) {\n      setGameFinished(true);\n    }\n  }, [computerHealth, playerHealth]);\n\n  const getRandomNumber = function (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const handleAttack1Click = function () {\n    let damage = 0;\n\n    if (playerDa.daType === \"BUFFDA\") {\n      damage = getRandomNumber(18, 30);\n    } else if (playerDa.daType === \"AVERAGEDA\") {\n      damage = getRandomNumber(23, 25);\n    } else {\n      damage = getRandomNumber(18, 25);\n    }\n\n    setPreviousComputerHealth(computerHealth);\n    setComputerHealth(computerHealth => computerHealth - damage);\n    console.log(\"player hit computer for : \" + damage);\n    setTimeout(function () {\n      computerTurn();\n    }, 2000);\n  };\n\n  const handleAttack2Click = function () {\n    let damage = getRandomNumber(10, 35);\n    setPreviousComputerHealth(computerHealth);\n    setComputerHealth(computerHealth => computerHealth - damage);\n    console.log(\"player hit computer for : \" + damage);\n    setTimeout(function () {\n      computerTurn();\n    }, 2000);\n  };\n\n  const handleHealClick = function () {\n    let heal = 0;\n\n    if (playerDa.daType === \"SOFTDA\") {\n      heal = getRandomNumber(23, 25);\n    } else {\n      heal = getRandomNumber(18, 25);\n    }\n\n    if (playerHealth + heal >= 100) {\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerhealth => 100);\n    } else if (playerHealth <= 30) {\n      heal = getRandomNumber(24, 25);\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth + heal);\n    } else {\n      const health = playerHealth + heal;\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth + heal);\n    }\n\n    console.log(\"player healed for : \" + heal);\n    setTimeout(function () {\n      computerTurn();\n    }, 2000);\n  };\n\n  const handleSpecialClick = function () {\n    if (playerSpecialUsed === false) {\n      let opponentDamage = 45;\n      let selfDamage = 25;\n      const specialOutcome = [opponentDamage, opponentDamage, selfDamage];\n      const specialNumber = Math.floor(Math.random() * 3);\n\n      if (specialOutcome[specialNumber] === opponentDamage) {\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => computerHealth - opponentDamage);\n        setPlayerSpecialUsed(true);\n        console.log(\"player hit computer for : \" + opponentDamage);\n        setTimeout(function () {\n          computerTurn();\n        }, 2000);\n      } else if (specialOutcome[specialNumber] === selfDamage) {\n        setPreviousPlayerHealth(playerHealth);\n        setPlayerHealth(playerHealth => playerHealth - selfDamage);\n        setPlayerSpecialUsed(true);\n        console.log(\"player hit themselves for : \" + selfDamage);\n        setTimeout(function () {\n          computerTurn();\n        }, 2000);\n      } else {\n        return null;\n      }\n    }\n  };\n\n  const computerTurn = function () {\n    const Attack1 = function () {\n      let damage = 0;\n\n      if (computerDa.daType === \"BUFFDA\") {\n        damage = getRandomNumber(18, 30);\n      } else if (computerDa.daType === \"AVERAGEDA\") {\n        damage = getRandomNumber(23, 25);\n      } else {\n        damage = getRandomNumber(18, 25);\n      }\n\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth - damage);\n      console.log(\"computer hit player for : \" + damage);\n    };\n\n    const Attack2 = function () {\n      let damage = getRandomNumber(10, 35);\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth - damage);\n      console.log(\"computer hit player for : \" + damage);\n    };\n\n    const Heal = function () {\n      let heal = 0;\n\n      if (computerDa.daType === \"SOFTDA\") {\n        heal = getRandomNumber(23, 25);\n      } else {\n        heal = getRandomNumber(18, 25);\n      }\n\n      if (computerHealth + heal >= 100) {\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => 100);\n      } else if (computerHealth <= 30) {\n        heal = getRandomNumber(24, 25);\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => computerHealth + heal);\n      } else {\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => computerHealth + heal);\n      }\n\n      console.log(\"computer healed for : \" + heal);\n    };\n\n    const Special = function () {\n      let opponentDamage = 45;\n      let selfDamage = 25;\n      const specialOutcome = [opponentDamage, opponentDamage, selfDamage];\n      const specialNumber = Math.floor(Math.random() * 3);\n\n      if (specialOutcome[specialNumber] === opponentDamage) {\n        setPreviousPlayerHealth(playerHealth);\n        setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n        setComputerSpecialUsed(true);\n        console.log(\"computer hit player for : \" + opponentDamage);\n      } else if (specialOutcome[specialNumber] === selfDamage) {\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => computerHealth - selfDamage);\n        setComputerSpecialUsed(true);\n        console.log(\"computer hit themselves for : \" + selfDamage);\n      }\n    };\n\n    if (computerHealth >= 80) {\n      if (computerSpecialUsed === false) {\n        const randomMove = [Attack1, Attack2, Special];\n        const randomNumber = Math.floor(Math.random() * 3);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      } else {\n        const randomMove = [Attack1, Attack2];\n        const randomNumber = Math.floor(Math.random() * 2);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      }\n    } else if (computerHealth >= 60) {\n      if (computerSpecialUsed === false) {\n        const randomMove = [Attack1, Attack2, Heal, Special];\n        const randomNumber = Math.floor(Math.random() * 4);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      } else {\n        const randomMove = [Attack1, Attack2, Heal];\n        const randomNumber = Math.floor(Math.random() * 3);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      }\n    } else if (computerHealth >= 40) {\n      if (computerSpecialUsed === false) {\n        const randomMove = [Attack1, Attack2, Heal, Heal, Special];\n        const randomNumber = Math.floor(Math.random() * 5);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      } else {\n        const randomMove = [Attack1, Attack2, Heal, Heal];\n        const randomNumber = Math.floor(Math.random() * 4);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      }\n    } else if (computerHealth <= 39) {\n      if (computerSpecialUsed === false) {\n        const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special];\n        const randomNumber = Math.floor(Math.random() * 7);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      } else {\n        const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal];\n        const randomNumber = Math.floor(Math.random() * 6);\n        setTimeout(function () {\n          randomMove[randomNumber]();\n        }, 1000);\n      }\n    }\n  };\n\n  const removeComputerDaFromList = function () {\n    const copiedDas = [...foughtDas];\n\n    for (var i = 0; i < copiedDas.length; i++) {\n      if (copiedDas[i] === computerDa) {\n        copiedDas.splice(i, 1);\n      }\n    }\n\n    setFoughtDaList(copiedDas);\n  };\n\n  const selectNextComputerDa = function () {\n    const randomIndex = Math.floor(Math.random() * foughtDas.length);\n    const randomDa = foughtDas[randomIndex];\n    updateComputerDa(randomDa);\n  };\n\n  const onNextClick = function () {\n    removeComputerDaFromList();\n    selectNextComputerDa();\n    setComputerHealth(100);\n    setPreviousComputerHealth(0);\n    setPlayerHealth(100);\n    setPreviousPlayerHealth(0);\n    setComputerSpecialUsed(false);\n    setPlayerSpecialUsed(false);\n    setGameFinished(false);\n  };\n\n  if (gameFinished === false) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [playerDa.name, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAttack1Click,\n              children: playerDa.attackOneName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAttack2Click,\n              children: playerDa.attackTwoName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleHealClick,\n              children: playerDa.healName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSpecialClick,\n              children: playerDa.specialName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(CountUp, {\n              className: \"health\",\n              start: previousPlayerHealth,\n              end: playerHealth,\n              duration: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [computerDa.name, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: computerDa.attackOneName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: computerDa.attackTwoName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: computerDa.healName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: computerDa.specialName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(CountUp, {\n              className: \"health\",\n              start: previousComputerHealth,\n              end: computerHealth,\n              duration: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    if (computerHealth <= 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [playerDa.name, \" smashed \", computerDa.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"You Win !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onNextClick,\n            children: \"Who's next ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [computerDa.name, \" wrecked \", playerDa.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"You Lose !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/select\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: \"Play Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n  }\n};\n\n_s(FightScreen, \"lpB5vJ6HN/PE4bjANj4PSPvDsQM=\");\n\n_c = FightScreen;\nexport default FightScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FightScreen\");","map":{"version":3,"sources":["/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js"],"names":["React","useEffect","useState","CountUp","Link","Route","Switch","FightScreen","playerDa","computerDa","foughtDas","updateComputerDa","computerHealth","setComputerHealth","previousComputerHealth","setPreviousComputerHealth","playerHealth","setPlayerHealth","previousPlayerHealth","setPreviousPlayerHealth","computerSpecialUsed","setComputerSpecialUsed","playerSpecialUsed","setPlayerSpecialUsed","gameFinished","setGameFinished","foughtDaList","setFoughtDaList","opponent","setOpponent","getRandomNumber","min","max","Math","floor","random","handleAttack1Click","damage","daType","console","log","setTimeout","computerTurn","handleAttack2Click","handleHealClick","heal","playerhealth","health","handleSpecialClick","opponentDamage","selfDamage","specialOutcome","specialNumber","Attack1","Attack2","Heal","Special","randomMove","randomNumber","removeComputerDaFromList","copiedDas","i","length","splice","selectNextComputerDa","randomIndex","randomDa","onNextClick","name","attackOneName","attackTwoName","healName","specialName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CountUp from 'react-countup';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport '../App.css'\n\nconst FightScreen = ({ playerDa, computerDa, foughtDas, updateComputerDa}) => {\n\n    const [computerHealth, setComputerHealth] = useState(100);\n    const [previousComputerHealth, setPreviousComputerHealth] = useState(0);\n    const [playerHealth, setPlayerHealth] = useState(100);\n    const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n    const [computerSpecialUsed, setComputerSpecialUsed] = useState(false);\n    const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [foughtDaList, setFoughtDaList] = useState(foughtDas)\n    const [opponent, setOpponent] = useState(computerDa)\n\n    useEffect(() => {\n        if (computerHealth <= 0 || playerHealth <= 0) {\n            setGameFinished(true);\n        }\n    }, [computerHealth, playerHealth])\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const handleAttack1Click = function () {\n        let damage = 0;\n        if (playerDa.daType === \"BUFFDA\") {\n            damage = getRandomNumber(18, 30)\n        } else if (playerDa.daType === \"AVERAGEDA\") {\n            damage = getRandomNumber(23, 25)\n        } else {\n            damage = getRandomNumber(18, 25)\n        }\n        setPreviousComputerHealth(computerHealth)\n        setComputerHealth(computerHealth => computerHealth - damage)\n        console.log(\"player hit computer for : \" + damage);\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleAttack2Click = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousComputerHealth(computerHealth)\n        setComputerHealth(computerHealth => computerHealth - damage)\n        console.log(\"player hit computer for : \" + damage);\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleHealClick = function () {\n        let heal = 0;\n        if (playerDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerHealth + heal) >= 100) {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerhealth => 100)\n        } else if (playerHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        } else {\n            const health = playerHealth + heal;\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        }\n        console.log(\"player healed for : \" + heal);\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleSpecialClick = function () {\n        if (playerSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - opponentDamage);\n                setPlayerSpecialUsed(true);\n                console.log(\"player hit computer for : \" + opponentDamage);\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - selfDamage);\n                setPlayerSpecialUsed(true);\n                console.log(\"player hit themselves for : \" + selfDamage);\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            } else {\n                return null;\n            }\n        }\n    }\n\n    const computerTurn = function () {\n\n        const Attack1 = function () {\n            let damage = 0;\n            if (computerDa.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (computerDa.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth - damage)\n            console.log(\"computer hit player for : \" + damage);\n        }\n        const Attack2 = function () {\n            let damage = getRandomNumber(10, 35);\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth - damage);\n            console.log(\"computer hit player for : \" + damage);\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDa.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerHealth + heal) >= 100) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => 100);\n            } else if (computerHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            } else {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            }\n            console.log(\"computer healed for : \" + heal);\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n                setComputerSpecialUsed(true);\n                console.log(\"computer hit player for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - selfDamage);\n                setComputerSpecialUsed(true);\n                console.log(\"computer hit themselves for : \" + selfDamage);\n            }\n        }\n        if (computerHealth >= 80) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 60) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 40) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth <= 39) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n    }\n\n    const removeComputerDaFromList = function () {\n        const copiedDas = [...foughtDas]\n        for (var i = 0; i < copiedDas.length; i++) {\n            if (copiedDas[i] === computerDa) {\n                copiedDas.splice(i, 1);\n            }\n        }\n        setFoughtDaList(copiedDas)\n    }\n\n    const selectNextComputerDa = function () {\n        const randomIndex = Math.floor(Math.random() * foughtDas.length);\n        const randomDa = foughtDas[randomIndex];\n        updateComputerDa(randomDa)\n    }\n\n    const onNextClick = function () {\n        removeComputerDaFromList();\n        selectNextComputerDa();\n        setComputerHealth(100);\n        setPreviousComputerHealth(0);\n        setPlayerHealth(100);\n        setPreviousPlayerHealth(0);\n        setComputerSpecialUsed(false);\n        setPlayerSpecialUsed(false);\n        setGameFinished(false);\n    }\n\n    if (gameFinished === false) {\n        return (\n            <>\n                <div>\n                    {playerDa.name}\n                    <ul>\n                        <li><button onClick={handleAttack1Click}>{playerDa.attackOneName}</button></li>\n                        <li><button onClick={handleAttack2Click}>{playerDa.attackTwoName}</button></li>\n                        <li><button onClick={handleHealClick}>{playerDa.healName}</button></li>\n                        <li><button onClick={handleSpecialClick}>{playerDa.specialName}</button></li>\n                        <li><CountUp\n                            className=\"health\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        />\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    {computerDa.name}\n                    <ul>\n                        <li><button>{computerDa.attackOneName}</button></li>\n                        <li><button>{computerDa.attackTwoName}</button></li>\n                        <li><button>{computerDa.healName}</button></li>\n                        <li><button>{computerDa.specialName}</button></li>\n                        <li><CountUp\n                            className=\"health\"\n                            start={previousComputerHealth}\n                            end={computerHealth}\n                            duration=\"1\"\n                        />\n                        </li>\n                    </ul>\n                </div>\n            </>\n        )\n    } else {\n        if (computerHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerDa.name} smashed {computerDa.name}</h1>\n                        <h2>You Win !</h2>\n                    </div>\n                    <div>\n                        <button type=\"button\" onClick={onNextClick}>Who's next ?</button>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDa.name} wrecked {playerDa.name}</h1>\n                        <h2>You Lose !</h2>\n                    </div>\n                    <div>\n                        <Link to=\"/select\"><button type=\"button\">Play Again</button></Link>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nexport default FightScreen;"]},"metadata":{},"sourceType":"module"}