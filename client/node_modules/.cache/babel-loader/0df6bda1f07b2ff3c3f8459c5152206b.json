{"ast":null,"code":"var _jsxFileName = \"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ResultScreen.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultScreen = _ref => {\n  let {\n    winner,\n    playerDa,\n    onGameFinished,\n    das,\n    computerDa,\n    onChooseNextRandomDa,\n    onPlayerDaContinue,\n    onNewDasList,\n    onAllDasBeat\n  } = _ref;\n\n  const handleOnClick = function () {\n    onGameFinished(null);\n  };\n\n  const handleOnNextDaClick = function () {\n    const copiedDas = [...das];\n\n    for (var i = 0; i < copiedDas.length; i++) {\n      if (copiedDas[i] === computerDa) {\n        copiedDas.splice(i, 1);\n      }\n\n      if (copiedDas[i] === playerDa) {\n        copiedDas.splice(i, 1);\n      }\n    }\n\n    const randomIndex = Math.floor(Math.random() * copiedDas.length);\n    const randomDa = copiedDas[randomIndex];\n\n    if (!randomDa) {\n      onAllDasBeat(playerDa);\n    }\n\n    onChooseNextRandomDa(randomDa);\n    onGameFinished(null);\n    onPlayerDaContinue(playerDa);\n    onNewDasList(copiedDas);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"health\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [winner.name, \" Won !\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), winner.name === playerDa.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" You battered them !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/fight\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleOnNextDaClick,\n          children: \"Mon then ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You got smashed ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/select\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleOnClick,\n          children: \"Play again ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ResultScreen;\nexport default ResultScreen; // if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultScreen\");","map":{"version":3,"sources":["/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ResultScreen.js"],"names":["React","Link","ResultScreen","winner","playerDa","onGameFinished","das","computerDa","onChooseNextRandomDa","onPlayerDaContinue","onNewDasList","onAllDasBeat","handleOnClick","handleOnNextDaClick","copiedDas","i","length","splice","randomIndex","Math","floor","random","randomDa","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,YAAY,GAAG,QAAiI;AAAA,MAAhI;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,cAApB;AAAoCC,IAAAA,GAApC;AAAyCC,IAAAA,UAAzC;AAAqDC,IAAAA,oBAArD;AAA2EC,IAAAA,kBAA3E;AAA+FC,IAAAA,YAA/F;AAA6GC,IAAAA;AAA7G,GAAgI;;AAElJ,QAAMC,aAAa,GAAG,YAAY;AAC9BP,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAFD;;AAIA,QAAMQ,mBAAmB,GAAG,YAAY;AACpC,UAAMC,SAAS,GAAG,CAAC,GAAGR,GAAJ,CAAlB;;AACA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,UAAID,SAAS,CAACC,CAAD,CAAT,KAAiBR,UAArB,EAAiC;AAC7BO,QAAAA,SAAS,CAACG,MAAV,CAAiBF,CAAjB,EAAoB,CAApB;AACH;;AACD,UAAID,SAAS,CAACC,CAAD,CAAT,KAAiBX,QAArB,EAA+B;AAC3BU,QAAAA,SAAS,CAACG,MAAV,CAAiBF,CAAjB,EAAoB,CAApB;AACH;AACJ;;AACD,UAAMG,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,SAAS,CAACE,MAArC,CAApB;AACA,UAAMM,QAAQ,GAAGR,SAAS,CAACI,WAAD,CAA1B;;AACA,QAAI,CAACI,QAAL,EAAe;AACXX,MAAAA,YAAY,CAACP,QAAD,CAAZ;AACH;;AACDI,IAAAA,oBAAoB,CAACc,QAAD,CAApB;AACAjB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAI,IAAAA,kBAAkB,CAACL,QAAD,CAAlB;AACAM,IAAAA,YAAY,CAACI,SAAD,CAAZ;AACH,GAnBD;;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAA,iBAAKX,MAAM,CAACoB,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKpB,MAAM,CAACoB,IAAP,KAAgBnB,QAAQ,CAACmB,IAAzB,gBACG;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEV,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAQG;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA,+BAAmB;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAED,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA/CD;;KAAMV,Y;AAiDN,eAAeA,YAAf,C,CAEA;AACA","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst ResultScreen = ({ winner, playerDa, onGameFinished, das, computerDa, onChooseNextRandomDa, onPlayerDaContinue, onNewDasList, onAllDasBeat }) => {\n\n    const handleOnClick = function () {\n        onGameFinished(null);\n    }\n\n    const handleOnNextDaClick = function () {\n        const copiedDas = [...das]\n        for (var i = 0; i < copiedDas.length; i++) {\n            if (copiedDas[i] === computerDa) {\n                copiedDas.splice(i, 1);\n            }\n            if (copiedDas[i] === playerDa) {\n                copiedDas.splice(i, 1);\n            }\n        }\n        const randomIndex = Math.floor(Math.random() * copiedDas.length);\n        const randomDa = copiedDas[randomIndex];\n        if (!randomDa) {\n            onAllDasBeat(playerDa)\n        }\n        onChooseNextRandomDa(randomDa)\n        onGameFinished(null)\n        onPlayerDaContinue(playerDa)\n        onNewDasList(copiedDas)\n    }\n\n\n\n    return (\n        <div className=\"health\">\n            <h1>{winner.name} Won !</h1>\n            {winner.name === playerDa.name ?\n                <div>\n                    <h2> You battered them !</h2>\n                    <Link to=\"/fight\">\n                        <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                    </Link>\n                </div>\n                :\n                <div>\n                    <h2>You got smashed ...</h2>\n                    <Link to=\"/select\"><button type=\"button\" onClick={handleOnClick}>Play again ...</button></Link>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ResultScreen\n\n// if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)"]},"metadata":{},"sourceType":"module"}