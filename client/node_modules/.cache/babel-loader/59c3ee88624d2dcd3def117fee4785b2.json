{"ast":null,"code":"var _jsxFileName = \"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FightScreen = _ref => {\n  _s();\n\n  let {\n    playerDa,\n    computerDa\n  } = _ref;\n  const [computerHealth, setComputerHealth] = useState(40);\n  const [previousComputerHealth, setPreviousComputerHealth] = useState(0);\n  const [playerHealth, setPlayerHealth] = useState(100);\n  const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n  const [computerSpecialUsed, setComputerSpecialUsed] = useState(false);\n  const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n  const [gameFinished, setGameFinished] = useState(false);\n  useEffect(() => {\n    if (computerHealth <= 0 || playerHealth <= 0) {\n      setGameFinished(true);\n    }\n  }, [computerHealth, playerHealth]);\n\n  const getRandomNumber = function (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const handleAttack1Click = function () {\n    let damage = 0;\n\n    if (playerDa.daType === \"BUFFDA\") {\n      damage = getRandomNumber(18, 30);\n    } else if (playerDa.daType === \"AVERAGEDA\") {\n      damage = getRandomNumber(23, 25);\n    } else {\n      damage = getRandomNumber(18, 25);\n    }\n\n    setPreviousComputerHealth(computerHealth);\n    setComputerHealth(computerHealth => computerHealth - damage);\n    console.log(\"player hit computer for : \" + damage);\n\n    if (gameFinished === true) {\n      console.log(\"GAME HAS NOW FINISHED\");\n    }\n\n    setTimeout(function () {\n      computerTurn();\n    }, 2000);\n  };\n\n  const handleAttack2Click = function () {\n    let damage = getRandomNumber(10, 35);\n    setPreviousComputerHealth(computerHealth);\n    setComputerHealth(computerHealth => computerHealth - damage);\n    console.log(\"player hit computer for : \" + damage);\n    setTimeout(function () {\n      computerTurn();\n    }, 2000);\n  };\n\n  const handleHealClick = function () {\n    let heal = 0;\n\n    if (playerDa.daType === \"SOFTDA\") {\n      heal = getRandomNumber(23, 25);\n    } else {\n      heal = getRandomNumber(18, 25);\n    }\n\n    if (playerHealth + heal >= 100) {\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerhealth => 100);\n    } else if (playerHealth <= 30) {\n      heal = getRandomNumber(24, 25);\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth + heal);\n    } else {\n      const health = playerHealth + heal;\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth + heal);\n    }\n\n    console.log(\"player healed for : \" + heal);\n    setTimeout(function () {\n      computerTurn();\n    }, 2000);\n  };\n\n  const handleSpecialClick = function () {\n    if (playerSpecialUsed === false) {\n      let opponentDamage = 45;\n      let selfDamage = 25;\n      const specialOutcome = [opponentDamage, opponentDamage, selfDamage];\n      const specialNumber = Math.floor(Math.random() * 3);\n\n      if (specialOutcome[specialNumber] === opponentDamage) {\n        setPreviousComputerHealth(computerHealth);\n        setComputerHealth(computerHealth => computerHealth - opponentDamage);\n        setPlayerSpecialUsed(true);\n        playerDa.specialName = \"Special Used\";\n        console.log(\"player hit computer for : \" + opponentDamage);\n        setTimeout(function () {\n          computerTurn();\n        }, 2000);\n      } else if (specialOutcome[specialNumber] === selfDamage) {\n        setPreviousPlayerHealth(playerHealth);\n        setPlayerHealth(playerHealth => playerHealth - selfDamage);\n        setPlayerSpecialUsed(true);\n        playerDa.specialName = \"Special Used\";\n        console.log(\"player hit themselves for : \" + selfDamage);\n        setTimeout(function () {\n          computerTurn();\n        }, 2000);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const computerTurn = function () {\n    if (computerHealth >= 1) {\n      console.log(gameFinished);\n\n      const Attack1 = function () {\n        let damage = 0;\n\n        if (computerDa.daType === \"BUFFDA\") {\n          damage = getRandomNumber(18, 30);\n        } else if (computerDa.daType === \"AVERAGEDA\") {\n          damage = getRandomNumber(23, 25);\n        } else {\n          damage = getRandomNumber(18, 25);\n        }\n\n        setPreviousPlayerHealth(playerHealth);\n        setPlayerHealth(playerHealth => playerHealth - damage);\n        console.log(\"computer hit player for : \" + damage);\n      };\n\n      const Attack2 = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousPlayerHealth(playerHealth);\n        setPlayerHealth(playerHealth => playerHealth - damage);\n        console.log(\"computer hit player for : \" + damage);\n      };\n\n      const Heal = function () {\n        let heal = 0;\n\n        if (computerDa.daType === \"SOFTDA\") {\n          heal = getRandomNumber(23, 25);\n        } else {\n          heal = getRandomNumber(18, 25);\n        }\n\n        if (computerHealth + heal >= 100) {\n          setPreviousComputerHealth(computerHealth);\n          setComputerHealth(computerHealth => 100);\n        } else if (computerHealth <= 30) {\n          heal = getRandomNumber(24, 25);\n          setPreviousComputerHealth(computerHealth);\n          setComputerHealth(computerHealth => computerHealth + heal);\n        } else {\n          setPreviousComputerHealth(computerHealth);\n          setComputerHealth(computerHealth => computerHealth + heal);\n        }\n\n        console.log(\"computer healed for : \" + heal);\n      };\n\n      const Special = function () {\n        let opponentDamage = 45;\n        let selfDamage = 25;\n        const specialOutcome = [opponentDamage, opponentDamage, selfDamage];\n        const specialNumber = Math.floor(Math.random() * 3);\n\n        if (specialOutcome[specialNumber] === opponentDamage) {\n          setPreviousPlayerHealth(playerHealth);\n          setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n          setComputerSpecialUsed(true);\n          computerDa.specialName = \"Special Used\";\n          console.log(\"computer hit player for : \" + opponentDamage);\n        } else if (specialOutcome[specialNumber] === selfDamage) {\n          setPreviousComputerHealth(computerHealth);\n          setComputerHealth(computerHealth => computerHealth - selfDamage);\n          setComputerSpecialUsed(true);\n          computerDa.specialName = \"Special Used\";\n          console.log(\"computer hit themselves for : \" + selfDamage);\n        }\n      };\n\n      if (computerHealth >= 80) {\n        if (computerSpecialUsed === false) {\n          const randomMove = [Attack1, Attack2, Special];\n          const randomNumber = Math.floor(Math.random() * 3);\n          setTimeout(function () {\n            randomMove[randomNumber]();\n          }, 1000);\n        } else {\n          const randomMove = [Attack1, Attack2];\n          const randomNumber = Math.floor(Math.random() * 2);\n          setTimeout(function () {\n            randomMove[randomNumber]();\n          }, 1000);\n        }\n      } else if (computerHealth >= 60) {\n        if (computerSpecialUsed === false) {\n          const randomMove = [Attack1, Attack2, Heal, Special];\n          const randomNumber = Math.floor(Math.random() * 4);\n          setTimeout(function () {\n            randomMove[randomNumber]();\n          }, 1000);\n        } else {\n          const randomMove = [Attack1, Attack2, Heal];\n          const randomNumber = Math.floor(Math.random() * 3);\n          setTimeout(function () {\n            randomMove[randomNumber]();\n          }, 1000);\n        }\n      } else if (computerHealth >= 40) {\n        if (computerSpecialUsed === false) {\n          const randomMove = [Attack1, Attack2, Heal, Heal, Special];\n          const randomNumber = Math.floor(Math.random() * 5);\n          setTimeout(function () {\n            randomMove[randomNumber]();\n          }, 1000);\n        } else {\n          const randomMove = [Attack1, Attack2, Heal, Heal];\n          const randomNumber = Math.floor(Math.random() * 4);\n          setTimeout(function () {\n            randomMove[randomNumber]();\n          }, 1000);\n        }\n      } else if (computerHealth <= 39) {\n        if (computerSpecialUsed === false) {\n          const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special];\n          const randomNumber = Math.floor(Math.random() * 7);\n          setTimeout(function () {\n            randomMove[randomNumber]();\n          }, 1000);\n        } else {\n          const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal];\n          const randomNumber = Math.floor(Math.random() * 6);\n          setTimeout(function () {\n            randomMove[randomNumber]();\n          }, 1000);\n        }\n      }\n    }\n  };\n\n  if (gameFinished === false) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [playerDa.name, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAttack1Click,\n              children: playerDa.attackOneName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAttack2Click,\n              children: playerDa.attackTwoName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleHealClick,\n              children: playerDa.healName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSpecialClick,\n              children: playerDa.specialName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(CountUp, {\n              className: \"health\",\n              start: previousPlayerHealth,\n              end: playerHealth,\n              duration: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [computerDa.name, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: computerDa.attackOneName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: computerDa.attackTwoName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: computerDa.healName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: computerDa.specialName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(CountUp, {\n              className: \"health\",\n              start: previousComputerHealth,\n              end: computerHealth,\n              duration: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    if (computerHealth <= 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [playerDa.name, \" smashed \", computerDa.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"You Win !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/select\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: \"Mon Then !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [computerDa.name, \" wrecked \", playerDa.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"You Lose !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/select\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: \"Play Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  }\n};\n\n_s(FightScreen, \"kSqxYUSYGB65rR5fBzodQ3C3kMo=\");\n\n_c = FightScreen;\nexport default FightScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FightScreen\");","map":{"version":3,"sources":["/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js"],"names":["React","useEffect","useRef","useState","CountUp","Link","FightScreen","playerDa","computerDa","computerHealth","setComputerHealth","previousComputerHealth","setPreviousComputerHealth","playerHealth","setPlayerHealth","previousPlayerHealth","setPreviousPlayerHealth","computerSpecialUsed","setComputerSpecialUsed","playerSpecialUsed","setPlayerSpecialUsed","gameFinished","setGameFinished","getRandomNumber","min","max","Math","floor","random","handleAttack1Click","damage","daType","console","log","setTimeout","computerTurn","handleAttack2Click","handleHealClick","heal","playerhealth","health","handleSpecialClick","opponentDamage","selfDamage","specialOutcome","specialNumber","specialName","Attack1","Attack2","Heal","Special","randomMove","randomNumber","name","attackOneName","attackTwoName","healName"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\n\nconst FightScreen = ({ playerDa, computerDa }) => {\n\n    const [computerHealth, setComputerHealth] = useState(40);\n    const [previousComputerHealth, setPreviousComputerHealth] = useState(0);\n    const [playerHealth, setPlayerHealth] = useState(100);\n    const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n    const [computerSpecialUsed, setComputerSpecialUsed] = useState(false);\n    const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n\n    useEffect(() => {\n        if (computerHealth <= 0 || playerHealth <= 0) {\n            setGameFinished(true);\n        }\n    }, [computerHealth, playerHealth])\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const handleAttack1Click = function () {\n        let damage = 0;\n        if (playerDa.daType === \"BUFFDA\") {\n            damage = getRandomNumber(18, 30)\n        } else if (playerDa.daType === \"AVERAGEDA\") {\n            damage = getRandomNumber(23, 25)\n        } else {\n            damage = getRandomNumber(18, 25)\n        }\n        setPreviousComputerHealth(computerHealth)\n        setComputerHealth(computerHealth => computerHealth - damage)\n        console.log(\"player hit computer for : \" + damage);\n        if (gameFinished === true) {\n            console.log(\"GAME HAS NOW FINISHED\");\n        }\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleAttack2Click = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousComputerHealth(computerHealth)\n        setComputerHealth(computerHealth => computerHealth - damage)\n        console.log(\"player hit computer for : \" + damage);\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleHealClick = function () {\n        let heal = 0;\n        if (playerDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerHealth + heal) >= 100) {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerhealth => 100)\n        } else if (playerHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        } else {\n            const health = playerHealth + heal;\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        }\n        console.log(\"player healed for : \" + heal);\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleSpecialClick = function () {\n        if (playerSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - opponentDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit computer for : \" + opponentDamage);\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - selfDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit themselves for : \" + selfDamage);\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const computerTurn = function () {\n        if (computerHealth >= 1) {\n            console.log(gameFinished)\n            const Attack1 = function () {\n                let damage = 0;\n                if (computerDa.daType === \"BUFFDA\") {\n                    damage = getRandomNumber(18, 30)\n                } else if (computerDa.daType === \"AVERAGEDA\") {\n                    damage = getRandomNumber(23, 25)\n                } else {\n                    damage = getRandomNumber(18, 25)\n                }\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - damage)\n                console.log(\"computer hit player for : \" + damage);\n            }\n            const Attack2 = function () {\n                let damage = getRandomNumber(10, 35);\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - damage);\n                console.log(\"computer hit player for : \" + damage);\n            }\n            const Heal = function () {\n                let heal = 0;\n                if (computerDa.daType === \"SOFTDA\") {\n                    heal = getRandomNumber(23, 25)\n                } else {\n                    heal = getRandomNumber(18, 25)\n                }\n                if ((computerHealth + heal) >= 100) {\n                    setPreviousComputerHealth(computerHealth)\n                    setComputerHealth(computerHealth => 100);\n                } else if (computerHealth <= 30) {\n                    heal = getRandomNumber(24, 25)\n                    setPreviousComputerHealth(computerHealth)\n                    setComputerHealth(computerHealth => computerHealth + heal)\n                } else {\n                    setPreviousComputerHealth(computerHealth)\n                    setComputerHealth(computerHealth => computerHealth + heal)\n                }\n                console.log(\"computer healed for : \" + heal);\n            }\n            const Special = function () {\n                let opponentDamage = 45;\n                let selfDamage = 25;\n                const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n                const specialNumber = Math.floor(Math.random() * 3);\n                if (specialOutcome[specialNumber] === opponentDamage) {\n                    setPreviousPlayerHealth(playerHealth)\n                    setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n                    setComputerSpecialUsed(true);\n                    computerDa.specialName = \"Special Used\"\n                    console.log(\"computer hit player for : \" + opponentDamage);\n                } else if (specialOutcome[specialNumber] === selfDamage) {\n                    setPreviousComputerHealth(computerHealth)\n                    setComputerHealth(computerHealth => computerHealth - selfDamage);\n                    setComputerSpecialUsed(true);\n                    computerDa.specialName = \"Special Used\"\n                    console.log(\"computer hit themselves for : \" + selfDamage);\n                }\n            }\n            if (computerHealth >= 80) {\n                if (computerSpecialUsed === false) {\n                    const randomMove = [Attack1, Attack2, Special]\n                    const randomNumber = Math.floor(Math.random() * 3);\n                    setTimeout(function () {\n                        randomMove[randomNumber]()\n                    }, 1000)\n                } else {\n                    const randomMove = [Attack1, Attack2]\n                    const randomNumber = Math.floor(Math.random() * 2);\n                    setTimeout(function () {\n                        randomMove[randomNumber]()\n                    }, 1000)\n                }\n            } else if (computerHealth >= 60) {\n                if (computerSpecialUsed === false) {\n                    const randomMove = [Attack1, Attack2, Heal, Special]\n                    const randomNumber = Math.floor(Math.random() * 4);\n                    setTimeout(function () {\n                        randomMove[randomNumber]()\n                    }, 1000)\n                } else {\n                    const randomMove = [Attack1, Attack2, Heal]\n                    const randomNumber = Math.floor(Math.random() * 3);\n                    setTimeout(function () {\n                        randomMove[randomNumber]()\n                    }, 1000)\n                }\n            } else if (computerHealth >= 40) {\n                if (computerSpecialUsed === false) {\n                    const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                    const randomNumber = Math.floor(Math.random() * 5);\n                    setTimeout(function () {\n                        randomMove[randomNumber]()\n                    }, 1000)\n                } else {\n                    const randomMove = [Attack1, Attack2, Heal, Heal]\n                    const randomNumber = Math.floor(Math.random() * 4);\n                    setTimeout(function () {\n                        randomMove[randomNumber]()\n                    }, 1000)\n                }\n            } else if (computerHealth <= 39) {\n                if (computerSpecialUsed === false) {\n                    const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                    const randomNumber = Math.floor(Math.random() * 7);\n                    setTimeout(function () {\n                        randomMove[randomNumber]()\n                    }, 1000)\n                } else {\n                    const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                    const randomNumber = Math.floor(Math.random() * 6);\n                    setTimeout(function () {\n                        randomMove[randomNumber]()\n                    }, 1000)\n                }\n            }\n        }\n    };\n\n    if (gameFinished === false) {\n        return (\n            <>\n                <div>\n                    {playerDa.name}\n                    {/* <img src={`${process.env.PUBLIC_URL}/${playerDa.specialName}`} /> */}\n                    <ul>\n                        <li><button onClick={handleAttack1Click}>{playerDa.attackOneName}</button></li>\n                        <li><button onClick={handleAttack2Click}>{playerDa.attackTwoName}</button></li>\n                        <li><button onClick={handleHealClick}>{playerDa.healName}</button></li>\n                        <li><button onClick={handleSpecialClick}>{playerDa.specialName}</button></li>\n                        <li><CountUp\n                            className=\"health\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        />\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    {computerDa.name}\n                    <ul>\n                        <li><button>{computerDa.attackOneName}</button></li>\n                        <li><button>{computerDa.attackTwoName}</button></li>\n                        <li><button>{computerDa.healName}</button></li>\n                        <li><button>{computerDa.specialName}</button></li>\n                        <li><CountUp\n                            className=\"health\"\n                            start={previousComputerHealth}\n                            end={computerHealth}\n                            duration=\"1\"\n                        />\n                        </li>\n                    </ul>\n                </div>\n            </>\n        )\n    } else {\n        if (computerHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerDa.name} smashed {computerDa.name}</h1>\n                        <h2>You Win !</h2>\n                        <Link to=\"/select\"><button type=\"button\">Mon Then !</button></Link>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDa.name} wrecked {playerDa.name}</h1>\n                        <h2>You Lose !</h2>\n                        <Link to=\"/select\"><button type=\"button\">Play Again</button></Link>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nexport default FightScreen;"]},"metadata":{},"sourceType":"module"}