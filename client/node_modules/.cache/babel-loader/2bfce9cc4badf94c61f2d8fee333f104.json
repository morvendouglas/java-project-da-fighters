{"ast":null,"code":"var _jsxFileName = \"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/MultiplayerResultScreen.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport FinishScreen from './FinishScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MultiplayerResultScreen = _ref => {\n  let {\n    winner,\n    playerDa,\n    onGameFinished,\n    das,\n    computerDa,\n    onChooseNextRandomDa,\n    onPlayerDaContinue,\n    onNewDasList,\n    onAllDasBeaten,\n    messages,\n    changeMultiplayer\n  } = _ref;\n\n  const findWinMessage = function () {\n    const copyMessages = [...messages];\n    const winMessages = copyMessages.filter(message => {\n      return message.messageType === \"WIN\";\n    });\n    const randomIndexWin = Math.floor(Math.random() * winMessages.length);\n    const randomWinMessage = winMessages[randomIndexWin];\n    return randomWinMessage.comment;\n  };\n\n  const findLoseMessage = function () {\n    const copyMessages = [...messages];\n    const loseMessages = copyMessages.filter(message => {\n      return message.messageType === \"LOSE\";\n    });\n    const randomIndexWin = Math.floor(Math.random() * loseMessages.length);\n    const randomLoseMessage = loseMessages[randomIndexWin];\n    return randomLoseMessage.comment;\n  };\n\n  const handleOnClick = function () {\n    onGameFinished(null);\n    changeMultiplayer(false);\n  };\n\n  const handleOnNextDaClick = function () {\n    const copiedDas = [...das];\n\n    if (copiedDas.length < 2) {\n      onAllDasBeaten(playerDa);\n    } else {\n      for (var i = 0; i < copiedDas.length; i++) {\n        if (copiedDas[i] === computerDa) {\n          copiedDas.splice(i, 1);\n        }\n\n        if (copiedDas[i] === playerDa) {\n          copiedDas.splice(i, 1);\n        }\n      }\n\n      const randomIndex = Math.floor(Math.random() * copiedDas.length);\n      const randomDa = copiedDas[randomIndex];\n      onChooseNextRandomDa(randomDa);\n      onGameFinished(null);\n      onPlayerDaContinue(playerDa);\n      onNewDasList(copiedDas);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"health\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [winner.name, \" Won !\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", playerDa.name, \" battered \", computerDa.name, \" !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" Some say \", computerDa.name, \" \", findWinMessage()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/mode\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleOnClick,\n          children: \"Play again ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MultiplayerResultScreen;\nexport default MultiplayerResultScreen; // if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiplayerResultScreen\");","map":{"version":3,"sources":["/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/MultiplayerResultScreen.js"],"names":["React","Link","FinishScreen","MultiplayerResultScreen","winner","playerDa","onGameFinished","das","computerDa","onChooseNextRandomDa","onPlayerDaContinue","onNewDasList","onAllDasBeaten","messages","changeMultiplayer","findWinMessage","copyMessages","winMessages","filter","message","messageType","randomIndexWin","Math","floor","random","length","randomWinMessage","comment","findLoseMessage","loseMessages","randomLoseMessage","handleOnClick","handleOnNextDaClick","copiedDas","i","splice","randomIndex","randomDa","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport FinishScreen from './FinishScreen';\n\nconst MultiplayerResultScreen = ({ winner, playerDa, onGameFinished, das, computerDa, onChooseNextRandomDa, onPlayerDaContinue, onNewDasList, onAllDasBeaten, messages, changeMultiplayer }) => {\n\n    const findWinMessage = function () {\n        const copyMessages = [...messages]\n        const winMessages = copyMessages.filter((message) => {\n            return message.messageType === \"WIN\"\n        })\n        const randomIndexWin = Math.floor(Math.random() * winMessages.length)\n        const randomWinMessage = winMessages[randomIndexWin]\n        return randomWinMessage.comment\n    }\n\n    const findLoseMessage = function () {\n        const copyMessages = [...messages]\n        const loseMessages = copyMessages.filter((message) => {\n            return message.messageType === \"LOSE\"\n        })\n        const randomIndexWin = Math.floor(Math.random() * loseMessages.length)\n        const randomLoseMessage = loseMessages[randomIndexWin]\n        return randomLoseMessage.comment\n    }\n\n    const handleOnClick = function () {\n        onGameFinished(null);\n        changeMultiplayer(false);\n    }\n\n    const handleOnNextDaClick = function () {\n        const copiedDas = [...das]\n        if (copiedDas.length < 2) {\n            onAllDasBeaten(playerDa)\n        } else {\n            for (var i = 0; i < copiedDas.length; i++) {\n                if (copiedDas[i] === computerDa) {\n                    copiedDas.splice(i, 1);\n                }\n                if (copiedDas[i] === playerDa) {\n                    copiedDas.splice(i, 1);\n                }\n            }\n            const randomIndex = Math.floor(Math.random() * copiedDas.length);\n            const randomDa = copiedDas[randomIndex];\n            onChooseNextRandomDa(randomDa)\n            onGameFinished(null)\n            onPlayerDaContinue(playerDa)\n            onNewDasList(copiedDas)\n        }\n    }\n\n    return (\n        <div className=\"health\">\n            <h1>{winner.name} Won !</h1>\n                <div>\n                    <h2> {playerDa.name} battered {computerDa.name} !</h2>\n                    <h2> Some say {computerDa.name} {findWinMessage()}</h2>\n                        <Link to=\"/mode\"><button type=\"button\" onClick={handleOnClick}>Play again ...</button>\n                        </Link>\n                </div>\n        </div>\n    )\n}\n\nexport default MultiplayerResultScreen\n\n// if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)"]},"metadata":{},"sourceType":"module"}