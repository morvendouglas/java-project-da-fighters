{"ast":null,"code":"var _jsxFileName = \"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/DaContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DaList from '../components/DaList';\nimport CreateADa from '../components/CreateADa';\nimport FightScreen from '../components/FightScreen';\nimport ResultScreen from '../components/ResultScreen';\nimport FinishScreen from '../components/FinishScreen';\nimport ModeScreen from '../components/ModeScreen';\nimport Multiplayer from '../components/Multiplayer';\nimport Simulation from '../components/Simulation';\nimport MultiplayerFightScreen from '../components/MultiplayerFightScreen';\nimport SimulationFightScreen from '../components/SimulationFightScreen';\nimport Scoreboard from '../components/Scoreboard';\nimport Request from '../helpers/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DaContainer = () => {\n  _s();\n\n  const [das, setDas] = useState([]);\n  const [playerDa, setPlayerDa] = useState(null);\n  const [computerDa, setComputerDa] = useState(null);\n  const [winner, setWinner] = useState(null);\n  const [gameFinished, setGameFinished] = useState(null);\n  const [playerTwoDa, setPlayerTwoDa] = useState(null);\n  const [messages, setMessages] = useState([]);\n\n  const requestAll = function () {\n    const request = new Request();\n    const dasPromise = request.get('/select');\n    const messagesPromise = request.get('/select-messages');\n    Promise.all([dasPromise]).then(data => {\n      setDas(data[0]);\n    });\n    Promise.all([messagesPromise]).then(data => {\n      setMessages(data[0]);\n    });\n  };\n\n  useEffect(() => {\n    requestAll();\n  }, []);\n  useEffect(() => {\n    selectComputerDa();\n  }, [playerDa]); //   const playMusic = function () {\n  //     let music = new Audio(\"/main_page_screen.wav\")\n  //     music.play();\n  // }\n\n  const handlePost = function (da) {\n    const request = new Request();\n    request.post(\"/create-a-da\", da).then(() => window.location = '/select');\n  };\n\n  const findDaById = function (id) {\n    return das.find(da => {\n      return da.id === parseInt(id);\n    });\n  };\n\n  const handleUpdate = function (da) {\n    const request = new Request();\n    request.patch('/scoreboard/' + da.id, da); // .then(() => {\n    //   window.location = '/scoreboard/:id'\n    // })\n  };\n\n  const onDaClicked = function (da) {\n    setPlayerDa(da); // <Route path=\"/result\" render={() => {\n    //   return <ResultScreen />\n    // }} />\n  };\n\n  const onPlayerTwoDaClicked = function (da) {\n    setPlayerTwoDa(da);\n  };\n\n  const onGameFinished = function (da) {\n    setWinner(da);\n  };\n\n  const onChooseNextRandomDa = function (da) {\n    setComputerDa(da);\n  };\n\n  const onPlayerDaContinue = function (da) {\n    setPlayerDa(da);\n  };\n\n  const onNewDasList = function (das) {\n    setDas(das);\n  };\n\n  const onAllDasBeaten = function (da) {\n    setGameFinished(da);\n  };\n\n  const selectComputerDa = function () {\n    const copiedDas = [...das];\n\n    for (var i = 0; i < copiedDas.length; i++) {\n      if (copiedDas[i] === playerDa) {\n        copiedDas.splice(i, 1);\n      }\n    }\n\n    const randomIndex = Math.floor(Math.random() * copiedDas.length);\n    const randomDa = copiedDas[randomIndex];\n    setComputerDa(randomDa);\n  };\n\n  if (winner === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/select\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(DaList, {\n              classname: \"DaList\",\n              das: das,\n              onDaClicked: onDaClicked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 18\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/fight\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(FightScreen, {\n              playerDa: playerDa,\n              computerDa: computerDa,\n              onGameFinished: onGameFinished,\n              das: das\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 18\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/multiplayerfight\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(MultiplayerFightScreen, {\n              playerDa: playerDa,\n              playerTwoDa: playerTwoDa,\n              onGameFinished: onGameFinished\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 18\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/simulationfight\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(SimulationFightScreen, {\n              computerDaOne: playerDa,\n              computerDaTwo: playerTwoDa,\n              onGameFinished: onGameFinished\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 18\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/mode\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(ModeScreen, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 18\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/multiplayer\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(Multiplayer, {\n              das: das,\n              onDaClicked: onDaClicked,\n              onPlayerTwoDaClicked: onPlayerTwoDaClicked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 18\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/simulation\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(Simulation, {\n              das: das,\n              onDaClicked: onDaClicked,\n              onPlayerTwoDaClicked: onPlayerTwoDaClicked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 18\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/create-a-da\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(CreateADa, {\n              handlePost: handlePost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 18\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/scoreboard/:id\",\n          render: props => {\n            const id = props.match.params.id;\n            const da = findDaById(id);\n            return /*#__PURE__*/_jsxDEV(Scoreboard, {\n              das: das,\n              handleUpdate: handleUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 18\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this);\n  } else if (gameFinished != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FinishScreen, {\n        winner: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ResultScreen, {\n        winner: winner,\n        playerDa: playerDa,\n        onGameFinished: onGameFinished,\n        das: das,\n        computerDa: computerDa,\n        onChooseNextRandomDa: onChooseNextRandomDa,\n        onPlayerDaContinue: onPlayerDaContinue,\n        onNewDasList: onNewDasList,\n        onAllDasBeaten: onAllDasBeaten,\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }, this);\n  }\n};\n\n_s(DaContainer, \"k9t+qYfITldLl3SfP7EuoBpURf4=\");\n\n_c = DaContainer;\nexport default DaContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DaContainer\");","map":{"version":3,"sources":["/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/DaContainer.js"],"names":["React","useState","useEffect","Route","Switch","DaList","CreateADa","FightScreen","ResultScreen","FinishScreen","ModeScreen","Multiplayer","Simulation","MultiplayerFightScreen","SimulationFightScreen","Scoreboard","Request","DaContainer","das","setDas","playerDa","setPlayerDa","computerDa","setComputerDa","winner","setWinner","gameFinished","setGameFinished","playerTwoDa","setPlayerTwoDa","messages","setMessages","requestAll","request","dasPromise","get","messagesPromise","Promise","all","then","data","selectComputerDa","handlePost","da","post","window","location","findDaById","id","find","parseInt","handleUpdate","patch","onDaClicked","onPlayerTwoDaClicked","onGameFinished","onChooseNextRandomDa","onPlayerDaContinue","onNewDasList","onAllDasBeaten","copiedDas","i","length","splice","randomIndex","Math","floor","random","randomDa","props","match","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DaList from '../components/DaList';\nimport CreateADa from '../components/CreateADa';\nimport FightScreen from '../components/FightScreen';\nimport ResultScreen from '../components/ResultScreen';\nimport FinishScreen from '../components/FinishScreen';\nimport ModeScreen from '../components/ModeScreen';\nimport Multiplayer from '../components/Multiplayer';\nimport Simulation from '../components/Simulation';\nimport MultiplayerFightScreen from '../components/MultiplayerFightScreen'\nimport SimulationFightScreen from '../components/SimulationFightScreen'\nimport Scoreboard from '../components/Scoreboard';\nimport Request from '../helpers/request';\n\nconst DaContainer = () => {\n  const [das, setDas] = useState([])\n  const [playerDa, setPlayerDa] = useState(null)\n  const [computerDa, setComputerDa] = useState(null)\n  const [winner, setWinner] = useState(null)\n  const [gameFinished, setGameFinished] = useState(null)\n  const [playerTwoDa, setPlayerTwoDa] = useState(null)\n  const [messages, setMessages] = useState([])\n\n  const requestAll = function () {\n    const request = new Request();\n    const dasPromise = request.get('/select')\n    const messagesPromise = request.get('/select-messages')\n\n    Promise.all([dasPromise])\n      .then((data) => {\n        setDas(data[0])\n      })\n\n    Promise.all([messagesPromise])\n      .then((data) => {\n        setMessages(data[0])\n      })\n  }\n\nuseEffect(() => {\n  requestAll()\n}, [])\n\nuseEffect(() => {\n  selectComputerDa()\n}, [playerDa])\n\n//   const playMusic = function () {\n//     let music = new Audio(\"/main_page_screen.wav\")\n//     music.play();\n// }\n\nconst handlePost = function (da) {\n  const request = new Request();\n  request.post(\"/create-a-da\", da)\n    .then(() => window.location = '/select')\n}\n\nconst findDaById = function (id) {\n  return das.find((da) => {\n    return da.id === parseInt(id);\n  })\n}\n\nconst handleUpdate = function (da) {\n  const request = new Request();\n  request.patch('/scoreboard/' + da.id, da)\n  // .then(() => {\n  //   window.location = '/scoreboard/:id'\n  // })\n}\n\nconst onDaClicked = function (da) {\n  setPlayerDa(da);\n  // <Route path=\"/result\" render={() => {\n  //   return <ResultScreen />\n  // }} />\n}\n\nconst onPlayerTwoDaClicked = function (da) {\n  setPlayerTwoDa(da);\n}\n\nconst onGameFinished = function (da) {\n  setWinner(da)\n}\n\nconst onChooseNextRandomDa = function (da) {\n  setComputerDa(da)\n}\n\nconst onPlayerDaContinue = function (da) {\n  setPlayerDa(da)\n}\n\nconst onNewDasList = function (das) {\n  setDas(das)\n}\n\nconst onAllDasBeaten = function (da) {\n  setGameFinished(da)\n}\n\nconst selectComputerDa = function () {\n  const copiedDas = [...das]\n  for (var i = 0; i < copiedDas.length; i++) {\n    if (copiedDas[i] === playerDa) {\n      copiedDas.splice(i, 1);\n    }\n  }\n  const randomIndex = Math.floor(Math.random() * copiedDas.length);\n  const randomDa = copiedDas[randomIndex];\n  setComputerDa(randomDa)\n}\n\nif (winner === null) {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/select\" render={() => {\n          return <DaList classname=\"DaList\" das={das} onDaClicked={onDaClicked} />\n        }} />\n        <Route path=\"/fight\" render={() => {\n          return <FightScreen playerDa={playerDa} computerDa={computerDa} onGameFinished={onGameFinished} das={das} />\n        }} />\n        <Route path=\"/multiplayerfight\" render={() => {\n          return <MultiplayerFightScreen playerDa={playerDa} playerTwoDa={playerTwoDa} onGameFinished={onGameFinished} />\n        }} />\n        <Route path=\"/simulationfight\" render={() => {\n          return <SimulationFightScreen computerDaOne={playerDa} computerDaTwo={playerTwoDa} onGameFinished={onGameFinished} />\n        }} />\n        <Route path=\"/mode\" render={() => {\n          return <ModeScreen />\n        }} />\n        <Route path=\"/multiplayer\" render={() => {\n          return <Multiplayer das={das} onDaClicked={onDaClicked} onPlayerTwoDaClicked={onPlayerTwoDaClicked} />\n        }} />\n        <Route path=\"/simulation\" render={() => {\n          return <Simulation das={das} onDaClicked={onDaClicked} onPlayerTwoDaClicked={onPlayerTwoDaClicked} />\n        }} />\n        {/* <Route path=\"/result\" render={() => {\n          return <ResultScreen playerDa={playerDa} computerDa={computerDa} />\n        }} /> */}\n        <Route path=\"/create-a-da\" render={() => {\n          return <CreateADa handlePost={handlePost} />\n        }} />\n        <Route path=\"/scoreboard/:id\" render={(props) => {\n          const id = props.match.params.id;\n          const da = findDaById(id);\n          return <Scoreboard das={das} handleUpdate={handleUpdate} />\n        }} />\n      </Switch>\n    </div>\n  )\n} else if (gameFinished != null) {\n  return (\n    <div>\n      <FinishScreen winner={winner} />\n    </div>\n  )\n} else {\n  return (\n    <div>\n      <ResultScreen winner={winner} playerDa={playerDa} onGameFinished={onGameFinished} das={das} computerDa={computerDa} onChooseNextRandomDa={onChooseNextRandomDa} onPlayerDaContinue={onPlayerDaContinue} onNewDasList={onNewDasList} onAllDasBeaten={onAllDasBeaten} messages={messages} />\n    </div>\n  )\n}\n}\n\nexport default DaContainer;"]},"metadata":{},"sourceType":"module"}