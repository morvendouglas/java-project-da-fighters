{"ast":null,"code":"var _jsxFileName = \"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ResultScreen.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport FinishScreen from './FinishScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultScreen = _ref => {\n  let {\n    winner,\n    playerDa,\n    onGameFinished,\n    das,\n    computerDa,\n    onChooseNextRandomDa,\n    onPlayerDaContinue,\n    onNewDasList,\n    onAllDasBeaten,\n    messages\n  } = _ref;\n\n  const findWinMessages = function () {\n    const winMessages = [...messages];\n\n    for (var i = 0; i < winMessages; i++) {\n      if (winMessages[i].messageType === \"LOSE\") {\n        winMessages.splice(i, 1);\n      }\n    }\n\n    return winMessages;\n  };\n\n  const findLoseMessages = function () {\n    const loseMessages = [...messages];\n\n    for (var i = 0; i < loseMessages; i++) {\n      if (loseMessages[i].messageType === \"WIN\") {\n        loseMessages.splice(i, 1);\n      }\n    }\n\n    return loseMessages;\n  };\n\n  const randomMessage = function (messageList) {\n    const randomIndex = Math.floor(Math.random() * messageList.length);\n    const randomMessage = messageList[randomIndex];\n    return randomMessage;\n  };\n\n  const handleOnClick = function () {\n    onGameFinished(null);\n  };\n\n  const handleOnNextDaClick = function () {\n    const copiedDas = [...das];\n\n    if (copiedDas.length < 2) {\n      onAllDasBeaten(playerDa);\n    } else {\n      for (var i = 0; i < copiedDas.length; i++) {\n        if (copiedDas[i] === computerDa) {\n          copiedDas.splice(i, 1);\n        }\n\n        if (copiedDas[i] === playerDa) {\n          copiedDas.splice(i, 1);\n        }\n      }\n\n      const randomIndex = Math.floor(Math.random() * copiedDas.length);\n      const randomDa = copiedDas[randomIndex];\n      onChooseNextRandomDa(randomDa);\n      onGameFinished(null);\n      onPlayerDaContinue(playerDa);\n      onNewDasList(copiedDas);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"health\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [winner.name, \" Won !\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), winner.name === playerDa.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" You battered them !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), das.length < 2 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleOnNextDaClick,\n        children: \"Mon then ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/fight\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleOnNextDaClick,\n          children: \"Mon then ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" You got smashed ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/select\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleOnClick,\n          children: \"Play again ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ResultScreen;\nexport default ResultScreen; // if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultScreen\");","map":{"version":3,"sources":["/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ResultScreen.js"],"names":["React","Link","FinishScreen","ResultScreen","winner","playerDa","onGameFinished","das","computerDa","onChooseNextRandomDa","onPlayerDaContinue","onNewDasList","onAllDasBeaten","messages","findWinMessages","winMessages","i","messageType","splice","findLoseMessages","loseMessages","randomMessage","messageList","randomIndex","Math","floor","random","length","handleOnClick","handleOnNextDaClick","copiedDas","randomDa","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport FinishScreen from './FinishScreen';\n\nconst ResultScreen = ({ winner, playerDa, onGameFinished, das, computerDa, onChooseNextRandomDa, onPlayerDaContinue, onNewDasList, onAllDasBeaten, messages }) => {\n\n    const findWinMessages = function () {\n        const winMessages = [...messages]\n        for(var i = 0; i < winMessages; i++) {\n            if(winMessages[i].messageType === \"LOSE\") {\n                winMessages.splice(i,1)\n            }\n        }\n        return winMessages\n    }\n\n    const findLoseMessages = function () {\n        const loseMessages = [...messages]\n        for(var i = 0; i < loseMessages; i++) {\n            if(loseMessages[i].messageType === \"WIN\") {\n                loseMessages.splice(i,1)\n            }\n        }\n        return loseMessages\n    }\n\n    const randomMessage = function (messageList) {\n        const randomIndex = Math.floor(Math.random() * messageList.length);\n        const randomMessage = messageList[randomIndex];\n        return randomMessage\n    }\n\n    const handleOnClick = function () {\n        onGameFinished(null);\n    }\n\n    const handleOnNextDaClick = function () {\n        const copiedDas = [...das]\n        if (copiedDas.length < 2) {\n            onAllDasBeaten(playerDa)\n        } else {\n            for (var i = 0; i < copiedDas.length; i++) {\n                if (copiedDas[i] === computerDa) {\n                    copiedDas.splice(i, 1);\n                }\n                if (copiedDas[i] === playerDa) {\n                    copiedDas.splice(i, 1);\n                }\n            }\n            const randomIndex = Math.floor(Math.random() * copiedDas.length);\n            const randomDa = copiedDas[randomIndex];\n            onChooseNextRandomDa(randomDa)\n            onGameFinished(null)\n            onPlayerDaContinue(playerDa)\n            onNewDasList(copiedDas)\n        }\n    }\n\n    return (\n        <div className=\"health\">\n            <h1>{winner.name} Won !</h1>\n            {winner.name === playerDa.name ?\n                <div>\n                    <h2> You battered them !</h2>\n                    {das.length < 2 ?\n                        <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        :\n                        <Link to=\"/fight\">\n                            <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        </Link>\n                    }\n                </div>\n                :\n                <div>\n                    <h2> You got smashed ...</h2>\n                    <Link to=\"/select\"><button type=\"button\" onClick={handleOnClick}>Play again ...</button></Link>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ResultScreen\n\n// if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)"]},"metadata":{},"sourceType":"module"}