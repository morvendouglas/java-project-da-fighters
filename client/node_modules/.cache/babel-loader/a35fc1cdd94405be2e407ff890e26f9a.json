{"ast":null,"code":"var _jsxFileName = \"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/MultiplayerFightScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst multiplayerFightScreen = _ref => {\n  _s();\n\n  let {\n    playerDa,\n    playerTwoDa,\n    onGameFinished\n  } = _ref;\n  const [playerTwoHealth, setPlayerTwoHealth] = useState(20);\n  const [previousPlayerTwoHealth, setPreviousPlayerTwoHealth] = useState(0);\n  const [playerHealth, setPlayerHealth] = useState(100);\n  const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n  const [playerTwoSpecialUsed, setPlayerTwoSpecialUsed] = useState(false);\n  const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n  const [gameFinished, setGameFinished] = useState(false);\n  const [gif, setGif] = useState(false);\n  useEffect(() => {\n    if (playerTwoHealth <= 0 & playerHealth > 0) {\n      onGameFinished(playerDa);\n    } else if (playerHealth <= 0 & playerTwoHealth > 0) {\n      onGameFinished(playerTwoDa);\n    }\n  }, [playerTwoHealth, playerHealth]);\n\n  const getRandomNumber = function (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const handleAttack1Click = function () {\n    let damage = 0;\n\n    if (playerDa.daType === \"BUFFDA\") {\n      damage = getRandomNumber(18, 30);\n    } else if (playerDa.daType === \"AVERAGEDA\") {\n      damage = getRandomNumber(23, 25);\n    } else {\n      damage = getRandomNumber(18, 25);\n    }\n\n    setPreviousPlayerTwoHealth(playerTwoHealth);\n    setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - damage);\n    console.log(\"player one hit player two for : \" + damage);\n    setGif(true);\n    setTimeout(function () {\n      setGif(false);\n    }, 1500);\n  };\n\n  const handleAttack2Click = function () {\n    let damage = getRandomNumber(10, 35);\n    setPreviousPlayerTwoHealth(playerTwoHealth);\n    setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - damage);\n    console.log(\"player one hit player two for : \" + damage);\n    setGif(true);\n    setTimeout(function () {\n      setGif(false);\n    }, 1500);\n  };\n\n  const handleHealClick = function () {\n    let heal = 0;\n\n    if (playerDa.daType === \"SOFTDA\") {\n      heal = getRandomNumber(23, 25);\n    } else {\n      heal = getRandomNumber(18, 25);\n    }\n\n    if (playerHealth + heal >= 100) {\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerhealth => 100);\n    } else if (playerHealth <= 30) {\n      heal = getRandomNumber(24, 25);\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth + heal);\n    } else {\n      setPreviousPlayerHealth(playerHealth);\n      setPlayerHealth(playerHealth => playerHealth + heal);\n    }\n\n    console.log(\"player one healed for : \" + heal);\n  };\n\n  const handleSpecialClick = function () {\n    if (playerSpecialUsed === false) {\n      let opponentDamage = 45;\n      let selfDamage = 25;\n      const specialOutcome = [opponentDamage, opponentDamage, selfDamage];\n      const specialNumber = Math.floor(Math.random() * 3);\n\n      if (specialOutcome[specialNumber] === opponentDamage) {\n        setPreviousPlayerTwoHealth(playerTwoHealth);\n        setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - opponentDamage);\n        setPlayerSpecialUsed(true);\n        playerDa.specialName = \"Special Used\";\n        console.log(\"player one hit player two for : \" + opponentDamage);\n      } else if (specialOutcome[specialNumber] === selfDamage) {\n        setPreviousPlayerHealth(playerHealth);\n        setPlayerHealth(playerHealth => playerHealth - selfDamage);\n        setPlayerSpecialUsed(true);\n        playerDa.specialName = \"Special Used\";\n        console.log(\"player hit themselves for : \" + selfDamage);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const handlePlayerTwoAttack1Click = function () {\n    let damage = 0;\n\n    if (playerTwoDa.daType === \"BUFFDA\") {\n      damage = getRandomNumber(18, 30);\n    } else if (playerTwoDa.daType === \"AVERAGEDA\") {\n      damage = getRandomNumber(23, 25);\n    } else {\n      damage = getRandomNumber(18, 25);\n    }\n\n    setPreviousPlayerHealth(playerHealth);\n    setPlayerHealth(playerHealth => playerHealth - damage);\n    console.log(\"player two hit player one for : \" + damage);\n    setGif(true);\n    setTimeout(function () {\n      setGif(false);\n    }, 1500);\n  };\n\n  const handlePlayerTwoAttack2Click = function () {\n    let damage = getRandomNumber(10, 35);\n    setPreviousPlayerHealth(playerHealth);\n    setPlayerHealth(playerHealth => playerHealth - damage);\n    console.log(\"player two hit player one for : \" + damage);\n    setGif(true);\n    setTimeout(function () {\n      setGif(false);\n    }, 1500);\n  };\n\n  const handlePlayerTwoHealClick = function () {\n    let heal = 0;\n\n    if (playerTwoDa.daType === \"SOFTDA\") {\n      heal = getRandomNumber(23, 25);\n    } else {\n      heal = getRandomNumber(18, 25);\n    }\n\n    if (playerTwoHealth + heal >= 100) {\n      setPreviousPlayerTwoHealth(playerTwoHealth);\n      setPlayerTwoHealth(playerTwohealth => 100);\n    } else if (playerTwoHealth <= 30) {\n      heal = getRandomNumber(24, 25);\n      setPreviousPlayerTwoHealth(playerTwoHealth);\n      setPlayerTwoHealth(playerTwoHealth => playerTwoHealth + heal);\n    } else {\n      setPreviousPlayerTwoHealth(playerTwoHealth);\n      setPlayerTwoHealth(playerTwoHealth => playerTwoHealth + heal);\n    }\n\n    console.log(\"player two healed for : \" + heal);\n  };\n\n  const handlePlayerTwoSpecialClick = function () {\n    if (playerTwoSpecialUsed === false) {\n      let opponentDamage = 45;\n      let selfDamage = 25;\n      const specialOutcome = [opponentDamage, opponentDamage, selfDamage];\n      const specialNumber = Math.floor(Math.random() * 3);\n\n      if (specialOutcome[specialNumber] === opponentDamage) {\n        setPreviousPlayerHealth(playerHealth);\n        setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n        setPlayerTwoSpecialUsed(true);\n        playerTwoDa.specialName = \"Special Used\";\n        console.log(\"player two hit player one for : \" + opponentDamage);\n      } else if (specialOutcome[specialNumber] === selfDamage) {\n        setPreviousPlayerTwoHealth(playerTwoHealth);\n        setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - selfDamage);\n        setPlayerTwoSpecialUsed(true);\n        playerTwoDa.specialName = \"Special Used\";\n        console.log(\"player two hit themselves for : \" + selfDamage);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const showFist = function () {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/fist.gif`,\n      height: \"200px\",\n      width: \"200px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 16\n    }, this);\n  };\n\n  if (gameFinished === false) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/${playerDa.imgName}`,\n          width: \"200\",\n          height: \"250\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: playerDa.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: playerDa.bio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: [playerDa.attackOneName, \"...  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAttack1Click,\n              children: \"ATTACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 77\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: [playerDa.attackTwoName, \"...  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAttack2Click,\n              children: \"ATTACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 77\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: [playerDa.healName, \"...  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleHealClick,\n              children: \"HEAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 72\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), previousPlayerHealth > playerHealth ? /*#__PURE__*/_jsxDEV(CountUp, {\n          className: \"countUpRed\",\n          start: previousPlayerHealth,\n          end: playerHealth,\n          duration: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(CountUp, {\n          className: \"countUpGreen\",\n          start: previousPlayerHealth,\n          end: playerHealth,\n          duration: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), gif === true ? showFist() : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/${playerTwoDa.imgName}`,\n          width: \"220\",\n          height: \"250\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: playerTwoDa.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: playerTwoDa.bio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: [playerTwoDa.attackOneName, \"...  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"ATTACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 80\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: [playerTwoDa.attackTwoName, \"...  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"ATTACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 80\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"health\",\n            children: [playerTwoDa.healName, \"...  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"HEAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 75\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), previousPlayerTwoHealth > playerTwoHealth ? /*#__PURE__*/_jsxDEV(CountUp, {\n          className: \"countUpRed\",\n          start: previousPlayerTwoHealth,\n          end: playerTwoHealth,\n          duration: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(CountUp, {\n          className: \"countUpGreen\",\n          start: previousPlayerTwoHealth,\n          end: playerTwoHealth,\n          duration: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    if (playerTwoHealth <= 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [playerDa.name, \" smashed \", playerTwoDa.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Player One Wins !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"health\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [playerTwoDa.name, \" wrecked \", playerDa.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Player Two Wins !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  }\n};\n\n_s(multiplayerFightScreen, \"zjaaNr11g5nQqFCr5F1Dm1K7r9c=\");\n\nexport default multiplayerFightScreen;","map":{"version":3,"sources":["/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/MultiplayerFightScreen.js"],"names":["React","multiplayerFightScreen","playerDa","playerTwoDa","onGameFinished","playerTwoHealth","setPlayerTwoHealth","useState","previousPlayerTwoHealth","setPreviousPlayerTwoHealth","playerHealth","setPlayerHealth","previousPlayerHealth","setPreviousPlayerHealth","playerTwoSpecialUsed","setPlayerTwoSpecialUsed","playerSpecialUsed","setPlayerSpecialUsed","gameFinished","setGameFinished","gif","setGif","useEffect","getRandomNumber","min","max","Math","floor","random","handleAttack1Click","damage","daType","console","log","setTimeout","handleAttack2Click","handleHealClick","heal","playerhealth","handleSpecialClick","opponentDamage","selfDamage","specialOutcome","specialNumber","specialName","handlePlayerTwoAttack1Click","handlePlayerTwoAttack2Click","handlePlayerTwoHealClick","playerTwohealth","handlePlayerTwoSpecialClick","showFist","process","env","PUBLIC_URL","imgName","name","bio","attackOneName","attackTwoName","healName"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst multiplayerFightScreen = ({ playerDa, playerTwoDa, onGameFinished }) => {\n\n    const [playerTwoHealth, setPlayerTwoHealth] = useState(20);\n    const [previousPlayerTwoHealth, setPreviousPlayerTwoHealth] = useState(0);\n    const [playerHealth, setPlayerHealth] = useState(100);\n    const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n    const [playerTwoSpecialUsed, setPlayerTwoSpecialUsed] = useState(false);\n    const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [gif, setGif] = useState(false)\n\n    useEffect(() => {\n        if (playerTwoHealth <= 0 & playerHealth > 0) {\n            onGameFinished(playerDa);\n        } else if (playerHealth <= 0 & playerTwoHealth > 0) {\n            onGameFinished(playerTwoDa);\n        }\n    }, [playerTwoHealth, playerHealth])\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const handleAttack1Click = function () {\n        let damage = 0;\n        if (playerDa.daType === \"BUFFDA\") {\n            damage = getRandomNumber(18, 30)\n        } else if (playerDa.daType === \"AVERAGEDA\") {\n            damage = getRandomNumber(23, 25)\n        } else {\n            damage = getRandomNumber(18, 25)\n        }\n        setPreviousPlayerTwoHealth(playerTwoHealth)\n        setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - damage)\n        console.log(\"player one hit player two for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handleAttack2Click = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousPlayerTwoHealth(playerTwoHealth)\n        setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - damage)\n        console.log(\"player one hit player two for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handleHealClick = function () {\n        let heal = 0;\n        if (playerDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerHealth + heal) >= 100) {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerhealth => 100)\n        } else if (playerHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        } else {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        }\n        console.log(\"player one healed for : \" + heal);\n    }\n\n    const handleSpecialClick = function () {\n        if (playerSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerTwoHealth(playerTwoHealth)\n                setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - opponentDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player one hit player two for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - selfDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit themselves for : \" + selfDamage);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const handlePlayerTwoAttack1Click = function () {\n        let damage = 0;\n        if (playerTwoDa.daType === \"BUFFDA\") {\n            damage = getRandomNumber(18, 30)\n        } else if (playerTwoDa.daType === \"AVERAGEDA\") {\n            damage = getRandomNumber(23, 25)\n        } else {\n            damage = getRandomNumber(18, 25)\n        }\n        setPreviousPlayerHealth(playerHealth)\n        setPlayerHealth(playerHealth => playerHealth - damage)\n        console.log(\"player two hit player one for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handlePlayerTwoAttack2Click = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousPlayerHealth(playerHealth)\n        setPlayerHealth(playerHealth => playerHealth - damage)\n        console.log(\"player two hit player one for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handlePlayerTwoHealClick = function () {\n        let heal = 0;\n        if (playerTwoDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerTwoHealth + heal) >= 100) {\n            setPreviousPlayerTwoHealth(playerTwoHealth)\n            setPlayerTwoHealth(playerTwohealth => 100)\n        } else if (playerTwoHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerTwoHealth(playerTwoHealth)\n            setPlayerTwoHealth(playerTwoHealth => playerTwoHealth + heal)\n        } else {\n            setPreviousPlayerTwoHealth(playerTwoHealth)\n            setPlayerTwoHealth(playerTwoHealth => playerTwoHealth + heal)\n        }\n        console.log(\"player two healed for : \" + heal);\n    }\n\n    const handlePlayerTwoSpecialClick = function () {\n        if (playerTwoSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n                setPlayerTwoSpecialUsed(true);\n                playerTwoDa.specialName = \"Special Used\"\n                console.log(\"player two hit player one for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerTwoHealth(playerTwoHealth)\n                setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - selfDamage);\n                setPlayerTwoSpecialUsed(true);\n                playerTwoDa.specialName = \"Special Used\"\n                console.log(\"player two hit themselves for : \" + selfDamage);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const showFist = function () {\n        return <img src={`${process.env.PUBLIC_URL}/fist.gif`} height=\"200px\" width=\"200px\" />\n    }\n\n\n    if (gameFinished === false) {\n        return (\n            <>\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${playerDa.imgName}`} width=\"200\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{playerDa.name}</li>\n                        <li className=\"health\">{playerDa.bio}</li>\n                        <li className=\"health\">{playerDa.attackOneName}...  <button onClick={handleAttack1Click}>ATTACK</button></li>\n                        <li className=\"health\">{playerDa.attackTwoName}...  <button onClick={handleAttack2Click}>ATTACK</button></li>\n                        <li className=\"health\">{playerDa.healName}...  <button onClick={handleHealClick}>HEAL</button></li>\n                    </ul>\n                    {previousPlayerHealth > playerHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n                {gif === true ? showFist() : null}\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${playerTwoDa.imgName}`} width=\"220\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{playerTwoDa.name}</li>\n                        <li className=\"health\">{playerTwoDa.bio}</li>\n                        <li className=\"health\">{playerTwoDa.attackOneName}...  <button>ATTACK</button></li>\n                        <li className=\"health\">{playerTwoDa.attackTwoName}...  <button>ATTACK</button></li>\n                        <li className=\"health\">{playerTwoDa.healName}...  <button>HEAL</button></li>\n                    </ul>\n\n                    {previousPlayerTwoHealth > playerTwoHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousPlayerTwoHealth}\n                            end={playerTwoHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousPlayerTwoHealth}\n                            end={playerTwoHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n            </>\n        )\n    } else {\n        if (playerTwoHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerDa.name} smashed {playerTwoDa.name}</h1>\n                        <h2>Player One Wins !</h2>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerTwoDa.name} wrecked {playerDa.name}</h1>\n                        <h2>Player Two Wins !</h2>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nexport default multiplayerFightScreen"]},"metadata":{},"sourceType":"module"}