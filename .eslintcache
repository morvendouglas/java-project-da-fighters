[{"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/index.js":"1","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/reportWebVitals.js":"2","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/App.js":"3","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/containers/MainContainer.js":"4","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/containers/DaContainer.js":"5","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Home.js":"6","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/FinishScreen.js":"7","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ModeScreen.js":"8","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Simulation.js":"9","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/CreateADa.js":"10","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Multiplayer.js":"11","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/SimulationFightScreen.js":"12","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/MultiplayerFightScreen.js":"13","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/DaList.js":"14","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Scoreboard.js":"15","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ResultScreen.js":"16","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/FightScreen.js":"17","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/helpers/request.js":"18","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/PlayerTwoDa.js":"19","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/PlayerOneDa.js":"20","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ScoreboardPoints.js":"21","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Da.js":"22","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ScoreboardDa.js":"23"},{"size":501,"mtime":1638896164758,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1638613238446,"results":"26","hashOfConfig":"25"},{"size":201,"mtime":1638896161175,"results":"27","hashOfConfig":"25"},{"size":1067,"mtime":1638957739457,"results":"28","hashOfConfig":"25"},{"size":5211,"mtime":1638963026627,"results":"29","hashOfConfig":"25"},{"size":617,"mtime":1638957739456,"results":"30","hashOfConfig":"25"},{"size":447,"mtime":1638960114215,"results":"31","hashOfConfig":"25"},{"size":662,"mtime":1638962550798,"results":"32","hashOfConfig":"25"},{"size":1401,"mtime":1638912662673,"results":"33","hashOfConfig":"25"},{"size":2672,"mtime":1638886615823,"results":"34","hashOfConfig":"25"},{"size":1400,"mtime":1638912004724,"results":"35","hashOfConfig":"25"},{"size":16998,"mtime":1638965206966,"results":"36","hashOfConfig":"25"},{"size":12767,"mtime":1638964523677,"results":"37","hashOfConfig":"25"},{"size":781,"mtime":1638960161587,"results":"38","hashOfConfig":"25"},{"size":2981,"mtime":1638887062027,"results":"39","hashOfConfig":"25"},{"size":3020,"mtime":1638959959000,"results":"40","hashOfConfig":"25"},{"size":20372,"mtime":1638963303562,"results":"41","hashOfConfig":"25"},{"size":593,"mtime":1638806049634,"results":"42","hashOfConfig":"25"},{"size":359,"mtime":1638911957985,"results":"43","hashOfConfig":"25"},{"size":365,"mtime":1638912433182,"results":"44","hashOfConfig":"25"},{"size":352,"mtime":1638886615824,"results":"45","hashOfConfig":"25"},{"size":335,"mtime":1638911080421,"results":"46","hashOfConfig":"25"},{"size":195,"mtime":1638886615823,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1qgpvhc",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"50"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/index.js",[],["110","111"],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/reportWebVitals.js",[],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/App.js",[],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/containers/MainContainer.js",["112"],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport DaContainer from './DaContainer';\nimport Home from '../components/Home';\n\n\nconst MainContainer = () => {\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" render ={() => {return <Home />}} />\n        <Route path=\"/select\" component={DaContainer} />\n        <Route path=\"/fight\" component={DaContainer} />\n        <Route path=\"/result\" component={DaContainer} />\n        <Route path=\"/finish\" component={DaContainer} />\n        <Route path=\"/mode\" component={DaContainer}  />\n        <Route path=\"/multiplayer\" component={DaContainer} />\n        <Route path=\"/multiplayerfight\" component={DaContainer} />\n        <Route path=\"/simulation\" component={DaContainer} />\n        <Route path=\"/simulationfight\" component={DaContainer} />\n        <Route path=\"/create-a-da\" component={DaContainer} />\n        <Route path=\"/scoreboard/:id\" component={DaContainer} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default MainContainer;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/containers/DaContainer.js",["113","114"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DaList from '../components/DaList';\nimport CreateADa from '../components/CreateADa';\nimport FightScreen from '../components/FightScreen';\nimport ResultScreen from '../components/ResultScreen';\nimport FinishScreen from '../components/FinishScreen';\nimport ModeScreen from '../components/ModeScreen';\nimport Multiplayer from '../components/Multiplayer';\nimport Simulation from '../components/Simulation';\nimport MultiplayerFightScreen from '../components/MultiplayerFightScreen'\nimport SimulationFightScreen from '../components/SimulationFightScreen'\nimport Scoreboard from '../components/Scoreboard';\nimport Request from '../helpers/request';\n\nconst DaContainer = () => {\n  const [das, setDas] = useState([])\n  const [playerDa, setPlayerDa] = useState(null)\n  const [computerDa, setComputerDa] = useState(null)\n  const [winner, setWinner] = useState(null)\n  const [gameFinished, setGameFinished] = useState(null)\n  const [playerTwoDa, setPlayerTwoDa] = useState(null)\n  const [messages, setMessages] = useState([])\n\n  const requestAll = function () {\n    const request = new Request();\n    const dasPromise = request.get('/select')\n    const messagesPromise = request.get('/select-messages')\n\n    Promise.all([dasPromise])\n      .then((data) => {\n        setDas(data[0])\n      })\n\n    Promise.all([messagesPromise])\n      .then((data) => {\n        setMessages(data[0])\n      })\n  }\n\nuseEffect(() => {\n  requestAll()\n}, [])\n\nuseEffect(() => {\n  selectComputerDa()\n}, [playerDa])\n\n//   const playMusic = function () {\n//     let music = new Audio(\"/main_page_screen.wav\")\n//     music.play();\n// }\n\nconst handlePost = function (da) {\n  const request = new Request();\n  request.post(\"/create-a-da\", da)\n    .then(() => window.location = '/mode')\n}\n\nconst findDaById = function (id) {\n  return das.find((da) => {\n    return da.id === parseInt(id);\n  })\n}\n\nconst handleUpdate = function (da) {\n  const request = new Request();\n  request.patch('/scoreboard/' + da.id, da)\n  // .then(() => {\n  //   window.location = '/scoreboard/:id'\n  // })\n}\n\nconst onDaClicked = function (da) {\n  setPlayerDa(da);\n  // <Route path=\"/result\" render={() => {\n  //   return <ResultScreen />\n  // }} />\n}\n\nconst onPlayerTwoDaClicked = function (da) {\n  setPlayerTwoDa(da);\n}\n\nconst onGameFinished = function (da) {\n  setWinner(da)\n}\n\nconst onChooseNextRandomDa = function (da) {\n  setComputerDa(da)\n}\n\nconst onPlayerDaContinue = function (da) {\n  setPlayerDa(da)\n}\n\nconst onNewDasList = function (das) {\n  setDas(das)\n}\n\nconst onAllDasBeaten = function (da) {\n  setGameFinished(da)\n}\n\nconst selectComputerDa = function () {\n  const copiedDas = [...das]\n  for (var i = 0; i < copiedDas.length; i++) {\n    if (copiedDas[i] === playerDa) {\n      copiedDas.splice(i, 1);\n    }\n  }\n  const randomIndex = Math.floor(Math.random() * copiedDas.length);\n  const randomDa = copiedDas[randomIndex];\n  setComputerDa(randomDa)\n}\n\nif (winner === null) {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/select\" render={() => {\n          return <DaList classname=\"DaList\" das={das} onDaClicked={onDaClicked} />\n        }} />\n        <Route path=\"/fight\" render={() => {\n          return <FightScreen playerDa={playerDa} computerDa={computerDa} onGameFinished={onGameFinished} das={das} />\n        }} />\n        <Route path=\"/multiplayerfight\" render={() => {\n          return <MultiplayerFightScreen playerDa={playerDa} playerTwoDa={playerTwoDa} onGameFinished={onGameFinished} />\n        }} />\n        <Route path=\"/simulationfight\" render={() => {\n          return <SimulationFightScreen computerDaOne={playerDa} computerDaTwo={playerTwoDa} onGameFinished={onGameFinished} />\n        }} />\n        <Route path=\"/mode\" render={() => {\n          return <ModeScreen />\n        }} />\n        <Route path=\"/multiplayer\" render={() => {\n          return <Multiplayer das={das} onDaClicked={onDaClicked} onPlayerTwoDaClicked={onPlayerTwoDaClicked} />\n        }} />\n        <Route path=\"/simulation\" render={() => {\n          return <Simulation das={das} onDaClicked={onDaClicked} onPlayerTwoDaClicked={onPlayerTwoDaClicked} />\n        }} />\n        {/* <Route path=\"/result\" render={() => {\n          return <ResultScreen playerDa={playerDa} computerDa={computerDa} />\n        }} /> */}\n        <Route path=\"/create-a-da\" render={() => {\n          return <CreateADa handlePost={handlePost} />\n        }} />\n        <Route path=\"/scoreboard/:id\" render={(props) => {\n          const id = props.match.params.id;\n          const da = findDaById(id);\n          return <Scoreboard das={das} handleUpdate={handleUpdate} />\n        }} />\n      </Switch>\n    </div>\n  )\n} else if (gameFinished != null) {\n  return (\n    <div>\n      <FinishScreen winner={winner} />\n    </div>\n  )\n} else {\n  return (\n    <div>\n      <ResultScreen winner={winner} playerDa={playerDa} onGameFinished={onGameFinished} das={das} computerDa={computerDa} onChooseNextRandomDa={onChooseNextRandomDa} onPlayerDaContinue={onPlayerDaContinue} onNewDasList={onNewDasList} onAllDasBeaten={onAllDasBeaten} messages={messages} />\n    </div>\n  )\n}\n}\n\nexport default DaContainer;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Home.js",["115","116","117"],"import React from \"react\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\nconst Home = () => {\n\n    const playAudio = function () {\n        let audio = new Audio(\"/main_page_screen.wav\")\n        audio.play();\n    }\n\n    return (\n        <div>\n            <img onClick={playAudio} className=\"main_logo\" height=\"600\" src={`${process.env.PUBLIC_URL}/logo.gif`} />\n            <div>\n                <a href=\"/mode\">\n                    <img className=\"press_start\" height=\"100\" src={`${process.env.PUBLIC_URL}/press_start.gif`} />\n                </a>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Home;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/FinishScreen.js",[],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ModeScreen.js",["118","119","120","121"],"import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nconst ModeScreen = () => {\n\n    return (\n        <div>\n            <Link to=\"/select\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/pvc.png`}></img> </Link>\n            <Link to=\"/multiplayer\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/pvp.png`}></img> </Link>\n            <Link to=\"/simulation\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/cvc.png`}></img> </Link>\n            <Link to=\"/create-a-da\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/DA.png`}></img> </Link>\n        </div>\n    )\n}\n\nexport default ModeScreen","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Simulation.js",["122","123"],"import React from \"react\";\nimport PlayerOneDa from \"./PlayerOneDa\";\nimport PlayerTwoDa from \"./PlayerTwoDa\"\nimport { Link } from 'react-router-dom';\n\nconst Simulation = ({ das, onDaClicked, onPlayerTwoDaClicked }) => {\n\n    const playerOneDasNodes = das.map((da, index) => {\n        return (\n            <li key={index}>\n                <PlayerOneDa da={da} key={index} onDaClicked={onDaClicked} />\n            </li>\n        )\n    })\n\n    const playerTwoDasNodes = das.map((da, index) => {\n        return (\n            <li key={index}>\n                <PlayerTwoDa da={da} key={index} onPlayerTwoDaClicked={onPlayerTwoDaClicked} />\n            </li>\n        )\n    })\n\n    return (\n        \n        <div >\n        <Link to=\"/\"> <img className=\"home_button\" src={`${process.env.PUBLIC_URL}/logo.png`}></img> </Link>\n            <div>\n                <h2 className=\"health\">Computer Da One : </h2>\n                <ul className = \"flex-container\">\n                {playerOneDasNodes}\n                </ul>\n            </div>\n            <div>\n            <h2 className=\"health\">Computer Da Two : </h2>\n            <ul className = \"flex-container\">\n                {playerTwoDasNodes}\n            </ul>\n            <Link to=\"/simulationfight\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/SquareGo.png`}></img> </Link>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Simulation","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/CreateADa.js",["124"],"import React, { useState } from 'react';\nimport '../CreateADa.css'\n\nconst CreateADa = ({ handlePost }) => {\n\n    // cant get daType in a select to  work with daForm\n\n    const [stateDa, setStateDa] = useState(\n        {\n            \"name\": \"\",\n            \"bio\": \"\",\n            \"daType\": \"BUFFDA\",\n            \"attackOneName\": \"\",\n            \"attackTwoName\": \"\",\n            \"healName\": \"\",\n            \"imgName\": \"11.png\",\n            \"startingHealth\": 100,\n            \"currentHealth\": 100,\n            \"points\": 0\n        }\n    )\n\n    // const handleClick = function (event) {\n    //     let propertyName = event.target.name;\n    //     let copiedDa = { ...stateDa }\n    //     const daImg1 = \"12.png\"\n    //     const daImg2 = \"13.png\"\n    //     const daImg3 = \"14.png\"\n    //     const randomDaImg = [daImg1, daImg2, daImg3]\n    //     const randomNumber = Math.floor(Math.random() * 3);\n    //     copiedDa[propertyName] = randomDaImg[randomNumber]\n    //     setStateDa(copiedDa)\n    // }\n\n\n    const handleChange = function (event) {\n        let propertyName = event.target.name;\n        let copiedDa = { ...stateDa }\n        copiedDa[propertyName] = event.target.value;\n        setStateDa(copiedDa)\n    }\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        handlePost(stateDa); \n    }\n\n    return (\n        <>\n        <div className=\"first\">\n           <img className=\"img\" src={`${process.env.PUBLIC_URL}/DA.png`} height=\"400px\" width=\"700px\"/>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"⚡ Da Name\" name=\"name\" className=\"input\" onChange={handleChange} value={stateDa.name} />\n                <input type=\"text\" placeholder=\"⚡ Bio\" name=\"bio\" className=\"input\" onChange={handleChange} value={stateDa.bio} />\n                <input type=\"text\" placeholder=\"⚡ First Attack Name\" className=\"input\" name=\"attackOneName\" onChange={handleChange} value={stateDa.attackOneName} />\n                <input type=\"text\" placeholder=\"⚡ Second Attack Name\" className=\"input\" name=\"attackTwoName\" onChange={handleChange} value={stateDa.attackTwoName} />\n                <input type=\"text\" placeholder=\"⚡ Heal Name\" name=\"healName\" className=\"input\" onChange={handleChange} value={stateDa.healName} />\n                {/* <label for=\"imgName\" className=\"label\">Click for da photo ->></label> */}\n                {/* <input type=\"radio\" className=\"radio\" name=\"imgName\"  value={stateDa.imgName} onClick={handleClick}></input> */}\n                <button type=\"submit\" className=\"submit\">Save</button>\n            </form>\n        </div>\n        </>\n\n    )\n}\n\n\nexport default CreateADa;\n","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Multiplayer.js",["125","126","127"],"import React from \"react\";\nimport Da from \"./Da\";\nimport PlayerOneDa from './PlayerOneDa'\nimport PlayerTwoDa from \"./PlayerTwoDa\"\nimport { Link } from 'react-router-dom';\n\nconst Multiplayer = ({ das, onDaClicked, onPlayerTwoDaClicked }) => {\n\n    const playerOneDasNodes = das.map((da, index) => {\n        return (\n            <li key={index}>\n                <PlayerOneDa da={da} key={index} onDaClicked={onDaClicked} />\n            </li>\n        )\n    })\n\n    const playerTwoDasNodes = das.map((da, index) => {\n        return (\n            <li key={index}>\n                <PlayerTwoDa da={da} key={index} onPlayerTwoDaClicked={onPlayerTwoDaClicked} />\n            </li>\n        )\n    })\n\n    return (\n        <div>\n            <Link to=\"/\"> <img className=\"home_button\" src={`${process.env.PUBLIC_URL}/logo.png`}></img> </Link>\n            <div>\n                <h2 className=\"health\">Player One : </h2>\n                <ul className = \"flex-container\">\n\t\t\t        {playerOneDasNodes}\n\t\t        </ul>\n            </div>\n            <div>\n                <h2 className=\"health\">Player Two : </h2>\n                <ul className = \"flex-container\">\n\t\t\t        {playerTwoDasNodes}\n\t\t        </ul>\n            </div>\n            <Link to=\"/multiplayerfight\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/SquareGo.png`}></img> </Link>\n        </div>\n    )\n\n}\n\nexport default Multiplayer","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/SimulationFightScreen.js",["128","129","130","131","132","133","134"],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/MultiplayerFightScreen.js",["135","136","137","138","139","140","141","142","143","144","145"],"import React, { useEffect, useState } from 'react'\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\nimport { getFID } from 'web-vitals';\n\nconst MultiplayerFightScreen = ({ playerDa, playerTwoDa, onGameFinished }) => {\n\n    const [playerTwoHealth, setPlayerTwoHealth] = useState(20);\n    const [previousPlayerTwoHealth, setPreviousPlayerTwoHealth] = useState(0);\n    const [playerHealth, setPlayerHealth] = useState(100);\n    const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n    const [playerTwoSpecialUsed, setPlayerTwoSpecialUsed] = useState(false);\n    const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [gif, setGif] = useState(false)\n    const [leftGif, setLeftGif] = useState(false)\n    const [rightGif, setRightGif] = useState(false)\n    const [healGif, setHealGif] = useState(false)\n    const [stunGif, setStunGif] = useState(false)\n\n\n    useEffect(() => {\n        if (playerTwoHealth <= 0 & playerHealth > 0) {\n            onGameFinished(playerDa);\n        } else if (playerHealth <= 0 & playerTwoHealth > 0) {\n            onGameFinished(playerTwoDa);\n        }\n    }, [playerTwoHealth, playerHealth])\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const handleAttack1Click = function () {\n        let damage = 0;\n        if (playerDa.daType === \"BUFFDA\") {\n            damage = getRandomNumber(18, 30)\n        } else if (playerDa.daType === \"AVERAGEDA\") {\n            damage = getRandomNumber(23, 25)\n        } else {\n            damage = getRandomNumber(18, 25)\n        }\n        setPreviousPlayerTwoHealth(playerTwoHealth)\n        setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - damage)\n        console.log(\"player one hit player two for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handleAttack2Click = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousPlayerTwoHealth(playerTwoHealth)\n        setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - damage)\n        console.log(\"player one hit player two for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handleHealClick = function () {\n        let heal = 0;\n        if (playerDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerHealth + heal) >= 100) {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerhealth => 100)\n        } else if (playerHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        } else {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        }\n        console.log(\"player one healed for : \" + heal);\n    }\n\n    const handleSpecialClick = function () {\n        if (playerSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerTwoHealth(playerTwoHealth)\n                setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - opponentDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player one hit player two for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - selfDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit themselves for : \" + selfDamage);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const handlePlayerTwoAttack1Click = function () {\n        let damage = 0;\n        if (playerTwoDa.daType === \"BUFFDA\") {\n            damage = getRandomNumber(18, 30)\n        } else if (playerTwoDa.daType === \"AVERAGEDA\") {\n            damage = getRandomNumber(23, 25)\n        } else {\n            damage = getRandomNumber(18, 25)\n        }\n        setPreviousPlayerHealth(playerHealth)\n        setPlayerHealth(playerHealth => playerHealth - damage)\n        console.log(\"player two hit player one for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handlePlayerTwoAttack2Click = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousPlayerHealth(playerHealth)\n        setPlayerHealth(playerHealth => playerHealth - damage)\n        console.log(\"player two hit player one for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handlePlayerTwoHealClick = function () {\n        let heal = 0;\n        if (playerTwoDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerTwoHealth + heal) >= 100) {\n            setPreviousPlayerTwoHealth(playerTwoHealth)\n            setPlayerTwoHealth(playerTwohealth => 100)\n        } else if (playerTwoHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerTwoHealth(playerTwoHealth)\n            setPlayerTwoHealth(playerTwoHealth => playerTwoHealth + heal)\n        } else {\n            setPreviousPlayerTwoHealth(playerTwoHealth)\n            setPlayerTwoHealth(playerTwoHealth => playerTwoHealth + heal)\n        }\n        console.log(\"player two healed for : \" + heal);\n    }\n\n    const handlePlayerTwoSpecialClick = function () {\n        if (playerTwoSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n                setPlayerTwoSpecialUsed(true);\n                playerTwoDa.specialName = \"Special Used\"\n                console.log(\"player two hit player one for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerTwoHealth(playerTwoHealth)\n                setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - selfDamage);\n                setPlayerTwoSpecialUsed(true);\n                playerTwoDa.specialName = \"Special Used\"\n                console.log(\"player two hit themselves for : \" + selfDamage);\n            }\n        } else {\n            return null;\n        }\n    }\n\n        const showGifLeft = function () {\n        const daImg2 = \"left2.gif\"\n        const daImg3 = \"left3.gif\"\n        const randomDaImg = [daImg2, daImg3]\n        const randomNumber = Math.floor(Math.random() * 2);\n        const img = randomDaImg[randomNumber]\n        return <img src={`${process.env.PUBLIC_URL}/${img}`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n    const showGifRight = function () {\n        const daImg1 = \"right1.gif\"\n        const daImg2 = \"right2.gif\"\n        const daImg3 = \"right3.gif\"\n        const randomDaImg = [daImg1, daImg2, daImg3]\n        const randomNumber = Math.floor(Math.random() * 3);\n        const img = randomDaImg[randomNumber]\n        return <img src={`${process.env.PUBLIC_URL}/${img}`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n\n    const showFist = function () {\n        return <img src={`${process.env.PUBLIC_URL}/fist.gif`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n    const showHeal = function () {\n        return <img src={`${process.env.PUBLIC_URL}/street-fighter-zangief.gif`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n    const showStun = function () {\n        return <img src={`${process.env.PUBLIC_URL}/balrog-diz.gif`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n\n\n    if (gameFinished === false) {\n        return (\n            <div className=\"fight_bg\">\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${playerDa.imgName}`} className=\"DaFightImg\"  />\n                    <ul className = \"DaDetails\">\n                        <li className=\"name\">{playerDa.name}</li>\n                        <li className=\"bio\">{playerDa.bio}</li>\n                        <li className=\"attack1\">{playerDa.attackOneName}...  <button onClick={handleAttack1Click}>ATTACK</button></li>\n                        <li className=\"attack2\">{playerDa.attackTwoName}...  <button onClick={handleAttack2Click}>ATTACK</button></li>\n                        <li className=\"heal\">{playerDa.healName}...  <button onClick={handleHealClick}>HEAL</button></li>\n                    </ul>\n                    <button onClick={handleSpecialClick} className=\"special\" ></button>\n                    <div className=\"playerCountUp\">\n                    {previousPlayerHealth > playerHealth ?\n                        <CountUp\n                            className=\"countUpRedP1\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreenP1\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        />}\n                    </div>\n                </div>\n                <div className=\"gif\">\n                {leftGif === true ? showGifLeft() : null}\n                {rightGif === true ? showGifRight() : null}\n                {healGif === true ? showHeal() : null}\n                {gif === true ? showFist() : null}\n                {stunGif === true ? showStun() : null}\n                </div>\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${playerTwoDa.imgName}`} className=\"CPUImage\" />\n                    <ul>\n                        <li className=\"CPUName\">{playerTwoDa.name}</li>\n                        <li className=\"CPUBio\">{playerTwoDa.bio}</li>\n                        <li className=\"CPUAttack1\">{playerTwoDa.attackOneName}...  <button onClick={handlePlayerTwoAttack1Click}>ATTACK</button></li>\n                        <li className=\"CPUAttack2\">{playerTwoDa.attackTwoName}...  <button onClick={handlePlayerTwoAttack2Click}>ATTACK</button></li>\n                        <li className=\"CPUHeal\">{playerTwoDa.healName}...  <button onClick={handlePlayerTwoHealClick}>HEAL</button></li>\n                    </ul>\n                    {/* <button onClick={handleSpecialClick} className=\"special2\" ></button> */}\n                    </div>\n                    <div className=\"playerCountUp\">\n                    {previousPlayerTwoHealth > playerTwoHealth ?\n                        <CountUp\n                            className=\"countUpRedCPU\"\n                            start={previousPlayerTwoHealth}\n                            end={playerTwoHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreenCPU\"\n                            start={previousPlayerTwoHealth}\n                            end={playerTwoHealth}\n                            duration=\"1\"\n                        />}\n                    </div>\n                </div>\n        )\n    } else {\n        if (playerTwoHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerDa.name} smashed {playerTwoDa.name}</h1>\n                        <h2>Player One Wins !</h2>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerTwoDa.name} wrecked {playerDa.name}</h1>\n                        <h2>Player Two Wins !</h2>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nexport default MultiplayerFightScreen","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/DaList.js",["146","147"],"import React from 'react';\nimport Da from './Da';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\n\nconst DaList = ({ das, onDaClicked }) => {\n\n\tconst dasNodes = das.map((da, index) => {\n\t\treturn (\n\t\t\t<li key={index} >\n\t\t\t\t<Da da={da} key={index} onDaClicked={onDaClicked}/>\n\t\t\t</li>\n\t\t)\n\t})\n\n\t// const playFightMusic = function () {\n    //     let fightAudio = new Audio(\"/main_page_screen.wav\")\n    //     fightAudio.play();\n    // }\n\n\treturn (\n\t\t<div  >\n\t\t<Link to=\"/\"> <img className=\"home_button\" src={`${process.env.PUBLIC_URL}/logo.png`}></img> </Link>\n\t\t<ul className = \"flex-container\">\n\t\t\t{dasNodes}\n\t\t</ul>\n\t\t<Link to=\"/fight\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/SquareGo.png`}></img> </Link>\n\t\t</div>\n\t)\n}\nexport default DaList;\n\n","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Scoreboard.js",["148","149"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ScoreboardDa from './ScoreboardDa';\nimport ScoreboardPoints from './ScoreboardPoints';\nimport '../Scoreboard.css'\n\nconst Scoreboard = ({ das, handleUpdate }) => {\n\n    const [stateDa, setStateDa] = useState(\n        {\n            \"id\": \"\",\n            \"name\": \"\",\n            \"bio\": \"\",\n            \"daType\": \"\",\n            \"attackOneName\": \"\",\n            \"attackTwoName\": \"\",\n            \"healName\": \"\",\n            \"imgName\": \"\",\n            \"startingHealth\": 100,\n            \"currentHealth\": 100,\n            \"points\": 0\n        }\n    )\n\n    const [disable, setDisable] = useState(false);\n\n    const findDaById = function () {\n        let url = window.location.pathname\n        let id = url.substring(url.lastIndexOf('/') + 1);\n        return das.find((da) => {\n            return da.id === parseInt(id);\n        })\n    }\n\n    let daWinner = findDaById()\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        let copiedDa = { ...stateDa }\n        copiedDa['id'] = daWinner.id\n        copiedDa[\"name\"] = daWinner.name\n        copiedDa[\"bio\"] = daWinner.bio\n        copiedDa[\"daType\"] = daWinner.daType\n        copiedDa[\"attackOneName\"] = daWinner.attackOneName\n        copiedDa[\"attackTwoName\"] = daWinner.attackTwoName\n        copiedDa[\"healName\"] = daWinner.healName\n        copiedDa[\"imgName\"] = daWinner.imgName\n        copiedDa[\"points\"] = daWinner.points += 100\n        handleUpdate(copiedDa)\n        setDisable(true)\n    }\n\n    // das.sort(function (a, b) {\n    //     return b.points - a.points;\n    // })\n\n    const dasNodes = das.map((da, index) => {\n        return (\n            <ScoreboardDa da={da} key={index} />\n        )\n    })\n\n    const daPoints = das.map((da, index) => {\n        return (\n            <ScoreboardPoints da={da} key={index} />\n        )\n    })\n\n    return (\n        <div >\n            <table className=\"scoreboard\">\n                <thead >\n                    <tr>\n                    <th colspan={das.length} className=\"header\">\n                        <form onSubmit={handleSubmit}>\n                            <button type=\"submit\" disabled={disable} className=\"buttonScoreboard\">Collect Points</button>\n                        </form>\n                    </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td><span className=\"daName\">Da League</span></td>\n                        <td><span className=\"daPoints\">Points</span></td>\n                    </tr>\n                    <tr>\n                        <td>{dasNodes}</td>\n                        <td>{daPoints}</td>\n    \n                    </tr>\n                \n                </tbody>\n        \n            </table>\n        \n            <Link to=\"/\"> <img className=\"home\" src={`${process.env.PUBLIC_URL}/logo.png`}></img> </Link>\n        </div>\n    )\n}\n\nexport default Scoreboard;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ResultScreen.js",["150"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport FinishScreen from './FinishScreen';\n\nconst ResultScreen = ({ winner, playerDa, onGameFinished, das, computerDa, onChooseNextRandomDa, onPlayerDaContinue, onNewDasList, onAllDasBeaten, messages }) => {\n\n    const findWinMessage = function () {\n        const copyMessages = [...messages]\n        const winMessages = copyMessages.filter((message) => {\n            return message.messageType === \"WIN\"\n        })\n        const randomIndexWin = Math.floor(Math.random() * winMessages.length)\n        const randomWinMessage = winMessages[randomIndexWin]\n        return randomWinMessage.comment\n    }\n\n    const findLoseMessage = function () {\n        const copyMessages = [...messages]\n        const loseMessages = copyMessages.filter((message) => {\n            return message.messageType === \"LOSE\"\n        })\n        const randomIndexWin = Math.floor(Math.random() * loseMessages.length)\n        const randomLoseMessage = loseMessages[randomIndexWin]\n        return randomLoseMessage.comment\n    }\n\n    const handleOnClick = function () {\n        onGameFinished(null);\n    }\n\n    const handleOnNextDaClick = function () {\n        const copiedDas = [...das]\n        if (copiedDas.length < 2) {\n            onAllDasBeaten(playerDa)\n        } else {\n            for (var i = 0; i < copiedDas.length; i++) {\n                if (copiedDas[i] === computerDa) {\n                    copiedDas.splice(i, 1);\n                }\n                if (copiedDas[i] === playerDa) {\n                    copiedDas.splice(i, 1);\n                }\n            }\n            const randomIndex = Math.floor(Math.random() * copiedDas.length);\n            const randomDa = copiedDas[randomIndex];\n            onChooseNextRandomDa(randomDa)\n            onGameFinished(null)\n            onPlayerDaContinue(playerDa)\n            onNewDasList(copiedDas)\n        }\n    }\n\n    return (\n        <div className=\"health\">\n            <h1>{winner.name} Won !</h1>\n            {winner.name === playerDa.name ?\n                <div>\n                    <h2> You battered them !</h2>\n                    <h2> {findWinMessage()}</h2>\n                    {das.length < 2 ?\n                        <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        :\n                        <Link to=\"/fight\">\n                            <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        </Link>\n                    }\n                </div>\n                :\n                <div>\n                    <h2> You got smashed ...</h2>\n                    <h2> {findLoseMessage()}</h2>\n                    <Link to=\"/select\"><button type=\"button\" onClick={handleOnClick}>Play again ...</button></Link>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ResultScreen\n\n// if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/FightScreen.js",["151","152","153","154"],"import React, { useEffect, useState } from 'react';\nimport CountUp from 'react-countup';\nimport '../App.css'\nimport '../FightScreen.css'\n\n\nconst FightScreen = ({ playerDa, computerDa, onGameFinished, das }) => {\n\n    const [computerHealth, setComputerHealth] = useState(100);\n    const [previousComputerHealth, setPreviousComputerHealth] = useState(0);\n    const [playerHealth, setPlayerHealth] = useState(100);\n    const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n    const [computerSpecialUsed, setComputerSpecialUsed] = useState(false);\n    const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [gif, setGif] = useState(false)\n    const [leftGif, setLeftGif] = useState(false)\n    const [rightGif, setRightGif] = useState(false)\n    const [healGif, setHealGif] = useState(false)\n    const [stunGif, setStunGif] = useState(false)\n    const [missedGif, setMissedGif] = useState(false)\n\n\n    useEffect(() => {\n        if (computerHealth <= 0 & playerHealth > 0) {\n            onGameFinished(playerDa);\n        } else if (playerHealth <= 0 & computerHealth > 0) {\n            onGameFinished(computerDa);\n        }\n    }, [computerHealth, playerHealth])\n\n    const playAudio = function () {\n        let music = new Audio(\"/game_music.wav\")\n        music.play()\n    }\n\n    const playSound = function () {\n        let audio1 = new Audio(\"/sound1.wav\")\n        let audio2 = new Audio(\"/sound2.wav\")\n        const randomAudio = [audio1, audio2]\n        const randomNumber = Math.floor(Math.random() * 2);\n        const chosenSound = randomAudio[randomNumber]\n        chosenSound.play()\n    };\n\n    const playComputerSound = function () {\n        let audio3 = new Audio(\"/sound3.wav\")\n        let audio4 = new Audio(\"/sound4.wav\")\n        const randomAudio = [audio3, audio4]\n        const randomNumber = Math.floor(Math.random() * 2);\n        const chosenSound = randomAudio[randomNumber]\n        chosenSound.play()\n    };\n\n    const playHeal = function () {\n        let healAudio = new Audio(\"/nectar.wav\")\n        healAudio.play()\n    }\n\n    const playSpecial = function () {\n        let specialSound = new Audio(\"/dadouken.wav\")\n        specialSound.play()\n    }\n\n    const playSpecialFail = function () {\n        let specialFailSound = new Audio(\"/fail.wav\")\n        specialFailSound.play()\n    }\n\n    const playMiss = function () {\n        let missSound = new Audio(\"/miss.wav\")\n        missSound.play()\n    }\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const getMissChance = function () {\n        let hit = true\n        let miss = false\n        const missChance = [hit, hit, hit, hit, miss]\n        const randomNumber = Math.floor(Math.random() * 5)\n        const missOutcome = missChance[randomNumber]\n        return missOutcome;\n    }\n\n    const getMissChanceHeavy = function () {\n        let hit = true\n        let miss = false\n        const missChance = [hit, hit, hit, miss]\n        const randomNumber = Math.floor(Math.random() * 4)\n        const missOutcome = missChance[randomNumber]\n        return missOutcome;\n    }\n\n    const handleAttack1Click = function () {\n        if (getMissChance() === true) {\n            console.log(getMissChance());\n            let damage = 0;\n            if (playerDa.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (playerDa.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousComputerHealth(computerHealth)\n            setComputerHealth(computerHealth => computerHealth - damage)\n            console.log(\"player hit computer for : \" + damage);\n            playSound()\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n            setTimeout(function () {\n                computerTurn()\n            }, 2000)\n        } else {\n            playMiss()\n            setMissedGif(true)\n                setTimeout(function () {\n                    setMissedGif(false)\n                }, 1500)\n            setTimeout(function () {\n                computerTurn()\n            }, 2000)\n        }\n    }\n\n    const handleAttack2Click = function () {\n        if (getMissChanceHeavy() === true) {\n            let damage = getRandomNumber(10, 35);\n            setPreviousComputerHealth(computerHealth)\n            setComputerHealth(computerHealth => computerHealth - damage)\n            console.log(\"player hit computer for : \" + damage);\n            playSound()\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n            setTimeout(function () {\n                computerTurn()\n            }, 2000)\n        } else {\n            playMiss()\n            setMissedGif(true)\n                setTimeout(function () {\n                    setMissedGif(false)\n                }, 1500)\n            setTimeout(function () {\n                computerTurn()\n            }, 2000)\n        }\n    }\n\n\n    const handleHealClick = function () {\n        let heal = 0;\n        if (playerDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerHealth + heal) >= 100) {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerhealth => 100)\n        } else if (playerHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        } else {\n            const health = playerHealth + heal;\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        }\n\n        playHeal()\n        console.log(\"player healed for : \" + heal);\n        setHealGif(true)\n        setTimeout(function () {\n            setHealGif(false)\n        }, 2000)\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleSpecialClick = function () {\n        if (playerSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - opponentDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit computer for : \" + opponentDamage);\n                setLeftGif(true)\n                setTimeout(function () {\n                    setLeftGif(false)\n                }, 2500)\n                playSpecial();\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - selfDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit themselves for : \" + selfDamage);\n                playSpecialFail();\n                setStunGif(true)\n                setTimeout(function () {\n                    setStunGif(false)\n                }, 2500)\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const computerTurn = function () {\n        const Attack1 = function () {\n            if (getMissChance === true) {\n                let damage = 0;\n                if (computerDa.daType === \"BUFFDA\") {\n                    damage = getRandomNumber(18, 30)\n                } else if (computerDa.daType === \"AVERAGEDA\") {\n                    damage = getRandomNumber(23, 25)\n                } else {\n                    damage = getRandomNumber(18, 25)\n                }\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - damage)\n                console.log(\"computer hit player for : \" + damage);\n                // checkIfGameFinished();\n                setGif(true)\n                setTimeout(function () {\n                    setGif(false)\n                }, 1500)\n                playComputerSound()\n            }else{\n                playMiss()\n                setMissedGif(true)\n                setTimeout(function () {\n                    setMissedGif(false)\n                }, 1500)\n            }\n        }\n        const Attack2 = function () {\n            if (getMissChanceHeavy === true) {\n                let damage = getRandomNumber(10, 35);\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - damage);\n                console.log(\"computer hit player for : \" + damage);\n                // checkIfGameFinished();\n                setGif(true)\n                setTimeout(function () {\n                    setGif(false)\n                }, 1500)\n                playComputerSound()\n            }else{\n                playMiss()\n                setMissedGif(true)\n                setTimeout(function () {\n                    setMissedGif(false)\n                }, 1500)\n            }\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDa.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerHealth + heal) >= 100) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => 100);\n            } else if (computerHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            } else {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            }\n            console.log(\"computer healed for : \" + heal);\n            setHealGif(true)\n            setTimeout(function () {\n                setHealGif(false)\n            }, 1500)\n            playHeal();\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n                setComputerSpecialUsed(true);\n                computerDa.specialName = \"Special Used\"\n                console.log(\"computer hit player for : \" + opponentDamage);\n                playSpecial();\n                setRightGif(true)\n                setTimeout(function () {\n                    setRightGif(false)\n                }, 2500)\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - selfDamage);\n                setComputerSpecialUsed(true);\n                computerDa.specialName = \"Special Used\"\n                console.log(\"computer hit themselves for : \" + selfDamage);\n                playSpecialFail();\n                setStunGif(true)\n                setTimeout(function () {\n                    setStunGif(false)\n                }, 2500)\n            }\n        }\n        if (computerHealth >= 80) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 60) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 40) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth <= 39) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n    };\n\n    const showGifLeft = function () {\n        const daImg2 = \"left2.gif\"\n        const daImg3 = \"left3.gif\"\n        const randomDaImg = [daImg2, daImg3]\n        const randomNumber = Math.floor(Math.random() * 2);\n        const img = randomDaImg[randomNumber]\n        return <img src={`${process.env.PUBLIC_URL}/${img}`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n    const showGifRight = function () {\n        const daImg1 = \"right1.gif\"\n        const daImg2 = \"right2.gif\"\n        const daImg3 = \"right3.gif\"\n        const randomDaImg = [daImg1, daImg2, daImg3]\n        const randomNumber = Math.floor(Math.random() * 3);\n        const img = randomDaImg[randomNumber]\n        return <img src={`${process.env.PUBLIC_URL}/${img}`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n    const showFist = function () {\n        return <img src={`${process.env.PUBLIC_URL}/fist.gif`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n    const showHeal = function () {\n        return <img src={`${process.env.PUBLIC_URL}/street-fighter-zangief.gif`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n    const showStun = function () {\n        return <img src={`${process.env.PUBLIC_URL}/balrog-diz.gif`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n    const showCross = function () {\n        return <img src={`${process.env.PUBLIC_URL}/giphy.gif`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n\n\n    if (gameFinished === false) {\n        return (\n            <div className=\"fight_bg\" onLoad={playAudio} >\n                {das.length < 2 ?\n                    <div>\n                        <h1 className=\"health\">FINAL ROUND</h1>\n                    </div>\n                    :\n                    <div></div>}\n                <div>\n                    <img className=\"DaFightImg\" src={`${process.env.PUBLIC_URL}/${playerDa.imgName}`} width=\"200\" height=\"200\" />\n                    <ul className=\"DaDetails\">\n                        <li className=\"name\">{playerDa.name}</li>\n                        <li className=\"bio\">{playerDa.bio}</li>\n                        <li className=\"attack1\">{playerDa.attackOneName}<button onClick={handleAttack1Click}>ATTACK</button></li>\n                        <li className=\"attack2\">{playerDa.attackTwoName}<button onClick={handleAttack2Click}>ATTACK</button></li>\n                        <li className=\"heal\">{playerDa.healName}<button onClick={handleHealClick}>HEAL</button></li>\n                    </ul>\n                        <button onClick={handleSpecialClick} className=\"special\" ></button>\n                        <div className=\"playerCountUp\">\n                    {previousPlayerHealth > playerHealth ?\n\n                        <CountUp\n                            className=\"countUpRedP1\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreenP1\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        />}\n                        </div>\n                </div>\n                <div className=\"gif\">\n                {leftGif === true ? showGifLeft() : null}\n                {rightGif === true ? showGifRight() : null}\n                {healGif === true ? showHeal() : null}\n                {gif === true ? showFist() : null}\n                {stunGif === true ? showStun() : null}\n                {missedGif === true ? showCross() : null}\n                </div>\n                <div> \n                    <img className=\"CPUImage\" src={`${process.env.PUBLIC_URL}/${computerDa.imgName}`} alt=\"da-fighter\" />\n                    <ul className=\"DaDetails\">\n                        <li className=\"CPUName\">{computerDa.name}</li>\n                        <li className=\"CPUBio\">{computerDa.bio}</li>\n                        <li className=\"CPUAttack1\">{computerDa.attackOneName}  <button>ATTACK</button></li>\n                        <li className=\"CPUAttack2\">{computerDa.attackTwoName}  <button>ATTACK</button></li>\n                        <li className=\"CPUHeal\">{computerDa.healName}  <button>HEAL</button></li>\n                    </ul>\n                    <div className=\"computerCountUp\">\n\n                    {previousComputerHealth > computerHealth ?\n                        <CountUp\n                            className=\"countUpRedCPU\"\n                            start={previousComputerHealth}\n                            end={computerHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreenCPU\"\n                            start={previousComputerHealth}\n                            end={computerHealth}\n                            duration=\"1\"\n                        />}\n                        </div>\n                    </div>\n                </div>\n        )\n    } else {\n        if (computerHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerDa.name} smashed {computerDa.name}</h1>\n                        <h2>You Win !</h2>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDa.name} wrecked {playerDa.name}</h1>\n                        <h2>You Lose !</h2>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nexport default FightScreen;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/helpers/request.js",[],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/PlayerTwoDa.js",["155"],"import React from 'react';\n\nconst PlayerTwoDa = ({ da, onPlayerTwoDaClicked }) => {\n  \n\n  const handleClick = function(){\n    onPlayerTwoDaClicked(da)\n  }\n\n  return (\n    <>\n      <img src={`${process.env.PUBLIC_URL}/${da.imgName}`} className=\"flex-multiplayer-item\" onClick={handleClick}  width=\"280\" height=\"350\"/>\n    </>\n  )\n}\n\nexport default PlayerTwoDa;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/PlayerOneDa.js",["156"],"import React from 'react';\nimport '../App.css'\n\nconst PlayerOneDa = ({ da, onDaClicked }) => {\n  \n\n  const handleClick = function(){\n    onDaClicked(da)\n  }\n\n  return (\n    <>\n    <div >\n      <img className = \"flex-multiplayer-item\" src={`${process.env.PUBLIC_URL}/${da.imgName}`} onClick={handleClick}/>\n      </div>\n    </>\n   \n  )\n}\n\nexport default PlayerOneDa;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ScoreboardPoints.js",[],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Da.js",["157"],"import React from 'react';\nimport '../App.css'\n\nconst Da = ({ da, onDaClicked }) => {\n  \n\n  const handleClick = function(){\n    onDaClicked(da)\n  }\n\n  return (\n    <>\n    <div >\n      <img className = \"flex-item\" src={`${process.env.PUBLIC_URL}/${da.imgName}`} onClick={handleClick}/>\n      </div>\n    </>\n   \n  )\n}\n\nexport default Da;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ScoreboardDa.js",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":47,"column":4,"nodeType":"168","endLine":47,"endColumn":14,"suggestions":"169"},{"ruleId":"162","severity":1,"message":"170","line":150,"column":17,"nodeType":"164","messageId":"165","endLine":150,"endColumn":19},{"ruleId":"162","severity":1,"message":"171","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":24},{"ruleId":"172","severity":1,"message":"173","line":13,"column":13,"nodeType":"174","endLine":13,"endColumn":118},{"ruleId":"172","severity":1,"message":"173","line":16,"column":21,"nodeType":"174","endLine":16,"endColumn":115},{"ruleId":"172","severity":1,"message":"173","line":8,"column":33,"nodeType":"174","endLine":8,"endColumn":105},{"ruleId":"172","severity":1,"message":"173","line":9,"column":38,"nodeType":"174","endLine":9,"endColumn":110},{"ruleId":"172","severity":1,"message":"173","line":10,"column":37,"nodeType":"174","endLine":10,"endColumn":109},{"ruleId":"172","severity":1,"message":"173","line":11,"column":38,"nodeType":"174","endLine":11,"endColumn":109},{"ruleId":"172","severity":1,"message":"173","line":27,"column":23,"nodeType":"174","endLine":27,"endColumn":95},{"ruleId":"172","severity":1,"message":"173","line":39,"column":42,"nodeType":"174","endLine":39,"endColumn":119},{"ruleId":"172","severity":1,"message":"173","line":51,"column":12,"nodeType":"174","endLine":51,"endColumn":104},{"ruleId":"162","severity":1,"message":"175","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":10},{"ruleId":"172","severity":1,"message":"173","line":27,"column":27,"nodeType":"174","endLine":27,"endColumn":99},{"ruleId":"172","severity":1,"message":"173","line":40,"column":43,"nodeType":"174","endLine":40,"endColumn":120},{"ruleId":"162","severity":1,"message":"176","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":14},{"ruleId":"162","severity":1,"message":"177","line":5,"column":10,"nodeType":"164","messageId":"165","endLine":5,"endColumn":16},{"ruleId":"162","severity":1,"message":"178","line":15,"column":26,"nodeType":"164","messageId":"165","endLine":15,"endColumn":41},{"ruleId":"166","severity":1,"message":"179","line":24,"column":8,"nodeType":"168","endLine":24,"endColumn":50,"suggestions":"180"},{"ruleId":"172","severity":1,"message":"173","line":288,"column":16,"nodeType":"174","endLine":288,"endColumn":95},{"ruleId":"172","severity":1,"message":"173","line":297,"column":21,"nodeType":"174","endLine":297,"endColumn":110},{"ruleId":"172","severity":1,"message":"173","line":327,"column":21,"nodeType":"174","endLine":327,"endColumn":108},{"ruleId":"162","severity":1,"message":"176","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":14},{"ruleId":"162","severity":1,"message":"177","line":5,"column":10,"nodeType":"164","messageId":"165","endLine":5,"endColumn":16},{"ruleId":"162","severity":1,"message":"178","line":15,"column":26,"nodeType":"164","messageId":"165","endLine":15,"endColumn":41},{"ruleId":"162","severity":1,"message":"181","line":17,"column":21,"nodeType":"164","messageId":"165","endLine":17,"endColumn":31},{"ruleId":"162","severity":1,"message":"182","line":18,"column":22,"nodeType":"164","messageId":"165","endLine":18,"endColumn":33},{"ruleId":"162","severity":1,"message":"183","line":19,"column":21,"nodeType":"164","messageId":"165","endLine":19,"endColumn":31},{"ruleId":"162","severity":1,"message":"184","line":20,"column":21,"nodeType":"164","messageId":"165","endLine":20,"endColumn":31},{"ruleId":"166","severity":1,"message":"185","line":29,"column":8,"nodeType":"168","endLine":29,"endColumn":39,"suggestions":"186"},{"ruleId":"162","severity":1,"message":"187","line":159,"column":11,"nodeType":"164","messageId":"165","endLine":159,"endColumn":38},{"ruleId":"172","severity":1,"message":"173","line":221,"column":21,"nodeType":"174","endLine":221,"endColumn":106},{"ruleId":"172","severity":1,"message":"173","line":254,"column":21,"nodeType":"174","endLine":254,"endColumn":106},{"ruleId":"172","severity":1,"message":"173","line":23,"column":17,"nodeType":"174","endLine":23,"endColumn":89},{"ruleId":"172","severity":1,"message":"173","line":27,"column":22,"nodeType":"174","endLine":27,"endColumn":99},{"ruleId":"162","severity":1,"message":"188","line":9,"column":21,"nodeType":"164","messageId":"165","endLine":9,"endColumn":31},{"ruleId":"172","severity":1,"message":"173","line":96,"column":27,"nodeType":"174","endLine":96,"endColumn":92},{"ruleId":"162","severity":1,"message":"189","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":20},{"ruleId":"162","severity":1,"message":"178","line":15,"column":26,"nodeType":"164","messageId":"165","endLine":15,"endColumn":41},{"ruleId":"166","severity":1,"message":"190","line":30,"column":8,"nodeType":"168","endLine":30,"endColumn":38,"suggestions":"191"},{"ruleId":"162","severity":1,"message":"192","line":174,"column":19,"nodeType":"164","messageId":"165","endLine":174,"endColumn":25},{"ruleId":"172","severity":1,"message":"173","line":438,"column":21,"nodeType":"174","endLine":438,"endColumn":130},{"ruleId":"172","severity":1,"message":"173","line":12,"column":7,"nodeType":"174","endLine":12,"endColumn":143},{"ruleId":"172","severity":1,"message":"173","line":14,"column":7,"nodeType":"174","endLine":14,"endColumn":119},{"ruleId":"172","severity":1,"message":"173","line":14,"column":7,"nodeType":"174","endLine":14,"endColumn":107},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectComputerDa'. Either include it or remove the dependency array.","ArrayExpression",["195"],"'da' is assigned a value but never used.","'ReactAudioPlayer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Da' is defined but never used.","'Link' is defined but never used.","'getFID' is defined but never used.","'setGameFinished' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'computerDaOne', 'computerDaTwo', and 'onGameFinished'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["196"],"'setLeftGif' is assigned a value but never used.","'setRightGif' is assigned a value but never used.","'setHealGif' is assigned a value but never used.","'setStunGif' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onGameFinished', 'playerDa', and 'playerTwoDa'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["197"],"'handlePlayerTwoSpecialClick' is assigned a value but never used.","'setStateDa' is assigned a value but never used.","'FinishScreen' is defined but never used.","React Hook useEffect has missing dependencies: 'computerDa', 'onGameFinished', and 'playerDa'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["198"],"'health' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [playerDa, selectComputerDa]",{"range":"207","text":"208"},"Update the dependencies array to be: [computerDaTwoHealth, computerDaOneHealth, onGameFinished, computerDaOne, computerDaTwo]",{"range":"209","text":"210"},"Update the dependencies array to be: [playerTwoHealth, playerHealth, onGameFinished, playerDa, playerTwoDa]",{"range":"211","text":"212"},"Update the dependencies array to be: [computerDa, computerHealth, onGameFinished, playerDa, playerHealth]",{"range":"213","text":"214"},[1574,1584],"[playerDa, selectComputerDa]",[1132,1174],"[computerDaTwoHealth, computerDaOneHealth, onGameFinished, computerDaOne, computerDaTwo]",[1233,1264],"[playerTwoHealth, playerHealth, onGameFinished, playerDa, playerTwoDa]",[1224,1254],"[computerDa, computerHealth, onGameFinished, playerDa, playerHealth]"]