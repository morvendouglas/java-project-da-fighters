[{"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/index.js":"1","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/reportWebVitals.js":"2","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/App.js":"3","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/MainContainer.js":"4","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/DaContainer.js":"5","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Home.js":"6","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FinishScreen.js":"7","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/DaList.js":"8","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Multiplayer.js":"9","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ResultScreen.js":"10","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Simulation.js":"11","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/MultiplayerFightScreen.js":"12","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/SimulationFightScreen.js":"13","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js":"14","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/CreateADa.js":"15","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ModeScreen.js":"16","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/helpers/request.js":"17","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Scoreboard.js":"18","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Da.js":"19","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/PlayerTwoDa.js":"20","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ScoreboardPoints.js":"21","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ScoreboardDa.js":"22"},{"size":500,"mtime":1638882916921,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1638289664157,"results":"25","hashOfConfig":"24"},{"size":200,"mtime":1638289676360,"results":"26","hashOfConfig":"24"},{"size":1067,"mtime":1638886938926,"results":"27","hashOfConfig":"24"},{"size":5213,"mtime":1638956060087,"results":"28","hashOfConfig":"24"},{"size":617,"mtime":1638886938925,"results":"29","hashOfConfig":"24"},{"size":447,"mtime":1638809322042,"results":"30","hashOfConfig":"24"},{"size":774,"mtime":1638956051719,"results":"31","hashOfConfig":"24"},{"size":1134,"mtime":1638809682918,"results":"32","hashOfConfig":"24"},{"size":3251,"mtime":1638897152047,"results":"33","hashOfConfig":"24"},{"size":1141,"mtime":1638809682919,"results":"34","hashOfConfig":"24"},{"size":10740,"mtime":1638809682919,"results":"35","hashOfConfig":"24"},{"size":16703,"mtime":1638809682919,"results":"36","hashOfConfig":"24"},{"size":19189,"mtime":1638896087319,"results":"37","hashOfConfig":"24"},{"size":2672,"mtime":1638886880753,"results":"38","hashOfConfig":"24"},{"size":540,"mtime":1638886990156,"results":"39","hashOfConfig":"24"},{"size":593,"mtime":1638809322043,"results":"40","hashOfConfig":"24"},{"size":2982,"mtime":1638886880754,"results":"41","hashOfConfig":"24"},{"size":335,"mtime":1638809322042,"results":"42","hashOfConfig":"24"},{"size":388,"mtime":1638809682919,"results":"43","hashOfConfig":"24"},{"size":352,"mtime":1638886880754,"results":"44","hashOfConfig":"24"},{"size":195,"mtime":1638886880754,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"ye99wq",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/index.js",[],["102","103"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/reportWebVitals.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/App.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/MainContainer.js",["104"],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport DaContainer from './DaContainer';\nimport Home from '../components/Home';\n\n\nconst MainContainer = () => {\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" render ={() => {return <Home />}} />\n        <Route path=\"/select\" component={DaContainer} />\n        <Route path=\"/fight\" component={DaContainer} />\n        <Route path=\"/result\" component={DaContainer} />\n        <Route path=\"/finish\" component={DaContainer} />\n        <Route path=\"/mode\" component={DaContainer}  />\n        <Route path=\"/multiplayer\" component={DaContainer} />\n        <Route path=\"/multiplayerfight\" component={DaContainer} />\n        <Route path=\"/simulation\" component={DaContainer} />\n        <Route path=\"/simulationfight\" component={DaContainer} />\n        <Route path=\"/create-a-da\" component={DaContainer} />\n        <Route path=\"/scoreboard/:id\" component={DaContainer} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default MainContainer;","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/DaContainer.js",["105","106"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Home.js",["107","108","109"],"import React from \"react\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\nconst Home = () => {\n\n    const playAudio = function () {\n        let audio = new Audio(\"/main_page_screen.wav\")\n        audio.play();\n    }\n\n    return (\n        <div>\n            <img onClick={playAudio} className=\"main_logo\" height=\"600\" src={`${process.env.PUBLIC_URL}/logo.gif`} />\n            <div>\n                <a href=\"/mode\">\n                    <img className=\"press_start\" height=\"100\" src={`${process.env.PUBLIC_URL}/press_start.gif`} />\n                </a>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Home;","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FinishScreen.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/DaList.js",["110","111"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Multiplayer.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ResultScreen.js",["112"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport FinishScreen from './FinishScreen';\n\nconst ResultScreen = ({ winner, playerDa, onGameFinished, das, computerDa, onChooseNextRandomDa, onPlayerDaContinue, onNewDasList, onAllDasBeaten, messages }) => {\n\n    const findWinMessage = function () {\n        const copyMessages = [...messages]\n        // for(var i = 0; i < winMessages; i++) {\n        //     if(winMessages[i].messageType === \"LOSE\") {\n        //         winMessages.splice(i, 1)\n        //     }\n        // }\n        const winMessages = copyMessages.filter((message) => {\n            return message.messageType === \"WIN\"\n        })\n        const randomIndexWin = Math.floor(Math.random() * winMessages.length)\n        const randomWinMessage = winMessages[randomIndexWin]\n        return randomWinMessage.comment\n\n    }\n\n    const findLoseMessage = function () {\n        const loseMessages = [...messages]\n        for(var i = 0; i < loseMessages; i++) {\n            if(loseMessages[i].messageType === \"WIN\") {\n                loseMessages.splice(i, 1)\n            }\n        }\n        const randomIndexLose = Math.floor(Math.random() * loseMessages.length)\n        const randomLoseMessage = loseMessages[randomIndexLose]\n        return randomLoseMessage.comment\n    }\n\n    const handleOnClick = function () {\n        onGameFinished(null);\n    }\n\n    const handleOnNextDaClick = function () {\n        const copiedDas = [...das]\n        if (copiedDas.length < 2) {\n            onAllDasBeaten(playerDa)\n        } else {\n            for (var i = 0; i < copiedDas.length; i++) {\n                if (copiedDas[i] === computerDa) {\n                    copiedDas.splice(i, 1);\n                }\n                if (copiedDas[i] === playerDa) {\n                    copiedDas.splice(i, 1);\n                }\n            }\n            const randomIndex = Math.floor(Math.random() * copiedDas.length);\n            const randomDa = copiedDas[randomIndex];\n            onChooseNextRandomDa(randomDa)\n            onGameFinished(null)\n            onPlayerDaContinue(playerDa)\n            onNewDasList(copiedDas)\n        }\n    }\n\n    return (\n        <div className=\"health\">\n            <h1>{winner.name} Won !</h1>\n            {winner.name === playerDa.name ?\n                <div>\n                    <h2> You battered them !</h2>\n                    <h2> {findWinMessage()}</h2>\n                    {das.length < 2 ?\n                        <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        :\n                        <Link to=\"/fight\">\n                            <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        </Link>\n                    }\n                </div>\n                :\n                <div>\n                    <h2> You got smashed ...</h2>\n                    <h2> {findLoseMessage()}</h2>\n                    <Link to=\"/select\"><button type=\"button\" onClick={handleOnClick}>Play again ...</button></Link>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ResultScreen\n\n// if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Simulation.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/MultiplayerFightScreen.js",["113","114","115","116","117","118","119","120","121"],"import React, { useEffect, useState } from 'react'\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\nimport { getFID } from 'web-vitals';\n\nconst MultiplayerFightScreen = ({ playerDa, playerTwoDa, onGameFinished }) => {\n\n    const [playerTwoHealth, setPlayerTwoHealth] = useState(20);\n    const [previousPlayerTwoHealth, setPreviousPlayerTwoHealth] = useState(0);\n    const [playerHealth, setPlayerHealth] = useState(100);\n    const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n    const [playerTwoSpecialUsed, setPlayerTwoSpecialUsed] = useState(false);\n    const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [gif, setGif] = useState(false)\n\n    useEffect(() => {\n        if (playerTwoHealth <= 0 & playerHealth > 0) {\n            onGameFinished(playerDa);\n        } else if (playerHealth <= 0 & playerTwoHealth > 0) {\n            onGameFinished(playerTwoDa);\n        }\n    }, [playerTwoHealth, playerHealth])\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const handleAttack1Click = function () {\n        let damage = 0;\n        if (playerDa.daType === \"BUFFDA\") {\n            damage = getRandomNumber(18, 30)\n        } else if (playerDa.daType === \"AVERAGEDA\") {\n            damage = getRandomNumber(23, 25)\n        } else {\n            damage = getRandomNumber(18, 25)\n        }\n        setPreviousPlayerTwoHealth(playerTwoHealth)\n        setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - damage)\n        console.log(\"player one hit player two for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handleAttack2Click = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousPlayerTwoHealth(playerTwoHealth)\n        setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - damage)\n        console.log(\"player one hit player two for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handleHealClick = function () {\n        let heal = 0;\n        if (playerDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerHealth + heal) >= 100) {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerhealth => 100)\n        } else if (playerHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        } else {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        }\n        console.log(\"player one healed for : \" + heal);\n    }\n\n    const handleSpecialClick = function () {\n        if (playerSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerTwoHealth(playerTwoHealth)\n                setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - opponentDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player one hit player two for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - selfDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit themselves for : \" + selfDamage);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const handlePlayerTwoAttack1Click = function () {\n        let damage = 0;\n        if (playerTwoDa.daType === \"BUFFDA\") {\n            damage = getRandomNumber(18, 30)\n        } else if (playerTwoDa.daType === \"AVERAGEDA\") {\n            damage = getRandomNumber(23, 25)\n        } else {\n            damage = getRandomNumber(18, 25)\n        }\n        setPreviousPlayerHealth(playerHealth)\n        setPlayerHealth(playerHealth => playerHealth - damage)\n        console.log(\"player two hit player one for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handlePlayerTwoAttack2Click = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousPlayerHealth(playerHealth)\n        setPlayerHealth(playerHealth => playerHealth - damage)\n        console.log(\"player two hit player one for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handlePlayerTwoHealClick = function () {\n        let heal = 0;\n        if (playerTwoDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerTwoHealth + heal) >= 100) {\n            setPreviousPlayerTwoHealth(playerTwoHealth)\n            setPlayerTwoHealth(playerTwohealth => 100)\n        } else if (playerTwoHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerTwoHealth(playerTwoHealth)\n            setPlayerTwoHealth(playerTwoHealth => playerTwoHealth + heal)\n        } else {\n            setPreviousPlayerTwoHealth(playerTwoHealth)\n            setPlayerTwoHealth(playerTwoHealth => playerTwoHealth + heal)\n        }\n        console.log(\"player two healed for : \" + heal);\n    }\n\n    const handlePlayerTwoSpecialClick = function () {\n        if (playerTwoSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n                setPlayerTwoSpecialUsed(true);\n                playerTwoDa.specialName = \"Special Used\"\n                console.log(\"player two hit player one for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerTwoHealth(playerTwoHealth)\n                setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - selfDamage);\n                setPlayerTwoSpecialUsed(true);\n                playerTwoDa.specialName = \"Special Used\"\n                console.log(\"player two hit themselves for : \" + selfDamage);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const showFist = function () {\n        return <img src={`${process.env.PUBLIC_URL}/fist.gif`} height=\"200px\" width=\"200px\" />\n    }\n\n\n    if (gameFinished === false) {\n        return (\n            <>\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${playerDa.imgName}`} width=\"200\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{playerDa.name}</li>\n                        <li className=\"health\">{playerDa.bio}</li>\n                        <li className=\"health\">{playerDa.attackOneName}...  <button onClick={handleAttack1Click}>ATTACK</button></li>\n                        <li className=\"health\">{playerDa.attackTwoName}...  <button onClick={handleAttack2Click}>ATTACK</button></li>\n                        <li className=\"health\">{playerDa.healName}...  <button onClick={handleHealClick}>HEAL</button></li>\n                    </ul>\n                    {previousPlayerHealth > playerHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n                {gif === true ? showFist() : null}\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${playerTwoDa.imgName}`} width=\"220\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{playerTwoDa.name}</li>\n                        <li className=\"health\">{playerTwoDa.bio}</li>\n                        <li className=\"health\">{playerTwoDa.attackOneName}...  <button onClick={handlePlayerTwoAttack1Click}>ATTACK</button></li>\n                        <li className=\"health\">{playerTwoDa.attackTwoName}...  <button onClick={handlePlayerTwoAttack2Click}>ATTACK</button></li>\n                        <li className=\"health\">{playerTwoDa.healName}...  <button onClick={handlePlayerTwoHealClick}>HEAL</button></li>\n                    </ul>\n\n                    {previousPlayerTwoHealth > playerTwoHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousPlayerTwoHealth}\n                            end={playerTwoHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousPlayerTwoHealth}\n                            end={playerTwoHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n            </>\n        )\n    } else {\n        if (playerTwoHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerDa.name} smashed {playerTwoDa.name}</h1>\n                        <h2>Player One Wins !</h2>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerTwoDa.name} wrecked {playerDa.name}</h1>\n                        <h2>Player Two Wins !</h2>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nexport default MultiplayerFightScreen","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/SimulationFightScreen.js",["122","123","124","125","126","127","128"],"import React, { useEffect, useState } from 'react'\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\nimport { getFID } from 'web-vitals';\n\nconst SimulationFightScreen = ({ computerDaOne, computerDaTwo, onGameFinished }) => {\n\n    const [computerDaTwoHealth, setComputerDaTwoHealth] = useState(100);\n    const [previousComputerDaTwoHealth, setPreviousComputerDaTwoHealth] = useState(0);\n    const [computerDaOneHealth, setComputerDaOneHealth] = useState(100);\n    const [previousComputerDaOneHealth, setPreviousComputerDaOneHealth] = useState(0);\n    const [computerDaTwoSpecialUsed, setComputerDaTwoSpecialUsed] = useState(false);\n    const [computerDaOneSpecialUsed, setComputerDaOneSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [gif, setGif] = useState(false)\n\n    useEffect(() => {\n        if (computerDaTwoHealth <= 0 & computerDaOneHealth > 0) {\n            onGameFinished(computerDaOne);\n        } else if (computerDaOneHealth <= 0 & computerDaTwoHealth > 0) {\n            onGameFinished(computerDaTwo);\n        }\n    }, [computerDaTwoHealth, computerDaOneHealth])\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const computerDaOneTurn = function () {\n        const Attack1 = function () {\n            let damage = 0;\n            if (computerDaOne.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (computerDaOne.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n            setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - damage)\n            console.log(\"computer one hit computer two for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Attack2 = function () {\n            let damage = getRandomNumber(10, 35);\n            setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n            setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - damage);\n            console.log(\"computer one hit computer two for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDaOne.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerDaOneHealth + heal) >= 100) {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => 100);\n            } else if (computerDaOneHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth + heal)\n            } else {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth + heal)\n            }\n            console.log(\"computer one healed for : \" + heal);\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - opponentDamage);\n                setComputerDaOneSpecialUsed(true);\n                computerDaOne.specialName = \"Special Used\"\n                console.log(\"computer one hit computer two for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - selfDamage);\n                setComputerDaOneSpecialUsed(true);\n                computerDaOne.specialName = \"Special Used\"\n                console.log(\"computer one hit themselves for : \" + selfDamage);\n            }\n        }\n        if (computerDaOneHealth >= 80) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaOneHealth >= 60) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaOneHealth >= 40) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaOneHealth <= 39) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n        computerDaTwoTurn();\n    };\n\n    const computerDaTwoTurn = function () {\n        const Attack1 = function () {\n            let damage = 0;\n            if (computerDaTwo.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (computerDaTwo.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousComputerDaOneHealth(computerDaOneHealth)\n            setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - damage)\n            console.log(\"computer two hit computer one for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Attack2 = function () {\n            let damage = getRandomNumber(10, 35);\n            setPreviousComputerDaOneHealth(computerDaOneHealth)\n            setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - damage);\n            console.log(\"computer two hit computer one for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDaTwo.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerDaTwoHealth + heal) >= 100) {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => 100);\n            } else if (computerDaTwoHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth + heal)\n            } else {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth + heal)\n            }\n            console.log(\"computer two healed for : \" + heal);\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - opponentDamage);\n                setComputerDaTwoSpecialUsed(true);\n                computerDaTwo.specialName = \"Special Used\"\n                console.log(\"computer two hit computer one for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - selfDamage);\n                setComputerDaTwoSpecialUsed(true);\n                computerDaTwo.specialName = \"Special Used\"\n                console.log(\"computer two hit themselves for : \" + selfDamage);\n            }\n        }\n        if (computerDaTwoHealth >= 80) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaTwoHealth >= 60) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaTwoHealth >= 40) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaTwoHealth <= 39) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n    };\n\n    const showFist = function () {\n        return <img src={`${process.env.PUBLIC_URL}/fist.gif`} height=\"200px\" width=\"200px\" />\n    }\n\n\n    if (gameFinished === false) {\n        return (\n            <>\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${computerDaOne.imgName}`} width=\"200\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{computerDaOne.name}</li>\n                        <li className=\"health\">{computerDaOne.bio}</li>\n                        <li className=\"health\">{computerDaOne.attackOneName}...</li>\n                        <li className=\"health\">{computerDaOne.attackTwoName}...</li>\n                        <li className=\"health\">{computerDaOne.healName}...</li>\n                    </ul>\n                    {previousComputerDaOneHealth > computerDaOneHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousComputerDaOneHealth}\n                            end={computerDaOneHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousComputerDaOneHealth}\n                            end={computerDaOneHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n                {gif === true ? showFist() : null}\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${computerDaTwo.imgName}`} width=\"220\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{computerDaTwo.name}</li>\n                        <li className=\"health\">{computerDaTwo.bio}</li>\n                        <li className=\"health\">{computerDaTwo.attackOneName}...</li>\n                        <li className=\"health\">{computerDaTwo.attackTwoName}...</li>\n                        <li className=\"health\">{computerDaTwo.healName}...</li>\n                    </ul>\n                    {previousComputerDaTwoHealth > computerDaTwoHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousComputerDaTwoHealth}\n                            end={computerDaTwoHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousComputerDaTwoHealth}\n                            end={computerDaTwoHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n                <div>\n                    <button onClick={computerDaOneTurn}>FIGHT</button>\n                </div>\n            </>\n        )\n    } else {\n        if (computerDaTwoHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDaTwo.name} smashed {computerDaTwo.name}</h1>\n                        <h2>Computer One Wins !</h2>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDaTwo.name} wrecked {computerDaOne.name}</h1>\n                        <h2>Computer Two Wins !</h2>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nexport default SimulationFightScreen","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js",["129","130","131","132","133"],"import React, { useEffect, useState } from 'react';\nimport CountUp from 'react-countup';\nimport '../App.css'\n\n\nconst FightScreen = ({ playerDa, computerDa, onGameFinished, das }) => {\n\n    const [computerHealth, setComputerHealth] = useState(100);\n    const [previousComputerHealth, setPreviousComputerHealth] = useState(0);\n    const [playerHealth, setPlayerHealth] = useState(20);\n    const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n    const [computerSpecialUsed, setComputerSpecialUsed] = useState(false);\n    const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [gif, setGif] = useState(false)\n    const [leftGif, setLeftGif] = useState(false)\n    const [rightGif, setRightGif] = useState(false)\n    const [healGif, setHealGif] = useState(false)\n    const [stunGif, setStunGif] = useState(false)\n\n    useEffect(() => {\n        if (computerHealth <= 0 & playerHealth > 0) {\n            onGameFinished(playerDa);\n        } else if (playerHealth <= 0 & computerHealth > 0) {\n            onGameFinished(computerDa);\n        }\n    }, [computerHealth, playerHealth])\n\n    const playAudio = function () {\n        let music = new Audio(\"/game_music.wav\")\n        music.play()\n    }\n\n    const playSound = function () {\n        let audio1 = new Audio(\"/sound1.wav\")\n        let audio2 = new Audio(\"/sound2.wav\")\n        const randomAudio = [audio1, audio2]\n        const randomNumber = Math.floor(Math.random() * 2);\n        const chosenSound = randomAudio[randomNumber]\n        chosenSound.play()\n    };\n\n    const playComputerSound = function () {\n        let audio3 = new Audio(\"/sound3.wav\")\n        let audio4 = new Audio(\"/sound4.wav\")\n        const randomAudio = [audio3, audio4]\n        const randomNumber = Math.floor(Math.random() * 2);\n        const chosenSound = randomAudio[randomNumber]\n        chosenSound.play()\n    };\n\n    const playHeal = function () {\n        let healAudio = new Audio(\"/nectar.wav\")\n        healAudio.play()\n    }\n\n    const playSpecial = function () {\n        let specialSound = new Audio(\"/dadouken.wav\")\n        specialSound.play()\n    }\n\n    const playSpecialFail = function () {\n        let specialFailSound = new Audio(\"/fail.wav\")\n        specialFailSound.play()\n    }\n\n    const playMiss = function () {\n        let missSound = new Audio(\"/miss.wav\")\n        missSound.play()\n    }\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const getMissChance = function () {\n        let hit = true\n        let miss = false\n        const missChance = [hit, hit, hit, hit, miss]\n        const randomNumber = Math.floor(Math.random() * 5)\n        const missOutcome = missChance[randomNumber]\n        return missOutcome;\n    }\n\n    const getMissChanceHeavy = function () {\n        let hit = true\n        let miss = false\n        const missChance = [hit, hit, hit, miss]\n        const randomNumber = Math.floor(Math.random() * 4)\n        const missOutcome = missChance[randomNumber]\n        return missOutcome;\n    }\n\n    const handleAttack1Click = function () {\n        if (getMissChance() === true) {\n            console.log(getMissChance());\n            let damage = 0;\n            if (playerDa.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (playerDa.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousComputerHealth(computerHealth)\n            setComputerHealth(computerHealth => computerHealth - damage)\n            console.log(\"player hit computer for : \" + damage);\n            playSound()\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n            setTimeout(function () {\n                computerTurn()\n            }, 2000)\n        } else {\n            playMiss()\n            setTimeout(function () {\n                computerTurn()\n            }, 2000)\n        }\n    }\n\n    const handleAttack2Click = function () {\n        if (getMissChanceHeavy() === true) {\n            let damage = getRandomNumber(10, 35);\n            setPreviousComputerHealth(computerHealth)\n            setComputerHealth(computerHealth => computerHealth - damage)\n            console.log(\"player hit computer for : \" + damage);\n            playSound()\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n            setTimeout(function () {\n                computerTurn()\n            }, 2000)\n        } else {\n            playMiss()\n            setTimeout(function () {\n                computerTurn()\n            }, 2000)\n        }\n    }\n\n\n    const handleHealClick = function () {\n        let heal = 0;\n        if (playerDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerHealth + heal) >= 100) {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerhealth => 100)\n        } else if (playerHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        } else {\n            const health = playerHealth + heal;\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        }\n        playHeal()\n        console.log(\"player healed for : \" + heal);\n        setHealGif(true)\n        setTimeout(function () {\n            setHealGif(false)\n        }, 2000)\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleSpecialClick = function () {\n        if (playerSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - opponentDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit computer for : \" + opponentDamage);\n                setLeftGif(true)\n                setTimeout(function () {\n                    setLeftGif(false)\n                }, 2500)\n                playSpecial();\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - selfDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit themselves for : \" + selfDamage);\n                playSpecialFail();\n                setStunGif(true)\n                setTimeout(function () {\n                    setStunGif(false)\n                }, 2500)\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const computerTurn = function () {\n        const Attack1 = function () {\n            if (getMissChance === true) {\n                let damage = 0;\n                if (computerDa.daType === \"BUFFDA\") {\n                    damage = getRandomNumber(18, 30)\n                } else if (computerDa.daType === \"AVERAGEDA\") {\n                    damage = getRandomNumber(23, 25)\n                } else {\n                    damage = getRandomNumber(18, 25)\n                }\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - damage)\n                console.log(\"computer hit player for : \" + damage);\n                // checkIfGameFinished();\n                setGif(true)\n                setTimeout(function () {\n                    setGif(false)\n                }, 1500)\n                playComputerSound()\n            }else{\n                playMiss()\n            }\n        }\n        const Attack2 = function () {\n            if (getMissChanceHeavy === true) {\n                let damage = getRandomNumber(10, 35);\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - damage);\n                console.log(\"computer hit player for : \" + damage);\n                // checkIfGameFinished();\n                setGif(true)\n                setTimeout(function () {\n                    setGif(false)\n                }, 1500)\n                playComputerSound()\n            }else{\n                playMiss()\n            }\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDa.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerHealth + heal) >= 100) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => 100);\n            } else if (computerHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            } else {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            }\n            console.log(\"computer healed for : \" + heal);\n            setHealGif(true)\n            setTimeout(function () {\n                setHealGif(false)\n            }, 1500)\n            playHeal();\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n                setComputerSpecialUsed(true);\n                computerDa.specialName = \"Special Used\"\n                console.log(\"computer hit player for : \" + opponentDamage);\n                playSpecial();\n                setRightGif(true)\n                setTimeout(function () {\n                    setRightGif(false)\n                }, 2500)\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - selfDamage);\n                setComputerSpecialUsed(true);\n                computerDa.specialName = \"Special Used\"\n                console.log(\"computer hit themselves for : \" + selfDamage);\n                playSpecialFail();\n                setStunGif(true)\n                setTimeout(function () {\n                    setStunGif(false)\n                }, 2500)\n            }\n        }\n        if (computerHealth >= 80) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 60) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 40) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth <= 39) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n    };\n\n    const showGifLeft = function () {\n        const daImg2 = \"left2.gif\"\n        const daImg3 = \"left3.gif\"\n        const randomDaImg = [daImg2, daImg3]\n        const randomNumber = Math.floor(Math.random() * 2);\n        const img = randomDaImg[randomNumber]\n        return <img src={`${process.env.PUBLIC_URL}/${img}`} alt=\"fist\" height=\"200px\" width=\"200px\" />\n    }\n\n    const showGifRight = function () {\n        const daImg1 = \"right1.gif\"\n        const daImg2 = \"right2.gif\"\n        const daImg3 = \"right3.gif\"\n        const randomDaImg = [daImg1, daImg2, daImg3]\n        const randomNumber = Math.floor(Math.random() * 3);\n        const img = randomDaImg[randomNumber]\n        return <img src={`${process.env.PUBLIC_URL}/${img}`} alt=\"fist\" height=\"200px\" width=\"200px\" />\n    }\n\n    const showFist = function () {\n        return <img src={`${process.env.PUBLIC_URL}/fist.gif`} alt=\"fist\" height=\"100px\" width=\"100px\" />\n    }\n\n    const showHeal = function () {\n        return <img src={`${process.env.PUBLIC_URL}/street-fighter-zangief.gif`} alt=\"fist\" height=\"100px\" width=\"100px\" />\n    }\n\n    const showStun = function () {\n        return <img src={`${process.env.PUBLIC_URL}/balrog-diz.gif`} alt=\"fist\" height=\"100px\" width=\"100px\" />\n    }\n\n\n\n    if (gameFinished === false) {\n        return (\n            <div className=\"fight_bg\" onLoad={playAudio} >\n                {das.length < 2 ?\n                    <div>\n                        <h1 className=\"health\">FINAL ROUND</h1>\n                    </div>\n                    :\n                    <div></div>}\n                <div>\n                    <img className=\"DaFightImg\" src={`${process.env.PUBLIC_URL}/${playerDa.imgName}`} width=\"200\" height=\"200\" />\n                    <ul className=\"DaDetails\">\n                        <li className=\"name\">{playerDa.name}</li>\n                        <li className=\"bio\">{playerDa.bio}</li>\n                        <li className=\"attack1\">{playerDa.attackOneName}<button onClick={handleAttack1Click}>ATTACK</button></li>\n                        <li className=\"attack2\">{playerDa.attackTwoName}<button onClick={handleAttack2Click}>ATTACK</button></li>\n                        <li className=\"heal\">{playerDa.healName}<button onClick={handleHealClick}>HEAL</button></li>\n                    </ul>\n                    {previousPlayerHealth > playerHealth ?\n                        <CountUp\n                            className=\"countUpRedP1\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreenP1\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n                {leftGif === true ? showGifLeft() : null}\n                {rightGif === true ? showGifRight() : null}\n                {healGif === true ? showHeal() : null}\n                {gif === true ? showFist() : null}\n                {stunGif === true ? showStun() : null}\n\n                <div>\n                    <img className=\"CPUImage\" src={`${process.env.PUBLIC_URL}/${computerDa.imgName}`} alt=\"da-fighter\" />\n                    <ul className=\"DaDetails\">\n                        <li className=\"CPUName\">{computerDa.name}</li>\n                        <li className=\"CPUBio\">{computerDa.bio}</li>\n                        <li className=\"CPUAttack1\">{computerDa.attackOneName}  <button>ATTACK</button></li>\n                        <li className=\"CPUAttack2\">{computerDa.attackTwoName}  <button>ATTACK</button></li>\n                        <li className=\"CPUHeal\">{computerDa.healName}  <button>HEAL</button></li>\n                    </ul>\n\n                    {previousComputerHealth > computerHealth ?\n                        <CountUp\n                            className=\"countUpRedCPU\"\n                            start={previousComputerHealth}\n                            end={computerHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreenCPU\"\n                            start={previousComputerHealth}\n                            end={computerHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n            </div>\n        )\n    } else {\n        if (computerHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerDa.name} smashed {computerDa.name}</h1>\n                        <h2>You Win !</h2>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDa.name} wrecked {playerDa.name}</h1>\n                        <h2>You Lose !</h2>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nexport default FightScreen;","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/CreateADa.js",["134"],"import React, { useState } from 'react';\nimport '../CreateADa.css'\n\nconst CreateADa = ({ handlePost }) => {\n\n    // cant get daType in a select to  work with daForm\n\n    const [stateDa, setStateDa] = useState(\n        {\n            \"name\": \"\",\n            \"bio\": \"\",\n            \"daType\": \"BUFFDA\",\n            \"attackOneName\": \"\",\n            \"attackTwoName\": \"\",\n            \"healName\": \"\",\n            \"imgName\": \"11.png\",\n            \"startingHealth\": 100,\n            \"currentHealth\": 100,\n            \"points\": 0\n        }\n    )\n\n    // const handleClick = function (event) {\n    //     let propertyName = event.target.name;\n    //     let copiedDa = { ...stateDa }\n    //     const daImg1 = \"12.png\"\n    //     const daImg2 = \"13.png\"\n    //     const daImg3 = \"14.png\"\n    //     const randomDaImg = [daImg1, daImg2, daImg3]\n    //     const randomNumber = Math.floor(Math.random() * 3);\n    //     copiedDa[propertyName] = randomDaImg[randomNumber]\n    //     setStateDa(copiedDa)\n    // }\n\n\n    const handleChange = function (event) {\n        let propertyName = event.target.name;\n        let copiedDa = { ...stateDa }\n        copiedDa[propertyName] = event.target.value;\n        setStateDa(copiedDa)\n    }\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        handlePost(stateDa); \n    }\n\n    return (\n        <>\n        <div className=\"first\">\n           <img className=\"img\" src={`${process.env.PUBLIC_URL}/DA.png`} height=\"400px\" width=\"700px\"/>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"⚡ Da Name\" name=\"name\" className=\"input\" onChange={handleChange} value={stateDa.name} />\n                <input type=\"text\" placeholder=\"⚡ Bio\" name=\"bio\" className=\"input\" onChange={handleChange} value={stateDa.bio} />\n                <input type=\"text\" placeholder=\"⚡ First Attack Name\" className=\"input\" name=\"attackOneName\" onChange={handleChange} value={stateDa.attackOneName} />\n                <input type=\"text\" placeholder=\"⚡ Second Attack Name\" className=\"input\" name=\"attackTwoName\" onChange={handleChange} value={stateDa.attackTwoName} />\n                <input type=\"text\" placeholder=\"⚡ Heal Name\" name=\"healName\" className=\"input\" onChange={handleChange} value={stateDa.healName} />\n                {/* <label for=\"imgName\" className=\"label\">Click for da photo ->></label> */}\n                {/* <input type=\"radio\" className=\"radio\" name=\"imgName\"  value={stateDa.imgName} onClick={handleClick}></input> */}\n                <button type=\"submit\" className=\"submit\">Save</button>\n            </form>\n        </div>\n        </>\n\n    )\n}\n\n\nexport default CreateADa;\n","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ModeScreen.js",["135","136","137"],"import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nconst ModeScreen = () => {\n\n    return (\n        <div>\n            <Link to=\"/select\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/pvc.png`}></img> </Link>\n            <Link to=\"/multiplayer\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/pvp.png`}></img> </Link>\n            <Link to=\"/simulation\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/cvc.png`}></img> </Link>\n\n        </div>\n    )\n}\n\nexport default ModeScreen","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/helpers/request.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Scoreboard.js",["138","139"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ScoreboardDa from './ScoreboardDa';\nimport ScoreboardPoints from './ScoreboardPoints';\nimport '../Scoreboard.css'\n\nconst Scoreboard = ({ das, handleUpdate }) => {\n\n    const [stateDa, setStateDa] = useState(\n        {\n            \"id\": \"\",\n            \"name\": \"\",\n            \"bio\": \"\",\n            \"daType\": \"\",\n            \"attackOneName\": \"\",\n            \"attackTwoName\": \"\",\n            \"healName\": \"\",\n            \"imgName\": \"\",\n            \"startingHealth\": 100,\n            \"currentHealth\": 100,\n            \"points\": 0\n        }\n    )\n\n    const [disable, setDisable] = useState(false);\n\n    const findDaById = function () {\n        let url = window.location.pathname\n        let id = url.substring(url.lastIndexOf('/') + 1);\n        return das.find((da) => {\n            return da.id === parseInt(id);\n        })\n    }\n\n    let daWinner = findDaById()\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        let copiedDa = { ...stateDa }\n        copiedDa['id'] = daWinner.id\n        copiedDa[\"name\"] = daWinner.name\n        copiedDa[\"bio\"] = daWinner.bio\n        copiedDa[\"daType\"] = daWinner.daType\n        copiedDa[\"attackOneName\"] = daWinner.attackOneName\n        copiedDa[\"attackTwoName\"] = daWinner.attackTwoName\n        copiedDa[\"healName\"] = daWinner.healName\n        copiedDa[\"imgName\"] = daWinner.imgName\n        copiedDa[\"points\"] = daWinner.points += 100\n        handleUpdate(copiedDa)\n        setDisable(true)\n    }\n\n    // das.sort(function (a, b) {\n    //     return b.points - a.points;\n    // })\n\n    const dasNodes = das.map((da, index) => {\n        return (\n            <ScoreboardDa da={da} key={index} />\n        )\n    })\n\n    const daPoints = das.map((da, index) => {\n        return (\n            <ScoreboardPoints da={da} key={index} />\n        )\n    })\n\n    return (\n        <div >\n            <table className=\"scoreboard\">\n                <thead >\n                    <tr>\n                    <th colspan={das.length} className=\"header\">\n                        <form onSubmit={handleSubmit}>\n                            <button type=\"submit\" disabled={disable} className=\"buttonScoreboard\">Collect Points </button>\n                        </form>\n                    </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td><span className=\"daName\">Da League</span></td>\n                        <td><span className=\"daPoints\">Points</span></td>\n                    </tr>\n                    <tr>\n                        <td>{dasNodes}</td>\n                        <td>{daPoints}</td>\n    \n                    </tr>\n                \n                </tbody>\n        \n            </table>\n        \n            <Link to=\"/\"> <img className=\"home\" src={`${process.env.PUBLIC_URL}/logo.png`}></img> </Link>\n        </div>\n    )\n}\n\nexport default Scoreboard;","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Da.js",["140"],"import React from 'react';\nimport '../App.css'\n\nconst Da = ({ da, onDaClicked }) => {\n  \n\n  const handleClick = function(){\n    onDaClicked(da)\n  }\n\n  return (\n    <>\n    <div >\n      <img className = \"flex-item\" src={`${process.env.PUBLIC_URL}/${da.imgName}`} onClick={handleClick}/>\n      </div>\n    </>\n   \n  )\n}\n\nexport default Da;","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/PlayerTwoDa.js",["141"],"import React from 'react';\n\nconst PlayerTwoDa = ({ da, onPlayerTwoDaClicked }) => {\n  \n\n  const handleClick = function(){\n    onPlayerTwoDaClicked(da)\n  }\n\n  return (\n    <>\n      {/* <button onClick={handleClick}>{da.name}</button> */}\n      <img src={`${process.env.PUBLIC_URL}/${da.imgName}`} onClick={handleClick}  width=\"280\" height=\"350\"/>\n    </>\n  )\n}\n\nexport default PlayerTwoDa;","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ScoreboardPoints.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ScoreboardDa.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":47,"column":4,"nodeType":"152","endLine":47,"endColumn":14,"suggestions":"153"},{"ruleId":"146","severity":1,"message":"154","line":150,"column":17,"nodeType":"148","messageId":"149","endLine":150,"endColumn":19},{"ruleId":"146","severity":1,"message":"155","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":24},{"ruleId":"156","severity":1,"message":"157","line":13,"column":13,"nodeType":"158","endLine":13,"endColumn":118},{"ruleId":"156","severity":1,"message":"157","line":16,"column":21,"nodeType":"158","endLine":16,"endColumn":115},{"ruleId":"156","severity":1,"message":"157","line":23,"column":18,"nodeType":"158","endLine":23,"endColumn":90},{"ruleId":"156","severity":1,"message":"157","line":27,"column":23,"nodeType":"158","endLine":27,"endColumn":100},{"ruleId":"146","severity":1,"message":"159","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":20},{"ruleId":"146","severity":1,"message":"160","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":14},{"ruleId":"146","severity":1,"message":"161","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":16},{"ruleId":"146","severity":1,"message":"162","line":15,"column":26,"nodeType":"148","messageId":"149","endLine":15,"endColumn":41},{"ruleId":"150","severity":1,"message":"163","line":24,"column":8,"nodeType":"152","endLine":24,"endColumn":39,"suggestions":"164"},{"ruleId":"146","severity":1,"message":"165","line":80,"column":11,"nodeType":"148","messageId":"149","endLine":80,"endColumn":29},{"ruleId":"146","severity":1,"message":"166","line":154,"column":11,"nodeType":"148","messageId":"149","endLine":154,"endColumn":38},{"ruleId":"156","severity":1,"message":"157","line":179,"column":16,"nodeType":"158","endLine":179,"endColumn":95},{"ruleId":"156","severity":1,"message":"157","line":187,"column":21,"nodeType":"158","endLine":187,"endColumn":107},{"ruleId":"156","severity":1,"message":"157","line":211,"column":21,"nodeType":"158","endLine":211,"endColumn":110},{"ruleId":"146","severity":1,"message":"160","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":14},{"ruleId":"146","severity":1,"message":"161","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":16},{"ruleId":"146","severity":1,"message":"162","line":15,"column":26,"nodeType":"148","messageId":"149","endLine":15,"endColumn":41},{"ruleId":"150","severity":1,"message":"167","line":24,"column":8,"nodeType":"152","endLine":24,"endColumn":50,"suggestions":"168"},{"ruleId":"156","severity":1,"message":"157","line":288,"column":16,"nodeType":"158","endLine":288,"endColumn":95},{"ruleId":"156","severity":1,"message":"157","line":296,"column":21,"nodeType":"158","endLine":296,"endColumn":112},{"ruleId":"156","severity":1,"message":"157","line":320,"column":21,"nodeType":"158","endLine":320,"endColumn":112},{"ruleId":"146","severity":1,"message":"162","line":14,"column":26,"nodeType":"148","messageId":"149","endLine":14,"endColumn":41},{"ruleId":"150","severity":1,"message":"169","line":27,"column":8,"nodeType":"152","endLine":27,"endColumn":38,"suggestions":"170"},{"ruleId":"146","severity":1,"message":"171","line":163,"column":19,"nodeType":"148","messageId":"149","endLine":163,"endColumn":25},{"ruleId":"146","severity":1,"message":"165","line":178,"column":11,"nodeType":"148","messageId":"149","endLine":178,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":414,"column":21,"nodeType":"158","endLine":414,"endColumn":130},{"ruleId":"156","severity":1,"message":"157","line":51,"column":12,"nodeType":"158","endLine":51,"endColumn":104},{"ruleId":"156","severity":1,"message":"157","line":8,"column":33,"nodeType":"158","endLine":8,"endColumn":105},{"ruleId":"156","severity":1,"message":"157","line":9,"column":38,"nodeType":"158","endLine":9,"endColumn":110},{"ruleId":"156","severity":1,"message":"157","line":10,"column":37,"nodeType":"158","endLine":10,"endColumn":109},{"ruleId":"146","severity":1,"message":"172","line":9,"column":21,"nodeType":"148","messageId":"149","endLine":9,"endColumn":31},{"ruleId":"156","severity":1,"message":"157","line":96,"column":27,"nodeType":"158","endLine":96,"endColumn":92},{"ruleId":"156","severity":1,"message":"157","line":14,"column":7,"nodeType":"158","endLine":14,"endColumn":107},{"ruleId":"156","severity":1,"message":"157","line":13,"column":7,"nodeType":"158","endLine":13,"endColumn":109},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectComputerDa'. Either include it or remove the dependency array.","ArrayExpression",["175"],"'da' is assigned a value but never used.","'ReactAudioPlayer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FinishScreen' is defined but never used.","'Link' is defined but never used.","'getFID' is defined but never used.","'setGameFinished' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onGameFinished', 'playerDa', and 'playerTwoDa'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["176"],"'handleSpecialClick' is assigned a value but never used.","'handlePlayerTwoSpecialClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'computerDaOne', 'computerDaTwo', and 'onGameFinished'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["177"],"React Hook useEffect has missing dependencies: 'computerDa', 'onGameFinished', and 'playerDa'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["178"],"'health' is assigned a value but never used.","'setStateDa' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [playerDa, selectComputerDa]",{"range":"187","text":"188"},"Update the dependencies array to be: [playerTwoHealth, playerHealth, onGameFinished, playerDa, playerTwoDa]",{"range":"189","text":"190"},"Update the dependencies array to be: [computerDaTwoHealth, computerDaOneHealth, onGameFinished, computerDaOne, computerDaTwo]",{"range":"191","text":"192"},"Update the dependencies array to be: [computerDa, computerHealth, onGameFinished, playerDa, playerHealth]",{"range":"193","text":"194"},[1574,1584],"[playerDa, selectComputerDa]",[1030,1061],"[playerTwoHealth, playerHealth, onGameFinished, playerDa, playerTwoDa]",[1132,1174],"[computerDaTwoHealth, computerDaOneHealth, onGameFinished, computerDaOne, computerDaTwo]",[1140,1170],"[computerDa, computerHealth, onGameFinished, playerDa, playerHealth]"]