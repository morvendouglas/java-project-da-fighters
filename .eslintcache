[{"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/index.js":"1","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/App.js":"2","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/reportWebVitals.js":"3","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/MainContainer.js":"4","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/DaContainer.js":"5","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Home.js":"6","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js":"7","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/DaList.js":"8","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/DaForm.js":"9","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/helpers/request.js":"10","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Da.js":"11","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ResultScreen.js":"12"},{"size":500,"mtime":1638289664157,"results":"13","hashOfConfig":"14"},{"size":200,"mtime":1638289676360,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1638289664157,"results":"16","hashOfConfig":"14"},{"size":629,"mtime":1638435307269,"results":"17","hashOfConfig":"14"},{"size":2794,"mtime":1638442295791,"results":"18","hashOfConfig":"14"},{"size":581,"mtime":1638289676361,"results":"19","hashOfConfig":"14"},{"size":11093,"mtime":1638441930659,"results":"20","hashOfConfig":"14"},{"size":432,"mtime":1638289676360,"results":"21","hashOfConfig":"14"},{"size":2150,"mtime":1638289676360,"results":"22","hashOfConfig":"14"},{"size":592,"mtime":1638289676361,"results":"23","hashOfConfig":"14"},{"size":235,"mtime":1638289676360,"results":"24","hashOfConfig":"14"},{"size":1704,"mtime":1638443977362,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ye99wq",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/index.js",[],["54","55"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/App.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/reportWebVitals.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/MainContainer.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/DaContainer.js",["56","57","58","59"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DaList from '../components/DaList';\nimport DaForm from '../components/DaForm';\nimport Request from '../helpers/request';\nimport FightScreen from '../components/FightScreen';\nimport Home from '../components/Home';\nimport ResultScreen from '../components/ResultScreen';\n\n\nconst DaContainer = () => {\n  const [das, setDas] = useState([]);\n  const [playerDa, setPlayerDa] = useState(null)\n  const [computerDa, setComputerDa] = useState(null)\n  const [winner, setWinner] = useState(null);\n\n  const requestAll = function () {\n    const request = new Request();\n    const dasPromise = request.get('/das')\n\n    Promise.all([dasPromise])\n      .then((data) => {\n        setDas(data[0]);\n      })\n  }\n\n  useEffect(() => {\n    requestAll()\n  }, [])\n\n  useEffect(() => {\n    selectComputerDa()\n  }, [playerDa])\n\n\n  const handlePost = function (da) {\n    const request = new Request();\n    request.post(\"/api/das\", da)\n      .then(() => window.location = '/das')\n  }\n\n  const onDaClicked = function (da) {\n    setPlayerDa(da);\n    <Route path=\"/result\" render={() => {\n      return <ResultScreen />\n    }} />\n  }\n\n  const onGameFinished = function (da) {\n    setWinner(da)\n  }\n\n  const onChooseNextRandomDa = function(da) {\n    setComputerDa(da)\n  }\n\n  const onPlayerDaContinue = function (da) {\n    setPlayerDa(da)\n  }\n\n  const onNewDasList = function (das) {\n    setDas(das)\n  }\n\n  const selectComputerDa = function () {\n    const copiedDas = [...das]\n    for (var i = 0; i < copiedDas.length; i++) {\n      if (copiedDas[i] === playerDa) {\n        copiedDas.splice(i, 1);\n      }\n    }\n    const randomIndex = Math.floor(Math.random() * copiedDas.length);\n    const randomDa = copiedDas[randomIndex];\n    setComputerDa(randomDa)\n  }\n\n  return (\n\n    <>\n      {!winner ? <div>\n        <Switch>\n\n          {/* <Route exact path=\"/das/new\" render={() => {\n          return <DaForm handlePost={handlePost} />\n        }} /> */}\n          <Route path=\"/select\" render={() => {\n            return <DaList das={das} onDaClicked={onDaClicked} />\n          }} />\n          <Route path=\"/fight\" render={() => {\n            return <FightScreen playerDa={playerDa} computerDa={computerDa} onGameFinished={onGameFinished} />\n          }} />\n          {/* <Route path=\"/result\" render={() => {\n          return <ResultScreen playerDa={playerDa} computerDa={computerDa} />\n        }} /> */}\n        </Switch>\n      </div> :\n        <ResultScreen winner={winner} playerDa={playerDa} onGameFinished={onGameFinished}  das={das} computerDa={computerDa} onChooseNextRandomDa={onChooseNextRandomDa} onPlayerDaContinue={onPlayerDaContinue} onNewDasList={onNewDasList} />}\n    </>\n\n\n\n  )\n\n\n}\n\nexport default DaContainer;","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Home.js",["60","61"],"import React from \"react\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\n\n    const audio = new Audio('public/home_page.mp3');\n    audio.play();\n\n\nconst Home = () => {\n    return(\t\t\n        <>\n    <img className=\"main_logo\" height=\"600\" src={`${process.env.PUBLIC_URL}/logo.gif`}  />\n      <div>\n        <a href=\"/select\">\n        <img className=\"press_start\" height=\"100\" src={`${process.env.PUBLIC_URL}/press_start.gif`}  />\n        </a>\n      </div>\n      <ReactAudioPlayer className=\"audio_player\" src= \"intro.mp3\" autoplay controls/>\n\n</>\n\n    )}\n\n\n\nexport default Home;","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js",["62","63","64","65"],"import React, { useEffect, useRef, useState } from 'react';\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\n\nconst FightScreen = ({ playerDa, computerDa, onGameFinished }) => {\n\n    const [computerHealth, setComputerHealth] = useState(20);\n    const [previousComputerHealth, setPreviousComputerHealth] = useState(0);\n    const [playerHealth, setPlayerHealth] = useState(100);\n    const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n    const [computerSpecialUsed, setComputerSpecialUsed] = useState(false);\n    const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n\n    useEffect(() => {\n        if (computerHealth <= 0 & playerHealth > 0) {\n            onGameFinished(playerDa);\n        } else if (playerHealth <= 0 & computerHealth > 0) {\n            onGameFinished(computerDa);\n        }\n    }, [computerHealth, playerHealth])\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const handleAttack1Click = function () {\n        let damage = 0;\n        if (playerDa.daType === \"BUFFDA\") {\n            damage = getRandomNumber(18, 30)\n        } else if (playerDa.daType === \"AVERAGEDA\") {\n            damage = getRandomNumber(23, 25)\n        } else {\n            damage = getRandomNumber(18, 25)\n        }\n        setPreviousComputerHealth(computerHealth)\n        setComputerHealth(computerHealth => computerHealth - damage)\n        console.log(\"player hit computer for : \" + damage);\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleAttack2Click = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousComputerHealth(computerHealth)\n        setComputerHealth(computerHealth => computerHealth - damage)\n        console.log(\"player hit computer for : \" + damage);\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleHealClick = function () {\n        let heal = 0;\n        if (playerDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerHealth + heal) >= 100) {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerhealth => 100)\n        } else if (playerHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        } else {\n            const health = playerHealth + heal;\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        }\n        console.log(\"player healed for : \" + heal);\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleSpecialClick = function () {\n        if (playerSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - opponentDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit computer for : \" + opponentDamage);\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - selfDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit themselves for : \" + selfDamage);\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const computerTurn = function () {\n        const Attack1 = function () {\n            let damage = 0;\n            if (computerDa.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (computerDa.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth - damage)\n            console.log(\"computer hit player for : \" + damage);\n        }\n        const Attack2 = function () {\n            let damage = getRandomNumber(10, 35);\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth - damage);\n            console.log(\"computer hit player for : \" + damage);\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDa.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerHealth + heal) >= 100) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => 100);\n            } else if (computerHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            } else {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            }\n            console.log(\"computer healed for : \" + heal);\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n                setComputerSpecialUsed(true);\n                computerDa.specialName = \"Special Used\"\n                console.log(\"computer hit player for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - selfDamage);\n                setComputerSpecialUsed(true);\n                computerDa.specialName = \"Special Used\"\n                console.log(\"computer hit themselves for : \" + selfDamage);\n            }\n        }\n        if (computerHealth >= 80) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 60) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 40) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth <= 39) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n    };\n\n    return (\n        <>\n            <div>\n                {playerDa.name}\n                {/* <img src={`${process.env.PUBLIC_URL}/${playerDa.specialName}`} /> */}\n                <ul>\n                    <li><button onClick={handleAttack1Click}>{playerDa.attackOneName}</button></li>\n                    <li><button onClick={handleAttack2Click}>{playerDa.attackTwoName}</button></li>\n                    <li><button onClick={handleHealClick}>{playerDa.healName}</button></li>\n                    <li><button onClick={handleSpecialClick}>{playerDa.specialName}</button></li>\n                    <li><CountUp\n                        className=\"health\"\n                        start={previousPlayerHealth}\n                        end={playerHealth}\n                        duration=\"1\"\n                    />\n                    </li>\n                </ul>\n            </div>\n            <div>\n                {computerDa.name}\n                <ul>\n                    <li><button>{computerDa.attackOneName}</button></li>\n                    <li><button>{computerDa.attackTwoName}</button></li>\n                    <li><button>{computerDa.healName}</button></li>\n                    <li><button>{computerDa.specialName}</button></li>\n                    <li><CountUp\n                        className=\"health\"\n                        start={previousComputerHealth}\n                        end={computerHealth}\n                        duration=\"1\"\n                    />\n                    </li>\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default FightScreen;","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/DaList.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/DaForm.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/helpers/request.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Da.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ResultScreen.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":14},{"ruleId":"70","severity":1,"message":"74","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":12},{"ruleId":"75","severity":1,"message":"76","line":33,"column":6,"nodeType":"77","endLine":33,"endColumn":16,"suggestions":"78"},{"ruleId":"70","severity":1,"message":"79","line":36,"column":9,"nodeType":"72","messageId":"73","endLine":36,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":12,"column":5,"nodeType":"82","endLine":12,"endColumn":91},{"ruleId":"80","severity":1,"message":"81","line":15,"column":9,"nodeType":"82","endLine":15,"endColumn":104},{"ruleId":"70","severity":1,"message":"83","line":1,"column":28,"nodeType":"72","messageId":"73","endLine":1,"endColumn":34},{"ruleId":"70","severity":1,"message":"84","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"85","line":21,"column":8,"nodeType":"77","endLine":21,"endColumn":38,"suggestions":"86"},{"ruleId":"70","severity":1,"message":"87","line":69,"column":19,"nodeType":"72","messageId":"73","endLine":69,"endColumn":25},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'DaForm' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectComputerDa'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'handlePost' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'computerDa', 'onGameFinished', and 'playerDa'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["91"],"'health' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [playerDa, selectComputerDa]",{"range":"96","text":"97"},"Update the dependencies array to be: [computerDa, computerHealth, onGameFinished, playerDa, playerHealth]",{"range":"98","text":"99"},[896,906],"[playerDa, selectComputerDa]",[878,908],"[computerDa, computerHealth, onGameFinished, playerDa, playerHealth]"]