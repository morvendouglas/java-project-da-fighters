[{"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/index.js":"1","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/reportWebVitals.js":"2","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/App.js":"3","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/containers/MainContainer.js":"4","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/containers/DaContainer.js":"5","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/Home.js":"6","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/DaForm.js":"7","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/DaList.js":"8","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/helpers/request.js":"9","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/ResultScreen.js":"10","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/FinishScreen.js":"11","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/FightScreen.js":"12","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/Da.js":"13"},{"size":500,"mtime":1638454929506,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1638454929506,"results":"16","hashOfConfig":"15"},{"size":200,"mtime":1638454985023,"results":"17","hashOfConfig":"15"},{"size":689,"mtime":1638733016220,"results":"18","hashOfConfig":"15"},{"size":3373,"mtime":1638786346572,"results":"19","hashOfConfig":"15"},{"size":581,"mtime":1638454985025,"results":"20","hashOfConfig":"15"},{"size":2150,"mtime":1638454985024,"results":"21","hashOfConfig":"15"},{"size":613,"mtime":1638788516032,"results":"22","hashOfConfig":"15"},{"size":592,"mtime":1638454985027,"results":"23","hashOfConfig":"15"},{"size":2120,"mtime":1638733016217,"results":"24","hashOfConfig":"15"},{"size":273,"mtime":1638733016214,"results":"25","hashOfConfig":"15"},{"size":15683,"mtime":1638791553207,"results":"26","hashOfConfig":"15"},{"size":378,"mtime":1638786706762,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"jihhiw",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/index.js",[],["60","61"],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/reportWebVitals.js",[],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/App.js",[],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/containers/MainContainer.js",[],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/containers/DaContainer.js",["62","63","64","65"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DaList from '../components/DaList';\nimport DaForm from '../components/DaForm';\nimport Request from '../helpers/request';\nimport FightScreen from '../components/FightScreen';\nimport Home from '../components/Home';\nimport ResultScreen from '../components/ResultScreen';\nimport FinishScreen from '../components/FinishScreen';\n\n\nconst DaContainer = () => {\n  const [das, setDas] = useState([]);\n  const [playerDa, setPlayerDa] = useState(null)\n  const [computerDa, setComputerDa] = useState(null)\n  const [winner, setWinner] = useState(null)\n  const [gameFinished, setGameFinished] = useState(null)\n\n  const requestAll = function () {\n    const request = new Request();\n    const dasPromise = request.get('/das')\n\n    Promise.all([dasPromise])\n      .then((data) => {\n        setDas(data[0]);\n      })\n  }\n\n  useEffect(() => {\n    requestAll()\n  }, [])\n\n  useEffect(() => {\n    selectComputerDa()\n  }, [playerDa])\n\n  const handlePost = function (da) {\n    const request = new Request();\n    request.post(\"/api/das\", da)\n      .then(() => window.location = '/das')\n  }\n\n  const onDaClicked = function (da) {\n    setPlayerDa(da);\n    <Route path=\"/result\" render={() => {\n      return <ResultScreen />\n    }} />\n  }\n\n  const onGameFinished = function (da) {\n    setWinner(da)\n  }\n\n  const onChooseNextRandomDa = function (da) {\n    setComputerDa(da)\n  }\n\n  const onPlayerDaContinue = function (da) {\n    setPlayerDa(da)\n  }\n\n  const onNewDasList = function (das) {\n    setDas(das)\n  }\n\n  const onAllDasBeaten = function (da) {\n    setGameFinished(da)\n  }\n\n  const selectComputerDa = function () {\n    const copiedDas = [...das]\n    for (var i = 0; i < copiedDas.length; i++) {\n      if (copiedDas[i] === playerDa) {\n        copiedDas.splice(i, 1);\n      }\n    }\n    const randomIndex = Math.floor(Math.random() * copiedDas.length);\n    const randomDa = copiedDas[randomIndex];\n    setComputerDa(randomDa)\n  }\n\n\n  if (winner === null) {\n    return (\n      <div>\n        <Switch>\n\n          {/* <Route exact path=\"/das/new\" render={() => {\n          return <DaForm handlePost={handlePost} />\n        }} /> */}\n        <Route path=\"/select\" render={() => {\n          return <DaList classname = \"DaList\" das={das} onDaClicked={onDaClicked} />\n        }} />\n        <Route path=\"/fight\" render={() => {\n          return <FightScreen playerDa={playerDa} computerDa={computerDa} das = {das}/>\n        }} />\n        {/* <Route path=\"/result\" render={() => {\n          <Route path=\"/select\" render={() => {\n            return <DaList das={das} onDaClicked={onDaClicked} />\n          }} />\n          <Route path=\"/fight\" render={() => {\n            return <FightScreen playerDa={playerDa} computerDa={computerDa} onGameFinished={onGameFinished} das={das} />\n          }} />*/}\n        </Switch>\n      </div>\n    )\n  } else if (gameFinished != null) {\n    return (\n      <div>\n        <FinishScreen />\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <ResultScreen winner={winner} playerDa={playerDa} onGameFinished={onGameFinished} das={das} computerDa={computerDa} onChooseNextRandomDa={onChooseNextRandomDa} onPlayerDaContinue={onPlayerDaContinue} onNewDasList={onNewDasList} onAllDasBeaten={onAllDasBeaten} />\n      </div>\n    )\n  }\n}\n\nexport default DaContainer;","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/Home.js",["66","67"],"import React from \"react\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\n\n    const audio = new Audio('public/home_page.mp3');\n    audio.play();\n\n\nconst Home = () => {\n    return(\t\t\n        <>\n    <img className=\"main_logo\" height=\"600\" src={`${process.env.PUBLIC_URL}/logo.gif`}  />\n      <div>\n        <a href=\"/select\">\n        <img className=\"press_start\" height=\"100\" src={`${process.env.PUBLIC_URL}/press_start.gif`}  />\n        </a>\n      </div>\n      <ReactAudioPlayer className=\"audio_player\" src= \"intro.mp3\" autoplay controls/>\n\n</>\n\n    )}\n\n\n\nexport default Home;","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/DaForm.js",[],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/DaList.js",["68","69"],"import React from 'react';\nimport Da from './Da';\nimport { Link } from 'react-router-dom';\n\nconst DaList = ({ das, onDaClicked }) => {\n\n\tconst dasNodes = das.map((da, index) => {\n\t\treturn (\n\t\t\t<li key={index}>\n\t\t\t\t<Da da={da} key={index} onDaClicked={onDaClicked}/>\n\t\t\t</li>\n\t\t)\n\t})\n\n\treturn (\n\t\t<div >\n\t\t<Link to=\"/\"> <img className=\"home_button\" src={`${process.env.PUBLIC_URL}/logo.png`}></img> </Link>\n\t\t<ul className = \"flex-container\">\n\t\t\t{dasNodes}\n\t\t</ul>\n\t\t<Link to=\"/fight\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/SquareGo.png`}></img> </Link>\n\t\t</div>\n\t)\n}\nexport default DaList;","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/helpers/request.js",[],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/ResultScreen.js",["70"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport FinishScreen from './FinishScreen';\n\nconst ResultScreen = ({ winner, playerDa, onGameFinished, das, computerDa, onChooseNextRandomDa, onPlayerDaContinue, onNewDasList, onAllDasBeaten }) => {\n\n    const handleOnClick = function () {\n        onGameFinished(null);\n    }\n\n    const handleOnNextDaClick = function () {\n        const copiedDas = [...das]\n        if (copiedDas.length < 2) {\n            onAllDasBeaten(playerDa)\n        } else {\n            for (var i = 0; i < copiedDas.length; i++) {\n                if (copiedDas[i] === computerDa) {\n                    copiedDas.splice(i, 1);\n                }\n                if (copiedDas[i] === playerDa) {\n                    copiedDas.splice(i, 1);\n                }\n            }\n            const randomIndex = Math.floor(Math.random() * copiedDas.length);\n            const randomDa = copiedDas[randomIndex];\n            onChooseNextRandomDa(randomDa)\n            onGameFinished(null)\n            onPlayerDaContinue(playerDa)\n            onNewDasList(copiedDas)\n        }\n    }\n\n\n\n    return (\n        <div className=\"health\">\n            <h1>{winner.name} Won !</h1>\n            {winner.name === playerDa.name ?\n                <div>\n                    <h2> You battered them !</h2>\n                    {das.length < 2 ?\n                        <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        :\n                        <Link to=\"/fight\">\n                            <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        </Link>\n                    }\n                </div>\n                :\n                <div>\n                    <h2> You got smashed ...</h2>\n                    <Link to=\"/select\"><button type=\"button\" onClick={handleOnClick}>Play again ...</button></Link>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ResultScreen\n\n// if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/FinishScreen.js",[],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/FightScreen.js",["71","72","73","74","75","76","77","78","79","80","81"],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/Da.js",["82"],"import React from 'react';\n\nconst Da = ({ da, onDaClicked }) => {\n  \n\n  const handleClick = function(){\n    onDaClicked(da)\n  }\n\n  return (\n    <>\n    <div >\n      {/* <button onClick={handleClick}>{da.name}</button> */}\n      <img className = \"flex-item\" src={`${process.env.PUBLIC_URL}/${da.imgName}`} onClick={handleClick}/>\n      </div>\n    </>\n   \n  )\n}\n\nexport default Da;",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":14},{"ruleId":"87","severity":1,"message":"91","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":12},{"ruleId":"92","severity":1,"message":"93","line":35,"column":6,"nodeType":"94","endLine":35,"endColumn":16,"suggestions":"95"},{"ruleId":"87","severity":1,"message":"96","line":37,"column":9,"nodeType":"89","messageId":"90","endLine":37,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":12,"column":5,"nodeType":"99","endLine":12,"endColumn":91},{"ruleId":"97","severity":1,"message":"98","line":15,"column":9,"nodeType":"99","endLine":15,"endColumn":104},{"ruleId":"97","severity":1,"message":"98","line":17,"column":17,"nodeType":"99","endLine":17,"endColumn":89},{"ruleId":"97","severity":1,"message":"98","line":21,"column":22,"nodeType":"99","endLine":21,"endColumn":99},{"ruleId":"87","severity":1,"message":"100","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":20},{"ruleId":"87","severity":1,"message":"101","line":1,"column":28,"nodeType":"89","messageId":"90","endLine":1,"endColumn":34},{"ruleId":"87","severity":1,"message":"102","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"103","line":5,"column":10,"nodeType":"89","messageId":"90","endLine":5,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":7,"column":1,"nodeType":"99","endLine":7,"endColumn":6},{"ruleId":"87","severity":1,"message":"104","line":17,"column":26,"nodeType":"89","messageId":"90","endLine":17,"endColumn":41},{"ruleId":"92","severity":1,"message":"105","line":26,"column":8,"nodeType":"94","endLine":26,"endColumn":38,"suggestions":"106"},{"ruleId":"87","severity":1,"message":"107","line":84,"column":19,"nodeType":"89","messageId":"90","endLine":84,"endColumn":25},{"ruleId":"87","severity":1,"message":"108","line":94,"column":11,"nodeType":"89","messageId":"90","endLine":94,"endColumn":29},{"ruleId":"97","severity":1,"message":"98","line":254,"column":16,"nodeType":"99","endLine":254,"endColumn":95},{"ruleId":"97","severity":1,"message":"98","line":269,"column":21,"nodeType":"99","endLine":269,"endColumn":107},{"ruleId":"97","severity":1,"message":"98","line":293,"column":21,"nodeType":"99","endLine":293,"endColumn":109},{"ruleId":"97","severity":1,"message":"98","line":14,"column":7,"nodeType":"99","endLine":14,"endColumn":107},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'DaForm' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectComputerDa'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'handlePost' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FinishScreen' is defined but never used.","'useRef' is defined but never used.","'Link' is defined but never used.","'getFID' is defined but never used.","'setGameFinished' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'computerDa', 'onGameFinished', and 'playerDa'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["112"],"'health' is assigned a value but never used.","'handleSpecialClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [playerDa, selectComputerDa]",{"range":"117","text":"118"},"Update the dependencies array to be: [computerDa, computerHealth, onGameFinished, playerDa, playerHealth]",{"range":"119","text":"120"},[1007,1017],"[playerDa, selectComputerDa]",[1036,1066],"[computerDa, computerHealth, onGameFinished, playerDa, playerHealth]"]