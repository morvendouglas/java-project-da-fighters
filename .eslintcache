[{"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/index.js":"1","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/App.js":"2","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/reportWebVitals.js":"3","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/containers/MainContainer.js":"4","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/containers/DaContainer.js":"5","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Home.js":"6","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/DaList.js":"7","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/CreateADa.js":"8","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/ResultScreen.js":"9","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/FinishScreen.js":"10","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Scoreboard.js":"11","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/FightScreen.js":"12","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/ModeScreen.js":"13","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Simulation.js":"14","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/SimulationFightScreen.js":"15","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/MultiplayerFightScreen.js":"16","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Multiplayer.js":"17","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/helpers/request.js":"18","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Da.js":"19","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/ScoreboardDa.js":"20","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/ScoreboardPoints.js":"21","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/PlayerTwoDa.js":"22"},{"size":500,"mtime":1638791680069,"results":"23","hashOfConfig":"24"},{"size":200,"mtime":1638791720408,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1638791680069,"results":"26","hashOfConfig":"24"},{"size":1051,"mtime":1638810194097,"results":"27","hashOfConfig":"24"},{"size":5096,"mtime":1638810194096,"results":"28","hashOfConfig":"24"},{"size":631,"mtime":1638810194093,"results":"29","hashOfConfig":"24"},{"size":634,"mtime":1638807344345,"results":"30","hashOfConfig":"24"},{"size":2335,"mtime":1638807344344,"results":"31","hashOfConfig":"24"},{"size":2118,"mtime":1638807344350,"results":"32","hashOfConfig":"24"},{"size":447,"mtime":1638807344348,"results":"33","hashOfConfig":"24"},{"size":3089,"mtime":1638807344351,"results":"34","hashOfConfig":"24"},{"size":16286,"mtime":1638873118460,"results":"35","hashOfConfig":"24"},{"size":489,"mtime":1638810194094,"results":"36","hashOfConfig":"24"},{"size":1141,"mtime":1638810194095,"results":"37","hashOfConfig":"24"},{"size":16703,"mtime":1638810194095,"results":"38","hashOfConfig":"24"},{"size":10740,"mtime":1638810194094,"results":"39","hashOfConfig":"24"},{"size":1134,"mtime":1638810194094,"results":"40","hashOfConfig":"24"},{"size":593,"mtime":1638807344356,"results":"41","hashOfConfig":"24"},{"size":335,"mtime":1638807344344,"results":"42","hashOfConfig":"24"},{"size":226,"mtime":1638807344352,"results":"43","hashOfConfig":"24"},{"size":331,"mtime":1638807344352,"results":"44","hashOfConfig":"24"},{"size":388,"mtime":1638810194094,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1atgjtq",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/index.js",[],["101","102"],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/App.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/reportWebVitals.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/containers/MainContainer.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/containers/DaContainer.js",["103","104"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DaList from '../components/DaList';\nimport CreateADa from '../components/CreateADa';\nimport FightScreen from '../components/FightScreen';\nimport ResultScreen from '../components/ResultScreen';\nimport FinishScreen from '../components/FinishScreen';\nimport ModeScreen from '../components/ModeScreen';\nimport Multiplayer from '../components/Multiplayer';\nimport Simulation from '../components/Simulation';\nimport MultiplayerFightScreen from '../components/MultiplayerFightScreen'\nimport SimulationFightScreen from '../components/SimulationFightScreen'\nimport Scoreboard from '../components/Scoreboard';\nimport Request from '../helpers/request';\n\n\nconst DaContainer = () => {\n  const [das, setDas] = useState([]);\n  const [playerDa, setPlayerDa] = useState(null)\n  const [computerDa, setComputerDa] = useState(null)\n  const [winner, setWinner] = useState(null)\n  const [gameFinished, setGameFinished] = useState(null)\n  const [playerTwoDa, setPlayerTwoDa] = useState(null)\n\n  const requestAll = function () {\n    const request = new Request();\n    const dasPromise = request.get('/select')\n\n    Promise.all([dasPromise])\n      .then((data) => {\n        setDas(data[0]);\n      })\n  }\n\n  useEffect(() => {\n    requestAll()\n  }, [])\n\n  useEffect(() => {\n    selectComputerDa()\n  }, [playerDa])\n\n  const handlePost = function (da) {\n    const request = new Request();\n    request.post(\"/create-a-da\", da)\n      .then(() => window.location = '/select')\n  }\n\n  const findDaById = function (id) {\n    return das.find((da) => {\n      return da.id === parseInt(id);\n    })\n  }\n\n  const handleUpdate = function (da) {\n    const request = new Request();\n    request.patch('/scoreboard/' + da.id, da)\n      // .then(() => {\n      //   window.location = '/scoreboard/:id'\n      // })\n  }\n\n  const onDaClicked = function (da) {\n    setPlayerDa(da);\n    // <Route path=\"/result\" render={() => {\n    //   return <ResultScreen />\n    // }} />\n  }\n\n  const onPlayerTwoDaClicked = function (da) {\n    setPlayerTwoDa(da);\n  }\n\n  const onGameFinished = function (da) {\n    setWinner(da)\n  }\n\n  const onChooseNextRandomDa = function (da) {\n    setComputerDa(da)\n  }\n\n  const onPlayerDaContinue = function (da) {\n    setPlayerDa(da)\n  }\n\n  const onNewDasList = function (das) {\n    setDas(das)\n  }\n\n  const onAllDasBeaten = function (da) {\n    setGameFinished(da)\n  }\n\n  const selectComputerDa = function () {\n    const copiedDas = [...das]\n    for (var i = 0; i < copiedDas.length; i++) {\n      if (copiedDas[i] === playerDa) {\n        copiedDas.splice(i, 1);\n      }\n    }\n    const randomIndex = Math.floor(Math.random() * copiedDas.length);\n    const randomDa = copiedDas[randomIndex];\n    setComputerDa(randomDa)\n  }\n\n  if (winner === null) {\n    return (\n      <div>\n        <Switch>\n          <Route path=\"/select\" render={() => {\n            return <DaList classname=\"DaList\" das={das} onDaClicked={onDaClicked} />\n          }} />\n          <Route path=\"/fight\" render={() => {\n            return <FightScreen playerDa={playerDa} computerDa={computerDa} onGameFinished={onGameFinished} das={das} />\n          }} />\n          <Route path=\"/multiplayerfight\" render={() => {\n            return <MultiplayerFightScreen playerDa={playerDa} playerTwoDa={playerTwoDa} onGameFinished={onGameFinished} />\n          }} />\n          <Route path=\"/simulationfight\" render={() => {\n            return <SimulationFightScreen computerDaOne={playerDa} computerDaTwo={playerTwoDa} onGameFinished={onGameFinished} />\n          }} />\n          <Route path=\"/mode\" render={() => {\n            return <ModeScreen />\n          }} />\n          <Route path=\"/multiplayer\" render={() => {\n            return <Multiplayer das={das} onDaClicked={onDaClicked} onPlayerTwoDaClicked={onPlayerTwoDaClicked} />\n          }} />\n          <Route path=\"/simulation\" render={() => {\n            return <Simulation das={das} onDaClicked={onDaClicked} onPlayerTwoDaClicked={onPlayerTwoDaClicked} />\n          }} />\n          {/* <Route path=\"/result\" render={() => {\n          return <ResultScreen playerDa={playerDa} computerDa={computerDa} />\n        }} /> */}\n          <Route path=\"/create-a-da\" render={() => {\n            return <CreateADa handlePost={handlePost} />\n          }} />\n          <Route path=\"/scoreboard/:id\" render={(props) => {\n            const id = props.match.params.id;\n            const da = findDaById(id);\n             return <Scoreboard das={das} handleUpdate={handleUpdate}/> \n          }} />\n        </Switch>\n      </div>\n    )\n  } else if (gameFinished != null) {\n    return (\n      <div>\n        <FinishScreen winner={winner} />\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <ResultScreen winner={winner} playerDa={playerDa} onGameFinished={onGameFinished} das={das} computerDa={computerDa} onChooseNextRandomDa={onChooseNextRandomDa} onPlayerDaContinue={onPlayerDaContinue} onNewDasList={onNewDasList} onAllDasBeaten={onAllDasBeaten} />\n      </div>\n    )\n  }\n}\n\nexport default DaContainer;","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Home.js",["105","106"],"import React from \"react\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\n\nconst audio = new Audio('public/home_page.mp3');\naudio.play();\n\n\nconst Home = () => {\n    return (\n        <>\n            <img className=\"main_logo\" height=\"600\" src={`${process.env.PUBLIC_URL}/logo.gif`} />\n            <div>\n                <a href=\"/mode\">\n                    <img className=\"press_start\" height=\"100\" src={`${process.env.PUBLIC_URL}/press_start.gif`} />\n                </a>\n            </div>\n            <ReactAudioPlayer className=\"audio_player\" src=\"intro.mp3\" autoplay controls />\n\n        </>\n\n    )\n}\n\n\n\nexport default Home;","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/DaList.js",["107","108"],"import React from 'react';\nimport Da from './Da';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\n\nconst DaList = ({ das, onDaClicked }) => {\n\n\tconst dasNodes = das.map((da, index) => {\n\t\treturn (\n\t\t\t<li key={index} >\n\t\t\t\t<Da da={da} key={index} onDaClicked={onDaClicked}/>\n\t\t\t</li>\n\t\t)\n\t})\n\n\treturn (\n\t\t<div >\n\t\t<Link to=\"/\"> <img className=\"home_button\" src={`${process.env.PUBLIC_URL}/logo.png`}></img> </Link>\n\t\t<ul className = \"flex-container\">\n\t\t\t{dasNodes}\n\t\t</ul>\n\t\t<Link to=\"/fight\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/SquareGo.png`}></img> </Link>\n\t\t</div>\n\t)\n}\nexport default DaList;","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/CreateADa.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/ResultScreen.js",["109"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport FinishScreen from './FinishScreen';\n\nconst ResultScreen = ({ winner, playerDa, onGameFinished, das, computerDa, onChooseNextRandomDa, onPlayerDaContinue, onNewDasList, onAllDasBeaten }) => {\n\n    const handleOnClick = function () {\n        onGameFinished(null);\n    }\n\n    const handleOnNextDaClick = function () {\n        const copiedDas = [...das]\n        if (copiedDas.length < 2) {\n            onAllDasBeaten(playerDa)\n        } else {\n            for (var i = 0; i < copiedDas.length; i++) {\n                if (copiedDas[i] === computerDa) {\n                    copiedDas.splice(i, 1);\n                }\n                if (copiedDas[i] === playerDa) {\n                    copiedDas.splice(i, 1);\n                }\n            }\n            const randomIndex = Math.floor(Math.random() * copiedDas.length);\n            const randomDa = copiedDas[randomIndex];\n            onChooseNextRandomDa(randomDa)\n            onGameFinished(null)\n            onPlayerDaContinue(playerDa)\n            onNewDasList(copiedDas)\n        }\n    }\n\n    return (\n        <div className=\"health\">\n            <h1>{winner.name} Won !</h1>\n            {winner.name === playerDa.name ?\n                <div>\n                    <h2> You battered them !</h2>\n                    {das.length < 2 ?\n                        <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        :\n                        <Link to=\"/fight\">\n                            <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        </Link>\n                    }\n                </div>\n                :\n                <div>\n                    <h2> You got smashed ...</h2>\n                    <Link to=\"/select\"><button type=\"button\" onClick={handleOnClick}>Play again ...</button></Link>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ResultScreen\n\n// if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/FinishScreen.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Scoreboard.js",["110"],"import React, { useState } from 'react';\nimport ScoreBoardDa from './ScoreboardDa';\nimport ScoreboardPoints from './ScoreboardPoints';\nimport '../Scoreboard.css'\n\nconst Scoreboard = ({ das, handleUpdate }) => {\n\n    const [stateDa, setStateDa] = useState(\n        {\n            \"id\": \"\",\n            \"name\": \"\",\n            \"bio\": \"\",\n            \"daType\": \"\",\n            \"attackOneName\": \"\",\n            \"attackTwoName\": \"\",\n            \"healName\": \"\",\n            \"imgName\": \"\",\n            \"startingHealth\": 100,\n            \"currentHealth\": 100,\n            \"points\": 0\n        }\n    )\n\n    const [disable, setDisable] = useState(false);\n\n    const findDaById = function () {\n        let url = window.location.pathname\n        let id = url.substring(url.lastIndexOf('/') + 1);\n        return das.find((da) => {\n            return da.id === parseInt(id);\n        })\n    }\n\n    let daWinner = findDaById()\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        let copiedDa = { ...stateDa }\n        copiedDa['id'] = daWinner.id\n        copiedDa[\"name\"] = daWinner.name\n        copiedDa[\"bio\"] = daWinner.bio\n        copiedDa[\"daType\"] = daWinner.daType\n        copiedDa[\"attackOneName\"] = daWinner.attackOneName\n        copiedDa[\"attackTwoName\"] = daWinner.attackTwoName\n        copiedDa[\"healName\"] = daWinner.healName\n        copiedDa[\"imgName\"] = daWinner.imgName\n        copiedDa[\"points\"] = daWinner.points += 100\n        handleUpdate(copiedDa)\n        setDisable(true)\n    }\n\n    // das.sort(function (a, b) {\n    //     return b.points - a.points;\n    // })\n\n    const dasNodes = das.map((da, index) => {\n        return (\n            <ScoreBoardDa da={da} key={index} />\n        )\n    })\n\n    const daPoints = das.map((da, index) => {\n        return (\n            <ScoreboardPoints da={da} key={index} />\n        )\n    })\n\n\n    // <div className=\"scoreboard\">\n    //     <form onSubmit={handleSubmit}>\n    //         <button type=\"submit\" disabled={disable}>You have Scored 100 Points - Click to Collect Points </button>\n    //     </form>\n    //     <span>Da League</span><span className=\"right\">Points</span>\n    //     <div>\n    //         {dasNodes}\n    //     </div>\n    // </div>\n\n    return (\n        <div >\n            <form onSubmit={handleSubmit}>\n                <button type=\"submit\" disabled={disable}>You have Scored 100 Points - Click to Collect Points </button>\n            </form>\n            <table className=\"scoreboard\">\n                <thead >\n                    <tr>\n                        <th colspan={das.length} className=\"header\">SCOREBOARD</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>Da</td>\n                        <td>Points</td>\n                    </tr>\n                    <tr>\n                        <td className=\"da\">{dasNodes}</td>\n                        <td>{daPoints}</td>\n    \n                    </tr>\n                \n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Scoreboard;","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/FightScreen.js",["111","112","113","114","115"],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/ModeScreen.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Simulation.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/SimulationFightScreen.js",["116","117","118","119","120","121","122"],"import React, { useEffect, useState } from 'react'\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\nimport { getFID } from 'web-vitals';\n\nconst SimulationFightScreen = ({ computerDaOne, computerDaTwo, onGameFinished }) => {\n\n    const [computerDaTwoHealth, setComputerDaTwoHealth] = useState(100);\n    const [previousComputerDaTwoHealth, setPreviousComputerDaTwoHealth] = useState(0);\n    const [computerDaOneHealth, setComputerDaOneHealth] = useState(100);\n    const [previousComputerDaOneHealth, setPreviousComputerDaOneHealth] = useState(0);\n    const [computerDaTwoSpecialUsed, setComputerDaTwoSpecialUsed] = useState(false);\n    const [computerDaOneSpecialUsed, setComputerDaOneSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [gif, setGif] = useState(false)\n\n    useEffect(() => {\n        if (computerDaTwoHealth <= 0 & computerDaOneHealth > 0) {\n            onGameFinished(computerDaOne);\n        } else if (computerDaOneHealth <= 0 & computerDaTwoHealth > 0) {\n            onGameFinished(computerDaTwo);\n        }\n    }, [computerDaTwoHealth, computerDaOneHealth])\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const computerDaOneTurn = function () {\n        const Attack1 = function () {\n            let damage = 0;\n            if (computerDaOne.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (computerDaOne.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n            setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - damage)\n            console.log(\"computer one hit computer two for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Attack2 = function () {\n            let damage = getRandomNumber(10, 35);\n            setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n            setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - damage);\n            console.log(\"computer one hit computer two for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDaOne.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerDaOneHealth + heal) >= 100) {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => 100);\n            } else if (computerDaOneHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth + heal)\n            } else {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth + heal)\n            }\n            console.log(\"computer one healed for : \" + heal);\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - opponentDamage);\n                setComputerDaOneSpecialUsed(true);\n                computerDaOne.specialName = \"Special Used\"\n                console.log(\"computer one hit computer two for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - selfDamage);\n                setComputerDaOneSpecialUsed(true);\n                computerDaOne.specialName = \"Special Used\"\n                console.log(\"computer one hit themselves for : \" + selfDamage);\n            }\n        }\n        if (computerDaOneHealth >= 80) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaOneHealth >= 60) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaOneHealth >= 40) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaOneHealth <= 39) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n        computerDaTwoTurn();\n    };\n\n    const computerDaTwoTurn = function () {\n        const Attack1 = function () {\n            let damage = 0;\n            if (computerDaTwo.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (computerDaTwo.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousComputerDaOneHealth(computerDaOneHealth)\n            setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - damage)\n            console.log(\"computer two hit computer one for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Attack2 = function () {\n            let damage = getRandomNumber(10, 35);\n            setPreviousComputerDaOneHealth(computerDaOneHealth)\n            setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - damage);\n            console.log(\"computer two hit computer one for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDaTwo.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerDaTwoHealth + heal) >= 100) {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => 100);\n            } else if (computerDaTwoHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth + heal)\n            } else {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth + heal)\n            }\n            console.log(\"computer two healed for : \" + heal);\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - opponentDamage);\n                setComputerDaTwoSpecialUsed(true);\n                computerDaTwo.specialName = \"Special Used\"\n                console.log(\"computer two hit computer one for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - selfDamage);\n                setComputerDaTwoSpecialUsed(true);\n                computerDaTwo.specialName = \"Special Used\"\n                console.log(\"computer two hit themselves for : \" + selfDamage);\n            }\n        }\n        if (computerDaTwoHealth >= 80) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaTwoHealth >= 60) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaTwoHealth >= 40) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaTwoHealth <= 39) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n    };\n\n    const showFist = function () {\n        return <img src={`${process.env.PUBLIC_URL}/fist.gif`} height=\"200px\" width=\"200px\" />\n    }\n\n\n    if (gameFinished === false) {\n        return (\n            <>\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${computerDaOne.imgName}`} width=\"200\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{computerDaOne.name}</li>\n                        <li className=\"health\">{computerDaOne.bio}</li>\n                        <li className=\"health\">{computerDaOne.attackOneName}...</li>\n                        <li className=\"health\">{computerDaOne.attackTwoName}...</li>\n                        <li className=\"health\">{computerDaOne.healName}...</li>\n                    </ul>\n                    {previousComputerDaOneHealth > computerDaOneHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousComputerDaOneHealth}\n                            end={computerDaOneHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousComputerDaOneHealth}\n                            end={computerDaOneHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n                {gif === true ? showFist() : null}\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${computerDaTwo.imgName}`} width=\"220\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{computerDaTwo.name}</li>\n                        <li className=\"health\">{computerDaTwo.bio}</li>\n                        <li className=\"health\">{computerDaTwo.attackOneName}...</li>\n                        <li className=\"health\">{computerDaTwo.attackTwoName}...</li>\n                        <li className=\"health\">{computerDaTwo.healName}...</li>\n                    </ul>\n                    {previousComputerDaTwoHealth > computerDaTwoHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousComputerDaTwoHealth}\n                            end={computerDaTwoHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousComputerDaTwoHealth}\n                            end={computerDaTwoHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n                <div>\n                    <button onClick={computerDaOneTurn}>FIGHT</button>\n                </div>\n            </>\n        )\n    } else {\n        if (computerDaTwoHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDaTwo.name} smashed {computerDaTwo.name}</h1>\n                        <h2>Computer One Wins !</h2>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDaTwo.name} wrecked {computerDaOne.name}</h1>\n                        <h2>Computer Two Wins !</h2>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nexport default SimulationFightScreen","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/MultiplayerFightScreen.js",["123","124","125","126","127","128","129","130","131"],"import React, { useEffect, useState } from 'react'\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\nimport { getFID } from 'web-vitals';\n\nconst MultiplayerFightScreen = ({ playerDa, playerTwoDa, onGameFinished }) => {\n\n    const [playerTwoHealth, setPlayerTwoHealth] = useState(20);\n    const [previousPlayerTwoHealth, setPreviousPlayerTwoHealth] = useState(0);\n    const [playerHealth, setPlayerHealth] = useState(100);\n    const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n    const [playerTwoSpecialUsed, setPlayerTwoSpecialUsed] = useState(false);\n    const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [gif, setGif] = useState(false)\n\n    useEffect(() => {\n        if (playerTwoHealth <= 0 & playerHealth > 0) {\n            onGameFinished(playerDa);\n        } else if (playerHealth <= 0 & playerTwoHealth > 0) {\n            onGameFinished(playerTwoDa);\n        }\n    }, [playerTwoHealth, playerHealth])\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const handleAttack1Click = function () {\n        let damage = 0;\n        if (playerDa.daType === \"BUFFDA\") {\n            damage = getRandomNumber(18, 30)\n        } else if (playerDa.daType === \"AVERAGEDA\") {\n            damage = getRandomNumber(23, 25)\n        } else {\n            damage = getRandomNumber(18, 25)\n        }\n        setPreviousPlayerTwoHealth(playerTwoHealth)\n        setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - damage)\n        console.log(\"player one hit player two for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handleAttack2Click = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousPlayerTwoHealth(playerTwoHealth)\n        setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - damage)\n        console.log(\"player one hit player two for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handleHealClick = function () {\n        let heal = 0;\n        if (playerDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerHealth + heal) >= 100) {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerhealth => 100)\n        } else if (playerHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        } else {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        }\n        console.log(\"player one healed for : \" + heal);\n    }\n\n    const handleSpecialClick = function () {\n        if (playerSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerTwoHealth(playerTwoHealth)\n                setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - opponentDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player one hit player two for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - selfDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit themselves for : \" + selfDamage);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const handlePlayerTwoAttack1Click = function () {\n        let damage = 0;\n        if (playerTwoDa.daType === \"BUFFDA\") {\n            damage = getRandomNumber(18, 30)\n        } else if (playerTwoDa.daType === \"AVERAGEDA\") {\n            damage = getRandomNumber(23, 25)\n        } else {\n            damage = getRandomNumber(18, 25)\n        }\n        setPreviousPlayerHealth(playerHealth)\n        setPlayerHealth(playerHealth => playerHealth - damage)\n        console.log(\"player two hit player one for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handlePlayerTwoAttack2Click = function () {\n        let damage = getRandomNumber(10, 35);\n        setPreviousPlayerHealth(playerHealth)\n        setPlayerHealth(playerHealth => playerHealth - damage)\n        console.log(\"player two hit player one for : \" + damage);\n        setGif(true)\n        setTimeout(function () {\n            setGif(false)\n        }, 1500)\n    }\n\n    const handlePlayerTwoHealClick = function () {\n        let heal = 0;\n        if (playerTwoDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerTwoHealth + heal) >= 100) {\n            setPreviousPlayerTwoHealth(playerTwoHealth)\n            setPlayerTwoHealth(playerTwohealth => 100)\n        } else if (playerTwoHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerTwoHealth(playerTwoHealth)\n            setPlayerTwoHealth(playerTwoHealth => playerTwoHealth + heal)\n        } else {\n            setPreviousPlayerTwoHealth(playerTwoHealth)\n            setPlayerTwoHealth(playerTwoHealth => playerTwoHealth + heal)\n        }\n        console.log(\"player two healed for : \" + heal);\n    }\n\n    const handlePlayerTwoSpecialClick = function () {\n        if (playerTwoSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n                setPlayerTwoSpecialUsed(true);\n                playerTwoDa.specialName = \"Special Used\"\n                console.log(\"player two hit player one for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerTwoHealth(playerTwoHealth)\n                setPlayerTwoHealth(playerTwoHealth => playerTwoHealth - selfDamage);\n                setPlayerTwoSpecialUsed(true);\n                playerTwoDa.specialName = \"Special Used\"\n                console.log(\"player two hit themselves for : \" + selfDamage);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const showFist = function () {\n        return <img src={`${process.env.PUBLIC_URL}/fist.gif`} height=\"200px\" width=\"200px\" />\n    }\n\n\n    if (gameFinished === false) {\n        return (\n            <>\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${playerDa.imgName}`} width=\"200\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{playerDa.name}</li>\n                        <li className=\"health\">{playerDa.bio}</li>\n                        <li className=\"health\">{playerDa.attackOneName}...  <button onClick={handleAttack1Click}>ATTACK</button></li>\n                        <li className=\"health\">{playerDa.attackTwoName}...  <button onClick={handleAttack2Click}>ATTACK</button></li>\n                        <li className=\"health\">{playerDa.healName}...  <button onClick={handleHealClick}>HEAL</button></li>\n                    </ul>\n                    {previousPlayerHealth > playerHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n                {gif === true ? showFist() : null}\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${playerTwoDa.imgName}`} width=\"220\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{playerTwoDa.name}</li>\n                        <li className=\"health\">{playerTwoDa.bio}</li>\n                        <li className=\"health\">{playerTwoDa.attackOneName}...  <button onClick={handlePlayerTwoAttack1Click}>ATTACK</button></li>\n                        <li className=\"health\">{playerTwoDa.attackTwoName}...  <button onClick={handlePlayerTwoAttack2Click}>ATTACK</button></li>\n                        <li className=\"health\">{playerTwoDa.healName}...  <button onClick={handlePlayerTwoHealClick}>HEAL</button></li>\n                    </ul>\n\n                    {previousPlayerTwoHealth > playerTwoHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousPlayerTwoHealth}\n                            end={playerTwoHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousPlayerTwoHealth}\n                            end={playerTwoHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n            </>\n        )\n    } else {\n        if (playerTwoHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerDa.name} smashed {playerTwoDa.name}</h1>\n                        <h2>Player One Wins !</h2>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerTwoDa.name} wrecked {playerDa.name}</h1>\n                        <h2>Player Two Wins !</h2>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nexport default MultiplayerFightScreen","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Multiplayer.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/helpers/request.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Da.js",["132"],"import React from 'react';\nimport '../App.css'\n\nconst Da = ({ da, onDaClicked }) => {\n  \n\n  const handleClick = function(){\n    onDaClicked(da)\n  }\n\n  return (\n    <>\n    <div >\n      <img className = \"flex-item\" src={`${process.env.PUBLIC_URL}/${da.imgName}`} onClick={handleClick}/>\n      </div>\n    </>\n   \n  )\n}\n\nexport default Da;","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/ScoreboardDa.js",["133"],"import React from 'react';\nimport CountUp from 'react-countup';\nimport '../App.css'\n\nconst ScoreBoardDa = ({ da }) => {\n\n\n  return (\n\n    <div claasName=\"padding\">\n      {da.name}\n    </div>\n  )\n}\n\nexport default ScoreBoardDa;","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/ScoreboardPoints.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/PlayerTwoDa.js",["134"],"import React from 'react';\n\nconst PlayerTwoDa = ({ da, onPlayerTwoDaClicked }) => {\n  \n\n  const handleClick = function(){\n    onPlayerTwoDaClicked(da)\n  }\n\n  return (\n    <>\n      {/* <button onClick={handleClick}>{da.name}</button> */}\n      <img src={`${process.env.PUBLIC_URL}/${da.imgName}`} onClick={handleClick}  width=\"280\" height=\"350\"/>\n    </>\n  )\n}\n\nexport default PlayerTwoDa;",{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":41,"column":6,"nodeType":"141","endLine":41,"endColumn":16,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":139,"column":19,"nodeType":"145","messageId":"146","endLine":139,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":12,"column":13,"nodeType":"149","endLine":12,"endColumn":98},{"ruleId":"147","severity":1,"message":"148","line":15,"column":21,"nodeType":"149","endLine":15,"endColumn":115},{"ruleId":"147","severity":1,"message":"148","line":18,"column":17,"nodeType":"149","endLine":18,"endColumn":89},{"ruleId":"147","severity":1,"message":"148","line":22,"column":22,"nodeType":"149","endLine":22,"endColumn":99},{"ruleId":"143","severity":1,"message":"150","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":20},{"ruleId":"143","severity":1,"message":"151","line":8,"column":21,"nodeType":"145","messageId":"146","endLine":8,"endColumn":31},{"ruleId":"143","severity":1,"message":"152","line":14,"column":26,"nodeType":"145","messageId":"146","endLine":14,"endColumn":41},{"ruleId":"139","severity":1,"message":"153","line":26,"column":8,"nodeType":"141","endLine":26,"endColumn":38,"suggestions":"154"},{"ruleId":"143","severity":1,"message":"155","line":101,"column":19,"nodeType":"145","messageId":"146","endLine":101,"endColumn":25},{"ruleId":"143","severity":1,"message":"156","line":116,"column":11,"nodeType":"145","messageId":"146","endLine":116,"endColumn":29},{"ruleId":"147","severity":1,"message":"148","line":325,"column":21,"nodeType":"149","endLine":325,"endColumn":130},{"ruleId":"143","severity":1,"message":"157","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":14},{"ruleId":"143","severity":1,"message":"158","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":16},{"ruleId":"143","severity":1,"message":"152","line":15,"column":26,"nodeType":"145","messageId":"146","endLine":15,"endColumn":41},{"ruleId":"139","severity":1,"message":"159","line":24,"column":8,"nodeType":"141","endLine":24,"endColumn":50,"suggestions":"160"},{"ruleId":"147","severity":1,"message":"148","line":288,"column":16,"nodeType":"149","endLine":288,"endColumn":95},{"ruleId":"147","severity":1,"message":"148","line":296,"column":21,"nodeType":"149","endLine":296,"endColumn":112},{"ruleId":"147","severity":1,"message":"148","line":320,"column":21,"nodeType":"149","endLine":320,"endColumn":112},{"ruleId":"143","severity":1,"message":"157","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":14},{"ruleId":"143","severity":1,"message":"158","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":16},{"ruleId":"143","severity":1,"message":"152","line":15,"column":26,"nodeType":"145","messageId":"146","endLine":15,"endColumn":41},{"ruleId":"139","severity":1,"message":"161","line":24,"column":8,"nodeType":"141","endLine":24,"endColumn":39,"suggestions":"162"},{"ruleId":"143","severity":1,"message":"156","line":80,"column":11,"nodeType":"145","messageId":"146","endLine":80,"endColumn":29},{"ruleId":"143","severity":1,"message":"163","line":154,"column":11,"nodeType":"145","messageId":"146","endLine":154,"endColumn":38},{"ruleId":"147","severity":1,"message":"148","line":179,"column":16,"nodeType":"149","endLine":179,"endColumn":95},{"ruleId":"147","severity":1,"message":"148","line":187,"column":21,"nodeType":"149","endLine":187,"endColumn":107},{"ruleId":"147","severity":1,"message":"148","line":211,"column":21,"nodeType":"149","endLine":211,"endColumn":110},{"ruleId":"147","severity":1,"message":"148","line":14,"column":7,"nodeType":"149","endLine":14,"endColumn":107},{"ruleId":"143","severity":1,"message":"164","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":13,"column":7,"nodeType":"149","endLine":13,"endColumn":109},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectComputerDa'. Either include it or remove the dependency array.","ArrayExpression",["167"],"no-unused-vars","'da' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FinishScreen' is defined but never used.","'setStateDa' is assigned a value but never used.","'setGameFinished' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'computerDa', 'onGameFinished', and 'playerDa'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["168"],"'health' is assigned a value but never used.","'handleSpecialClick' is assigned a value but never used.","'Link' is defined but never used.","'getFID' is defined but never used.","React Hook useEffect has missing dependencies: 'computerDaOne', 'computerDaTwo', and 'onGameFinished'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["169"],"React Hook useEffect has missing dependencies: 'onGameFinished', 'playerDa', and 'playerTwoDa'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["170"],"'handlePlayerTwoSpecialClick' is assigned a value but never used.","'CountUp' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [playerDa, selectComputerDa]",{"range":"179","text":"180"},"Update the dependencies array to be: [computerDa, computerHealth, onGameFinished, playerDa, playerHealth]",{"range":"181","text":"182"},"Update the dependencies array to be: [computerDaTwoHealth, computerDaOneHealth, onGameFinished, computerDaOne, computerDaTwo]",{"range":"183","text":"184"},"Update the dependencies array to be: [playerTwoHealth, playerHealth, onGameFinished, playerDa, playerTwoDa]",{"range":"185","text":"186"},[1384,1394],"[playerDa, selectComputerDa]",[1091,1121],"[computerDa, computerHealth, onGameFinished, playerDa, playerHealth]",[1132,1174],"[computerDaTwoHealth, computerDaOneHealth, onGameFinished, computerDaOne, computerDaTwo]",[1030,1061],"[playerTwoHealth, playerHealth, onGameFinished, playerDa, playerTwoDa]"]