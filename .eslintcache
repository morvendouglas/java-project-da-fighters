[{"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/index.js":"1","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/reportWebVitals.js":"2","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/App.js":"3","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/MainContainer.js":"4","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/DaContainer.js":"5","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Home.js":"6","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FinishScreen.js":"7","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/DaList.js":"8","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ResultScreen.js":"9","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js":"10","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/helpers/request.js":"11","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Da.js":"12","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ModeScreen.js":"13","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/CreateADa.js":"14","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Multiplayer.js":"15","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Simulation.js":"16","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/SimulationFightScreen.js":"17","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Scoreboard.js":"18","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/MultiplayerFightScreen.js":"19","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/PlayerTwoDa.js":"20","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ScoreboardDa.js":"21","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ScoreboardPoints.js":"22","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/PlayerOneDa.js":"23"},{"size":501,"mtime":1638958272182,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1638289664157,"results":"26","hashOfConfig":"25"},{"size":201,"mtime":1638958272167,"results":"27","hashOfConfig":"25"},{"size":1067,"mtime":1638958165032,"results":"28","hashOfConfig":"25"},{"size":5213,"mtime":1638958235220,"results":"29","hashOfConfig":"25"},{"size":617,"mtime":1638958165028,"results":"30","hashOfConfig":"25"},{"size":447,"mtime":1638958165027,"results":"31","hashOfConfig":"25"},{"size":774,"mtime":1638958235216,"results":"32","hashOfConfig":"25"},{"size":3020,"mtime":1638958235219,"results":"33","hashOfConfig":"25"},{"size":19640,"mtime":1638958272186,"results":"34","hashOfConfig":"25"},{"size":593,"mtime":1638958165036,"results":"35","hashOfConfig":"25"},{"size":335,"mtime":1638958165025,"results":"36","hashOfConfig":"25"},{"size":540,"mtime":1638958165028,"results":"37","hashOfConfig":"25"},{"size":2672,"mtime":1638958165020,"results":"38","hashOfConfig":"25"},{"size":1400,"mtime":1638958272168,"results":"39","hashOfConfig":"25"},{"size":1401,"mtime":1638958272182,"results":"40","hashOfConfig":"25"},{"size":16703,"mtime":1638958165031,"results":"41","hashOfConfig":"25"},{"size":2981,"mtime":1638958272181,"results":"42","hashOfConfig":"25"},{"size":12730,"mtime":1638958272169,"results":"43","hashOfConfig":"25"},{"size":359,"mtime":1638958272175,"results":"44","hashOfConfig":"25"},{"size":195,"mtime":1638958165030,"results":"45","hashOfConfig":"25"},{"size":352,"mtime":1638958165030,"results":"46","hashOfConfig":"25"},{"size":365,"mtime":1638958272169,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ye99wq",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/index.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/reportWebVitals.js",[],["100","101"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/App.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/MainContainer.js",["102"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/containers/DaContainer.js",["103","104"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Home.js",["105","106","107"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FinishScreen.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/DaList.js",["108","109"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ResultScreen.js",["110"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/FightScreen.js",["111"],"import React, { useEffect, useState } from 'react';\nimport CountUp from 'react-countup';\nimport '../App.css'\nimport '../FightScreen.css'\n\n\nconst FightScreen = ({ playerDa, computerDa, onGameFinished, das }) => {\n\n    const [computerHealth, setComputerHealth] = useState(100);\n    const [previousComputerHealth, setPreviousComputerHealth] = useState(0);\n    const [playerHealth, setPlayerHealth] = useState(20);\n    const [previousPlayerHealth, setPreviousPlayerHealth] = useState(0);\n    const [computerSpecialUsed, setComputerSpecialUsed] = useState(false);\n    const [playerSpecialUsed, setPlayerSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [gif, setGif] = useState(false)\n    const [leftGif, setLeftGif] = useState(false)\n    const [rightGif, setRightGif] = useState(false)\n    const [healGif, setHealGif] = useState(false)\n    const [stunGif, setStunGif] = useState(false)\n\n    useEffect(() => {\n        if (computerHealth <= 0 & playerHealth > 0) {\n            onGameFinished(playerDa);\n        } else if (playerHealth <= 0 & computerHealth > 0) {\n            onGameFinished(computerDa);\n        }\n    }, [computerHealth, playerHealth])\n\n    const playAudio = function () {\n        let music = new Audio(\"/game_music.wav\")\n        music.play()\n    }\n\n    const playSound = function () {\n        let audio1 = new Audio(\"/sound1.wav\")\n        let audio2 = new Audio(\"/sound2.wav\")\n        const randomAudio = [audio1, audio2]\n        const randomNumber = Math.floor(Math.random() * 2);\n        const chosenSound = randomAudio[randomNumber]\n        chosenSound.play()\n    };\n\n    const playComputerSound = function () {\n        let audio3 = new Audio(\"/sound3.wav\")\n        let audio4 = new Audio(\"/sound4.wav\")\n        const randomAudio = [audio3, audio4]\n        const randomNumber = Math.floor(Math.random() * 2);\n        const chosenSound = randomAudio[randomNumber]\n        chosenSound.play()\n    };\n\n    const playHeal = function () {\n        let healAudio = new Audio(\"/nectar.wav\")\n        healAudio.play()\n    }\n\n    const playSpecial = function () {\n        let specialSound = new Audio(\"/dadouken.wav\")\n        specialSound.play()\n    }\n\n    const playSpecialFail = function () {\n        let specialFailSound = new Audio(\"/fail.wav\")\n        specialFailSound.play()\n    }\n\n    const playMiss = function () {\n        let missSound = new Audio(\"/miss.wav\")\n        missSound.play()\n    }\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const getMissChance = function () {\n        let hit = true\n        let miss = false\n        const missChance = [hit, hit, hit, hit, miss]\n        const randomNumber = Math.floor(Math.random() * 5)\n        const missOutcome = missChance[randomNumber]\n        return missOutcome;\n    }\n\n    const getMissChanceHeavy = function () {\n        let hit = true\n        let miss = false\n        const missChance = [hit, hit, hit, miss]\n        const randomNumber = Math.floor(Math.random() * 4)\n        const missOutcome = missChance[randomNumber]\n        return missOutcome;\n    }\n\n    const handleAttack1Click = function () {\n        if (getMissChance() === true) {\n            console.log(getMissChance());\n            let damage = 0;\n            if (playerDa.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (playerDa.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousComputerHealth(computerHealth)\n            setComputerHealth(computerHealth => computerHealth - damage)\n            console.log(\"player hit computer for : \" + damage);\n            playSound()\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n            setTimeout(function () {\n                computerTurn()\n            }, 2000)\n        } else {\n            playMiss()\n            setTimeout(function () {\n                computerTurn()\n            }, 2000)\n        }\n    }\n\n    const handleAttack2Click = function () {\n        if (getMissChanceHeavy() === true) {\n            let damage = getRandomNumber(10, 35);\n            setPreviousComputerHealth(computerHealth)\n            setComputerHealth(computerHealth => computerHealth - damage)\n            console.log(\"player hit computer for : \" + damage);\n            playSound()\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n            setTimeout(function () {\n                computerTurn()\n            }, 2000)\n        } else {\n            playMiss()\n            setTimeout(function () {\n                computerTurn()\n            }, 2000)\n        }\n    }\n\n\n    const handleHealClick = function () {\n        let heal = 0;\n        if (playerDa.daType === \"SOFTDA\") {\n            heal = getRandomNumber(23, 25)\n        } else {\n            heal = getRandomNumber(18, 25)\n        }\n        if ((playerHealth + heal) >= 100) {\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerhealth => 100)\n        } else if (playerHealth <= 30) {\n            heal = getRandomNumber(24, 25)\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        } else {\n            const health = playerHealth + heal;\n            setPreviousPlayerHealth(playerHealth)\n            setPlayerHealth(playerHealth => playerHealth + heal)\n        }\n        playHeal()\n        console.log(\"player healed for : \" + heal);\n        setHealGif(true)\n        setTimeout(function () {\n            setHealGif(false)\n        }, 2000)\n        setTimeout(function () {\n            computerTurn()\n        }, 2000)\n    }\n\n    const handleSpecialClick = function () {\n        if (playerSpecialUsed === false) {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - opponentDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit computer for : \" + opponentDamage);\n                setLeftGif(true)\n                setTimeout(function () {\n                    setLeftGif(false)\n                }, 2500)\n                playSpecial();\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - selfDamage);\n                setPlayerSpecialUsed(true);\n                playerDa.specialName = \"Special Used\"\n                console.log(\"player hit themselves for : \" + selfDamage);\n                playSpecialFail();\n                setStunGif(true)\n                setTimeout(function () {\n                    setStunGif(false)\n                }, 2500)\n                setTimeout(function () {\n                    computerTurn()\n                }, 2000)\n            }\n        } else {\n            return null;\n        }\n    }\n\n    const computerTurn = function () {\n        const Attack1 = function () {\n            if (getMissChance === true) {\n                let damage = 0;\n                if (computerDa.daType === \"BUFFDA\") {\n                    damage = getRandomNumber(18, 30)\n                } else if (computerDa.daType === \"AVERAGEDA\") {\n                    damage = getRandomNumber(23, 25)\n                } else {\n                    damage = getRandomNumber(18, 25)\n                }\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - damage)\n                console.log(\"computer hit player for : \" + damage);\n                // checkIfGameFinished();\n                setGif(true)\n                setTimeout(function () {\n                    setGif(false)\n                }, 1500)\n                playComputerSound()\n            }else{\n                playMiss()\n            }\n        }\n        const Attack2 = function () {\n            if (getMissChanceHeavy === true) {\n                let damage = getRandomNumber(10, 35);\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - damage);\n                console.log(\"computer hit player for : \" + damage);\n                // checkIfGameFinished();\n                setGif(true)\n                setTimeout(function () {\n                    setGif(false)\n                }, 1500)\n                playComputerSound()\n            }else{\n                playMiss()\n            }\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDa.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerHealth + heal) >= 100) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => 100);\n            } else if (computerHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            } else {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth + heal)\n            }\n            console.log(\"computer healed for : \" + heal);\n            setHealGif(true)\n            setTimeout(function () {\n                setHealGif(false)\n            }, 1500)\n            playHeal();\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousPlayerHealth(playerHealth)\n                setPlayerHealth(playerHealth => playerHealth - opponentDamage);\n                setComputerSpecialUsed(true);\n                computerDa.specialName = \"Special Used\"\n                console.log(\"computer hit player for : \" + opponentDamage);\n                playSpecial();\n                setRightGif(true)\n                setTimeout(function () {\n                    setRightGif(false)\n                }, 2500)\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerHealth(computerHealth)\n                setComputerHealth(computerHealth => computerHealth - selfDamage);\n                setComputerSpecialUsed(true);\n                computerDa.specialName = \"Special Used\"\n                console.log(\"computer hit themselves for : \" + selfDamage);\n                playSpecialFail();\n                setStunGif(true)\n                setTimeout(function () {\n                    setStunGif(false)\n                }, 2500)\n            }\n        }\n        if (computerHealth >= 80) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 60) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth >= 40) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerHealth <= 39) {\n            if (computerSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n    };\n\n    const showGifLeft = function () {\n        const daImg2 = \"left2.gif\"\n        const daImg3 = \"left3.gif\"\n        const randomDaImg = [daImg2, daImg3]\n        const randomNumber = Math.floor(Math.random() * 2);\n        const img = randomDaImg[randomNumber]\n        return <img src={`${process.env.PUBLIC_URL}/${img}`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n    const showGifRight = function () {\n        const daImg1 = \"right1.gif\"\n        const daImg2 = \"right2.gif\"\n        const daImg3 = \"right3.gif\"\n        const randomDaImg = [daImg1, daImg2, daImg3]\n        const randomNumber = Math.floor(Math.random() * 3);\n        const img = randomDaImg[randomNumber]\n        return <img src={`${process.env.PUBLIC_URL}/${img}`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n    const showFist = function () {\n        return <img src={`${process.env.PUBLIC_URL}/fist.gif`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n    const showHeal = function () {\n        return <img src={`${process.env.PUBLIC_URL}/street-fighter-zangief.gif`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n    const showStun = function () {\n        return <img src={`${process.env.PUBLIC_URL}/balrog-diz.gif`} alt=\"fist\" height=\"180px\" width=\"180px\" />\n    }\n\n\n\n    if (gameFinished === false) {\n        return (\n            <div className=\"fight_bg\" onLoad={playAudio} >\n                {das.length < 2 ?\n                    <div>\n                        <h1 className=\"health\">FINAL ROUND</h1>\n                    </div>\n                    :\n                    <div></div>}\n                <div>\n                    <img className=\"DaFightImg\" src={`${process.env.PUBLIC_URL}/${playerDa.imgName}`} width=\"200\" height=\"200\" />\n                    <ul className=\"DaDetails\">\n                        <li className=\"name\">{playerDa.name}</li>\n                        <li className=\"bio\">{playerDa.bio}</li>\n                        <li className=\"attack1\">{playerDa.attackOneName}<button onClick={handleAttack1Click}>ATTACK</button></li>\n                        <li className=\"attack2\">{playerDa.attackTwoName}<button onClick={handleAttack2Click}>ATTACK</button></li>\n                        <li className=\"heal\">{playerDa.healName}<button onClick={handleHealClick}>HEAL</button></li>\n                    </ul>\n                        <button onClick={handleSpecialClick} className=\"special\" ></button>\n                        <div className=\"playerCountUp\">\n                    {previousPlayerHealth > playerHealth ?\n\n                        <CountUp\n                            className=\"countUpRedP1\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreenP1\"\n                            start={previousPlayerHealth}\n                            end={playerHealth}\n                            duration=\"1\"\n                        />}\n                        </div>\n                </div>\n                <div className=\"gif\">\n                {leftGif === true ? showGifLeft() : null}\n                {rightGif === true ? showGifRight() : null}\n                {healGif === true ? showHeal() : null}\n                {gif === true ? showFist() : null}\n                {stunGif === true ? showStun() : null}\n                </div>\n                <div> \n                    <img className=\"CPUImage\" src={`${process.env.PUBLIC_URL}/${computerDa.imgName}`} alt=\"da-fighter\" />\n                    <ul className=\"DaDetails\">\n                        <li className=\"CPUName\">{computerDa.name}</li>\n                        <li className=\"CPUBio\">{computerDa.bio}</li>\n                        <li className=\"CPUAttack1\">{computerDa.attackOneName}  <button>ATTACK</button></li>\n                        <li className=\"CPUAttack2\">{computerDa.attackTwoName}  <button>ATTACK</button></li>\n                        <li className=\"CPUHeal\">{computerDa.healName}  <button>HEAL</button></li>\n                    </ul>\n                    <div className=\"computerCountUp\">\n\n                    {previousComputerHealth > computerHealth ?\n                        <CountUp\n                            className=\"countUpRedCPU\"\n                            start={previousComputerHealth}\n                            end={computerHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreenCPU\"\n                            start={previousComputerHealth}\n                            end={computerHealth}\n                            duration=\"1\"\n                        />}\n                        </div>\n                    </div>\n                </div>\n<<<<<<< HEAD\n=======\n            </div>\n>>>>>>> d3c5b89fc64cfd3541e714a5b793ae0ecf519b94\n        )\n    } else {\n        if (computerHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{playerDa.name} smashed {computerDa.name}</h1>\n                        <h2>You Win !</h2>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDa.name} wrecked {playerDa.name}</h1>\n                        <h2>You Lose !</h2>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nexport default FightScreen;","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/helpers/request.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Da.js",["112"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ModeScreen.js",["113","114","115"],"import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nconst ModeScreen = () => {\n\n    return (\n        <div>\n            <Link to=\"/select\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/pvc.png`}></img> </Link>\n            <Link to=\"/multiplayer\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/pvp.png`}></img> </Link>\n            <Link to=\"/simulation\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/cvc.png`}></img> </Link>\n\n        </div>\n    )\n}\n\nexport default ModeScreen","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/CreateADa.js",["116"],"import React, { useState } from 'react';\nimport '../CreateADa.css'\n\nconst CreateADa = ({ handlePost }) => {\n\n    // cant get daType in a select to  work with daForm\n\n    const [stateDa, setStateDa] = useState(\n        {\n            \"name\": \"\",\n            \"bio\": \"\",\n            \"daType\": \"BUFFDA\",\n            \"attackOneName\": \"\",\n            \"attackTwoName\": \"\",\n            \"healName\": \"\",\n            \"imgName\": \"11.png\",\n            \"startingHealth\": 100,\n            \"currentHealth\": 100,\n            \"points\": 0\n        }\n    )\n\n    // const handleClick = function (event) {\n    //     let propertyName = event.target.name;\n    //     let copiedDa = { ...stateDa }\n    //     const daImg1 = \"12.png\"\n    //     const daImg2 = \"13.png\"\n    //     const daImg3 = \"14.png\"\n    //     const randomDaImg = [daImg1, daImg2, daImg3]\n    //     const randomNumber = Math.floor(Math.random() * 3);\n    //     copiedDa[propertyName] = randomDaImg[randomNumber]\n    //     setStateDa(copiedDa)\n    // }\n\n\n    const handleChange = function (event) {\n        let propertyName = event.target.name;\n        let copiedDa = { ...stateDa }\n        copiedDa[propertyName] = event.target.value;\n        setStateDa(copiedDa)\n    }\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        handlePost(stateDa); \n    }\n\n    return (\n        <>\n        <div className=\"first\">\n           <img className=\"img\" src={`${process.env.PUBLIC_URL}/DA.png`} height=\"400px\" width=\"700px\"/>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"⚡ Da Name\" name=\"name\" className=\"input\" onChange={handleChange} value={stateDa.name} />\n                <input type=\"text\" placeholder=\"⚡ Bio\" name=\"bio\" className=\"input\" onChange={handleChange} value={stateDa.bio} />\n                <input type=\"text\" placeholder=\"⚡ First Attack Name\" className=\"input\" name=\"attackOneName\" onChange={handleChange} value={stateDa.attackOneName} />\n                <input type=\"text\" placeholder=\"⚡ Second Attack Name\" className=\"input\" name=\"attackTwoName\" onChange={handleChange} value={stateDa.attackTwoName} />\n                <input type=\"text\" placeholder=\"⚡ Heal Name\" name=\"healName\" className=\"input\" onChange={handleChange} value={stateDa.healName} />\n                {/* <label for=\"imgName\" className=\"label\">Click for da photo ->></label> */}\n                {/* <input type=\"radio\" className=\"radio\" name=\"imgName\"  value={stateDa.imgName} onClick={handleClick}></input> */}\n                <button type=\"submit\" className=\"submit\">Save</button>\n            </form>\n        </div>\n        </>\n\n    )\n}\n\n\nexport default CreateADa;\n","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Multiplayer.js",["117","118","119"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Simulation.js",["120","121"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/SimulationFightScreen.js",["122","123","124","125","126","127","128"],"import React, { useEffect, useState } from 'react'\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\nimport { getFID } from 'web-vitals';\n\nconst SimulationFightScreen = ({ computerDaOne, computerDaTwo, onGameFinished }) => {\n\n    const [computerDaTwoHealth, setComputerDaTwoHealth] = useState(100);\n    const [previousComputerDaTwoHealth, setPreviousComputerDaTwoHealth] = useState(0);\n    const [computerDaOneHealth, setComputerDaOneHealth] = useState(100);\n    const [previousComputerDaOneHealth, setPreviousComputerDaOneHealth] = useState(0);\n    const [computerDaTwoSpecialUsed, setComputerDaTwoSpecialUsed] = useState(false);\n    const [computerDaOneSpecialUsed, setComputerDaOneSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [gif, setGif] = useState(false)\n\n    useEffect(() => {\n        if (computerDaTwoHealth <= 0 & computerDaOneHealth > 0) {\n            onGameFinished(computerDaOne);\n        } else if (computerDaOneHealth <= 0 & computerDaTwoHealth > 0) {\n            onGameFinished(computerDaTwo);\n        }\n    }, [computerDaTwoHealth, computerDaOneHealth])\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const computerDaOneTurn = function () {\n        const Attack1 = function () {\n            let damage = 0;\n            if (computerDaOne.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (computerDaOne.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n            setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - damage)\n            console.log(\"computer one hit computer two for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Attack2 = function () {\n            let damage = getRandomNumber(10, 35);\n            setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n            setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - damage);\n            console.log(\"computer one hit computer two for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDaOne.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerDaOneHealth + heal) >= 100) {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => 100);\n            } else if (computerDaOneHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth + heal)\n            } else {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth + heal)\n            }\n            console.log(\"computer one healed for : \" + heal);\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - opponentDamage);\n                setComputerDaOneSpecialUsed(true);\n                computerDaOne.specialName = \"Special Used\"\n                console.log(\"computer one hit computer two for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - selfDamage);\n                setComputerDaOneSpecialUsed(true);\n                computerDaOne.specialName = \"Special Used\"\n                console.log(\"computer one hit themselves for : \" + selfDamage);\n            }\n        }\n        if (computerDaOneHealth >= 80) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaOneHealth >= 60) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaOneHealth >= 40) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaOneHealth <= 39) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n        computerDaTwoTurn();\n    };\n\n    const computerDaTwoTurn = function () {\n        const Attack1 = function () {\n            let damage = 0;\n            if (computerDaTwo.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (computerDaTwo.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousComputerDaOneHealth(computerDaOneHealth)\n            setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - damage)\n            console.log(\"computer two hit computer one for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Attack2 = function () {\n            let damage = getRandomNumber(10, 35);\n            setPreviousComputerDaOneHealth(computerDaOneHealth)\n            setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - damage);\n            console.log(\"computer two hit computer one for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDaTwo.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerDaTwoHealth + heal) >= 100) {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => 100);\n            } else if (computerDaTwoHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth + heal)\n            } else {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth + heal)\n            }\n            console.log(\"computer two healed for : \" + heal);\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - opponentDamage);\n                setComputerDaTwoSpecialUsed(true);\n                computerDaTwo.specialName = \"Special Used\"\n                console.log(\"computer two hit computer one for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - selfDamage);\n                setComputerDaTwoSpecialUsed(true);\n                computerDaTwo.specialName = \"Special Used\"\n                console.log(\"computer two hit themselves for : \" + selfDamage);\n            }\n        }\n        if (computerDaTwoHealth >= 80) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaTwoHealth >= 60) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaTwoHealth >= 40) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaTwoHealth <= 39) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n    };\n\n    const showFist = function () {\n        return <img src={`${process.env.PUBLIC_URL}/fist.gif`} height=\"200px\" width=\"200px\" />\n    }\n\n\n    if (gameFinished === false) {\n        return (\n            <>\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${computerDaOne.imgName}`} width=\"200\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{computerDaOne.name}</li>\n                        <li className=\"health\">{computerDaOne.bio}</li>\n                        <li className=\"health\">{computerDaOne.attackOneName}...</li>\n                        <li className=\"health\">{computerDaOne.attackTwoName}...</li>\n                        <li className=\"health\">{computerDaOne.healName}...</li>\n                    </ul>\n                    {previousComputerDaOneHealth > computerDaOneHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousComputerDaOneHealth}\n                            end={computerDaOneHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousComputerDaOneHealth}\n                            end={computerDaOneHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n                {gif === true ? showFist() : null}\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${computerDaTwo.imgName}`} width=\"220\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{computerDaTwo.name}</li>\n                        <li className=\"health\">{computerDaTwo.bio}</li>\n                        <li className=\"health\">{computerDaTwo.attackOneName}...</li>\n                        <li className=\"health\">{computerDaTwo.attackTwoName}...</li>\n                        <li className=\"health\">{computerDaTwo.healName}...</li>\n                    </ul>\n                    {previousComputerDaTwoHealth > computerDaTwoHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousComputerDaTwoHealth}\n                            end={computerDaTwoHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousComputerDaTwoHealth}\n                            end={computerDaTwoHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n                <div>\n                    <button onClick={computerDaOneTurn}>FIGHT</button>\n                </div>\n            </>\n        )\n    } else {\n        if (computerDaTwoHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDaTwo.name} smashed {computerDaTwo.name}</h1>\n                        <h2>Computer One Wins !</h2>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDaTwo.name} wrecked {computerDaOne.name}</h1>\n                        <h2>Computer Two Wins !</h2>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nexport default SimulationFightScreen","/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/Scoreboard.js",["129","130"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/MultiplayerFightScreen.js",["131","132","133","134","135","136","137","138","139","140","141"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/PlayerTwoDa.js",["142"],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ScoreboardDa.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/ScoreboardPoints.js",[],"/Users/vincentbennis/Desktop/G27/codeclan_work/projects/daFighter/java-project-da-fighters-frontend/src/components/PlayerOneDa.js",["143"],"import React from 'react';\nimport '../App.css'\n\nconst PlayerOneDa = ({ da, onDaClicked }) => {\n  \n\n  const handleClick = function(){\n    onDaClicked(da)\n  }\n\n  return (\n    <>\n    <div >\n      <img className = \"flex-multiplayer-item\" src={`${process.env.PUBLIC_URL}/${da.imgName}`} onClick={handleClick}/>\n      </div>\n    </>\n   \n  )\n}\n\nexport default PlayerOneDa;",{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":47,"column":4,"nodeType":"154","endLine":47,"endColumn":14,"suggestions":"155"},{"ruleId":"148","severity":1,"message":"156","line":150,"column":17,"nodeType":"150","messageId":"151","endLine":150,"endColumn":19},{"ruleId":"148","severity":1,"message":"157","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":24},{"ruleId":"158","severity":1,"message":"159","line":13,"column":13,"nodeType":"160","endLine":13,"endColumn":118},{"ruleId":"158","severity":1,"message":"159","line":16,"column":21,"nodeType":"160","endLine":16,"endColumn":115},{"ruleId":"158","severity":1,"message":"159","line":23,"column":18,"nodeType":"160","endLine":23,"endColumn":90},{"ruleId":"158","severity":1,"message":"159","line":27,"column":23,"nodeType":"160","endLine":27,"endColumn":100},{"ruleId":"148","severity":1,"message":"161","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":20},{"ruleId":null,"fatal":true,"severity":2,"message":"162","line":475,"column":4},{"ruleId":"158","severity":1,"message":"159","line":14,"column":7,"nodeType":"160","endLine":14,"endColumn":107},{"ruleId":"158","severity":1,"message":"159","line":8,"column":33,"nodeType":"160","endLine":8,"endColumn":105},{"ruleId":"158","severity":1,"message":"159","line":9,"column":38,"nodeType":"160","endLine":9,"endColumn":110},{"ruleId":"158","severity":1,"message":"159","line":10,"column":37,"nodeType":"160","endLine":10,"endColumn":109},{"ruleId":"158","severity":1,"message":"159","line":51,"column":12,"nodeType":"160","endLine":51,"endColumn":104},{"ruleId":"148","severity":1,"message":"163","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":10},{"ruleId":"158","severity":1,"message":"159","line":27,"column":27,"nodeType":"160","endLine":27,"endColumn":99},{"ruleId":"158","severity":1,"message":"159","line":40,"column":43,"nodeType":"160","endLine":40,"endColumn":120},{"ruleId":"158","severity":1,"message":"159","line":27,"column":23,"nodeType":"160","endLine":27,"endColumn":95},{"ruleId":"158","severity":1,"message":"159","line":39,"column":42,"nodeType":"160","endLine":39,"endColumn":119},{"ruleId":"148","severity":1,"message":"164","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"165","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":16},{"ruleId":"148","severity":1,"message":"166","line":15,"column":26,"nodeType":"150","messageId":"151","endLine":15,"endColumn":41},{"ruleId":"152","severity":1,"message":"167","line":24,"column":8,"nodeType":"154","endLine":24,"endColumn":50,"suggestions":"168"},{"ruleId":"158","severity":1,"message":"159","line":288,"column":16,"nodeType":"160","endLine":288,"endColumn":95},{"ruleId":"158","severity":1,"message":"159","line":296,"column":21,"nodeType":"160","endLine":296,"endColumn":112},{"ruleId":"158","severity":1,"message":"159","line":320,"column":21,"nodeType":"160","endLine":320,"endColumn":112},{"ruleId":"148","severity":1,"message":"169","line":9,"column":21,"nodeType":"150","messageId":"151","endLine":9,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":96,"column":27,"nodeType":"160","endLine":96,"endColumn":92},{"ruleId":"148","severity":1,"message":"164","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"165","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":16},{"ruleId":"148","severity":1,"message":"166","line":15,"column":26,"nodeType":"150","messageId":"151","endLine":15,"endColumn":41},{"ruleId":"148","severity":1,"message":"170","line":17,"column":21,"nodeType":"150","messageId":"151","endLine":17,"endColumn":31},{"ruleId":"148","severity":1,"message":"171","line":18,"column":22,"nodeType":"150","messageId":"151","endLine":18,"endColumn":33},{"ruleId":"148","severity":1,"message":"172","line":19,"column":21,"nodeType":"150","messageId":"151","endLine":19,"endColumn":31},{"ruleId":"148","severity":1,"message":"173","line":20,"column":21,"nodeType":"150","messageId":"151","endLine":20,"endColumn":31},{"ruleId":"152","severity":1,"message":"174","line":28,"column":8,"nodeType":"154","endLine":28,"endColumn":39,"suggestions":"175"},{"ruleId":"148","severity":1,"message":"176","line":158,"column":11,"nodeType":"150","messageId":"151","endLine":158,"endColumn":38},{"ruleId":"158","severity":1,"message":"159","line":219,"column":21,"nodeType":"160","endLine":219,"endColumn":106},{"ruleId":"158","severity":1,"message":"159","line":252,"column":21,"nodeType":"160","endLine":252,"endColumn":106},{"ruleId":"158","severity":1,"message":"159","line":12,"column":7,"nodeType":"160","endLine":12,"endColumn":143},{"ruleId":"158","severity":1,"message":"159","line":14,"column":7,"nodeType":"160","endLine":14,"endColumn":119},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectComputerDa'. Either include it or remove the dependency array.","ArrayExpression",["179"],"'da' is assigned a value but never used.","'ReactAudioPlayer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FinishScreen' is defined but never used.","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 473 |\u001b[39m                     \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 474 |\u001b[39m                 \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 475 |\u001b[39m \u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     |\u001b[39m    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 476 |\u001b[39m \u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 477 |\u001b[39m             \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 478 |\u001b[39m \u001b[33m>>>\u001b[39m\u001b[33m>>>\u001b[39m\u001b[33m>\u001b[39m d3c5b89fc64cfd3541e714a5b793ae0ecf519b94\u001b[0m","'Da' is defined but never used.","'Link' is defined but never used.","'getFID' is defined but never used.","'setGameFinished' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'computerDaOne', 'computerDaTwo', and 'onGameFinished'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["180"],"'setStateDa' is assigned a value but never used.","'setLeftGif' is assigned a value but never used.","'setRightGif' is assigned a value but never used.","'setHealGif' is assigned a value but never used.","'setStunGif' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onGameFinished', 'playerDa', and 'playerTwoDa'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["181"],"'handlePlayerTwoSpecialClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [playerDa, selectComputerDa]",{"range":"188","text":"189"},"Update the dependencies array to be: [computerDaTwoHealth, computerDaOneHealth, onGameFinished, computerDaOne, computerDaTwo]",{"range":"190","text":"191"},"Update the dependencies array to be: [playerTwoHealth, playerHealth, onGameFinished, playerDa, playerTwoDa]",{"range":"192","text":"193"},[1574,1584],"[playerDa, selectComputerDa]",[1132,1174],"[computerDaTwoHealth, computerDaOneHealth, onGameFinished, computerDaOne, computerDaTwo]",[1232,1263],"[playerTwoHealth, playerHealth, onGameFinished, playerDa, playerTwoDa]"]