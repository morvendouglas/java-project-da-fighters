[{"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/index.js":"1","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/reportWebVitals.js":"2","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/App.js":"3","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/containers/MainContainer.js":"4","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Home.js":"5","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/containers/DaContainer.js":"6","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/FightScreen.js":"7","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/FinishScreen.js":"8","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/CreateADa.js":"9","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ResultScreen.js":"10","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Scoreboard.js":"11","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/DaList.js":"12","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ModeScreen.js":"13","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Multiplayer.js":"14","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Simulation.js":"15","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/MultiplayerFightScreen.js":"16","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/helpers/request.js":"17","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/SimulationFightScreen.js":"18","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Da.js":"19","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ScoreboardPoints.js":"20","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ScoreboardDa.js":"21","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/PlayerTwoDa.js":"22","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/PlayerOneDa.js":"23"},{"size":501,"mtime":1638896164758,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1638613238446,"results":"26","hashOfConfig":"25"},{"size":201,"mtime":1638896161175,"results":"27","hashOfConfig":"25"},{"size":1051,"mtime":1638886591386,"results":"28","hashOfConfig":"25"},{"size":631,"mtime":1638886591379,"results":"29","hashOfConfig":"25"},{"size":5096,"mtime":1638886591386,"results":"30","hashOfConfig":"25"},{"size":17199,"mtime":1638956100412,"results":"31","hashOfConfig":"25"},{"size":447,"mtime":1638806049633,"results":"32","hashOfConfig":"25"},{"size":2672,"mtime":1638886615823,"results":"33","hashOfConfig":"25"},{"size":2118,"mtime":1638806049634,"results":"34","hashOfConfig":"25"},{"size":2981,"mtime":1638887062027,"results":"35","hashOfConfig":"25"},{"size":634,"mtime":1638806302042,"results":"36","hashOfConfig":"25"},{"size":540,"mtime":1638886591379,"results":"37","hashOfConfig":"25"},{"size":1400,"mtime":1638912004724,"results":"38","hashOfConfig":"25"},{"size":1401,"mtime":1638912662673,"results":"39","hashOfConfig":"25"},{"size":12730,"mtime":1638957375813,"results":"40","hashOfConfig":"25"},{"size":593,"mtime":1638806049634,"results":"41","hashOfConfig":"25"},{"size":16703,"mtime":1638886591379,"results":"42","hashOfConfig":"25"},{"size":335,"mtime":1638911080421,"results":"43","hashOfConfig":"25"},{"size":352,"mtime":1638886615824,"results":"44","hashOfConfig":"25"},{"size":195,"mtime":1638886615823,"results":"45","hashOfConfig":"25"},{"size":359,"mtime":1638911957985,"results":"46","hashOfConfig":"25"},{"size":365,"mtime":1638912433182,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1qgpvhc",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"50"},"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/index.js",[],["108","109"],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/reportWebVitals.js",[],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/App.js",[],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/containers/MainContainer.js",[],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Home.js",["110","111"],"import React from \"react\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\n\nconst audio = new Audio('public/home_page.mp3');\naudio.play();\n\n\nconst Home = () => {\n    return (\n        <>\n            <img className=\"main_logo\" height=\"600\" src={`${process.env.PUBLIC_URL}/logo.gif`} />\n            <div>\n                <a href=\"/mode\">\n                    <img className=\"press_start\" height=\"100\" src={`${process.env.PUBLIC_URL}/press_start.gif`} />\n                </a>\n            </div>\n            <ReactAudioPlayer className=\"audio_player\" src=\"intro.mp3\" autoplay controls />\n\n        </>\n\n    )\n}\n\n\n\nexport default Home;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/containers/DaContainer.js",["112","113"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DaList from '../components/DaList';\nimport CreateADa from '../components/CreateADa';\nimport FightScreen from '../components/FightScreen';\nimport ResultScreen from '../components/ResultScreen';\nimport FinishScreen from '../components/FinishScreen';\nimport ModeScreen from '../components/ModeScreen';\nimport Multiplayer from '../components/Multiplayer';\nimport Simulation from '../components/Simulation';\nimport MultiplayerFightScreen from '../components/MultiplayerFightScreen'\nimport SimulationFightScreen from '../components/SimulationFightScreen'\nimport Scoreboard from '../components/Scoreboard';\nimport Request from '../helpers/request';\n\n\nconst DaContainer = () => {\n  const [das, setDas] = useState([]);\n  const [playerDa, setPlayerDa] = useState(null)\n  const [computerDa, setComputerDa] = useState(null)\n  const [winner, setWinner] = useState(null)\n  const [gameFinished, setGameFinished] = useState(null)\n  const [playerTwoDa, setPlayerTwoDa] = useState(null)\n\n  const requestAll = function () {\n    const request = new Request();\n    const dasPromise = request.get('/select')\n\n    Promise.all([dasPromise])\n      .then((data) => {\n        setDas(data[0]);\n      })\n  }\n\n  useEffect(() => {\n    requestAll()\n  }, [])\n\n  useEffect(() => {\n    selectComputerDa()\n  }, [playerDa])\n\n  const handlePost = function (da) {\n    const request = new Request();\n    request.post(\"/create-a-da\", da)\n      .then(() => window.location = '/select')\n  }\n\n  const findDaById = function (id) {\n    return das.find((da) => {\n      return da.id === parseInt(id);\n    })\n  }\n\n  const handleUpdate = function (da) {\n    const request = new Request();\n    request.patch('/scoreboard/' + da.id, da)\n      // .then(() => {\n      //   window.location = '/scoreboard/:id'\n      // })\n  }\n\n  const onDaClicked = function (da) {\n    setPlayerDa(da);\n    // <Route path=\"/result\" render={() => {\n    //   return <ResultScreen />\n    // }} />\n  }\n\n  const onPlayerTwoDaClicked = function (da) {\n    setPlayerTwoDa(da);\n  }\n\n  const onGameFinished = function (da) {\n    setWinner(da)\n  }\n\n  const onChooseNextRandomDa = function (da) {\n    setComputerDa(da)\n  }\n\n  const onPlayerDaContinue = function (da) {\n    setPlayerDa(da)\n  }\n\n  const onNewDasList = function (das) {\n    setDas(das)\n  }\n\n  const onAllDasBeaten = function (da) {\n    setGameFinished(da)\n  }\n\n  const selectComputerDa = function () {\n    const copiedDas = [...das]\n    for (var i = 0; i < copiedDas.length; i++) {\n      if (copiedDas[i] === playerDa) {\n        copiedDas.splice(i, 1);\n      }\n    }\n    const randomIndex = Math.floor(Math.random() * copiedDas.length);\n    const randomDa = copiedDas[randomIndex];\n    setComputerDa(randomDa)\n  }\n\n  if (winner === null) {\n    return (\n      <div>\n        <Switch>\n          <Route path=\"/select\" render={() => {\n            return <DaList classname=\"DaList\" das={das} onDaClicked={onDaClicked} />\n          }} />\n          <Route path=\"/fight\" render={() => {\n            return <FightScreen playerDa={playerDa} computerDa={computerDa} onGameFinished={onGameFinished} das={das} />\n          }} />\n          <Route path=\"/multiplayerfight\" render={() => {\n            return <MultiplayerFightScreen playerDa={playerDa} playerTwoDa={playerTwoDa} onGameFinished={onGameFinished} />\n          }} />\n          <Route path=\"/simulationfight\" render={() => {\n            return <SimulationFightScreen computerDaOne={playerDa} computerDaTwo={playerTwoDa} onGameFinished={onGameFinished} />\n          }} />\n          <Route path=\"/mode\" render={() => {\n            return <ModeScreen />\n          }} />\n          <Route path=\"/multiplayer\" render={() => {\n            return <Multiplayer das={das} onDaClicked={onDaClicked} onPlayerTwoDaClicked={onPlayerTwoDaClicked} />\n          }} />\n          <Route path=\"/simulation\" render={() => {\n            return <Simulation das={das} onDaClicked={onDaClicked} onPlayerTwoDaClicked={onPlayerTwoDaClicked} />\n          }} />\n          {/* <Route path=\"/result\" render={() => {\n          return <ResultScreen playerDa={playerDa} computerDa={computerDa} />\n        }} /> */}\n          <Route path=\"/create-a-da\" render={() => {\n            return <CreateADa handlePost={handlePost} />\n          }} />\n          <Route path=\"/scoreboard/:id\" render={(props) => {\n            const id = props.match.params.id;\n            const da = findDaById(id);\n             return <Scoreboard das={das} handleUpdate={handleUpdate}/> \n          }} />\n        </Switch>\n      </div>\n    )\n  } else if (gameFinished != null) {\n    return (\n      <div>\n        <FinishScreen winner={winner} />\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <ResultScreen winner={winner} playerDa={playerDa} onGameFinished={onGameFinished} das={das} computerDa={computerDa} onChooseNextRandomDa={onChooseNextRandomDa} onPlayerDaContinue={onPlayerDaContinue} onNewDasList={onNewDasList} onAllDasBeaten={onAllDasBeaten} />\n      </div>\n    )\n  }\n}\n\nexport default DaContainer;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/FightScreen.js",["114","115","116","117"],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/FinishScreen.js",[],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/CreateADa.js",["118"],"import React, { useState } from 'react';\nimport '../CreateADa.css'\n\nconst CreateADa = ({ handlePost }) => {\n\n    // cant get daType in a select to  work with daForm\n\n    const [stateDa, setStateDa] = useState(\n        {\n            \"name\": \"\",\n            \"bio\": \"\",\n            \"daType\": \"BUFFDA\",\n            \"attackOneName\": \"\",\n            \"attackTwoName\": \"\",\n            \"healName\": \"\",\n            \"imgName\": \"11.png\",\n            \"startingHealth\": 100,\n            \"currentHealth\": 100,\n            \"points\": 0\n        }\n    )\n\n    // const handleClick = function (event) {\n    //     let propertyName = event.target.name;\n    //     let copiedDa = { ...stateDa }\n    //     const daImg1 = \"12.png\"\n    //     const daImg2 = \"13.png\"\n    //     const daImg3 = \"14.png\"\n    //     const randomDaImg = [daImg1, daImg2, daImg3]\n    //     const randomNumber = Math.floor(Math.random() * 3);\n    //     copiedDa[propertyName] = randomDaImg[randomNumber]\n    //     setStateDa(copiedDa)\n    // }\n\n\n    const handleChange = function (event) {\n        let propertyName = event.target.name;\n        let copiedDa = { ...stateDa }\n        copiedDa[propertyName] = event.target.value;\n        setStateDa(copiedDa)\n    }\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        handlePost(stateDa); \n    }\n\n    return (\n        <>\n        <div className=\"first\">\n           <img className=\"img\" src={`${process.env.PUBLIC_URL}/DA.png`} height=\"400px\" width=\"700px\"/>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"⚡ Da Name\" name=\"name\" className=\"input\" onChange={handleChange} value={stateDa.name} />\n                <input type=\"text\" placeholder=\"⚡ Bio\" name=\"bio\" className=\"input\" onChange={handleChange} value={stateDa.bio} />\n                <input type=\"text\" placeholder=\"⚡ First Attack Name\" className=\"input\" name=\"attackOneName\" onChange={handleChange} value={stateDa.attackOneName} />\n                <input type=\"text\" placeholder=\"⚡ Second Attack Name\" className=\"input\" name=\"attackTwoName\" onChange={handleChange} value={stateDa.attackTwoName} />\n                <input type=\"text\" placeholder=\"⚡ Heal Name\" name=\"healName\" className=\"input\" onChange={handleChange} value={stateDa.healName} />\n                {/* <label for=\"imgName\" className=\"label\">Click for da photo ->></label> */}\n                {/* <input type=\"radio\" className=\"radio\" name=\"imgName\"  value={stateDa.imgName} onClick={handleClick}></input> */}\n                <button type=\"submit\" className=\"submit\">Save</button>\n            </form>\n        </div>\n        </>\n\n    )\n}\n\n\nexport default CreateADa;\n","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ResultScreen.js",["119"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport FinishScreen from './FinishScreen';\n\nconst ResultScreen = ({ winner, playerDa, onGameFinished, das, computerDa, onChooseNextRandomDa, onPlayerDaContinue, onNewDasList, onAllDasBeaten }) => {\n\n    const handleOnClick = function () {\n        onGameFinished(null);\n    }\n\n    const handleOnNextDaClick = function () {\n        const copiedDas = [...das]\n        if (copiedDas.length < 2) {\n            onAllDasBeaten(playerDa)\n        } else {\n            for (var i = 0; i < copiedDas.length; i++) {\n                if (copiedDas[i] === computerDa) {\n                    copiedDas.splice(i, 1);\n                }\n                if (copiedDas[i] === playerDa) {\n                    copiedDas.splice(i, 1);\n                }\n            }\n            const randomIndex = Math.floor(Math.random() * copiedDas.length);\n            const randomDa = copiedDas[randomIndex];\n            onChooseNextRandomDa(randomDa)\n            onGameFinished(null)\n            onPlayerDaContinue(playerDa)\n            onNewDasList(copiedDas)\n        }\n    }\n\n    return (\n        <div className=\"health\">\n            <h1>{winner.name} Won !</h1>\n            {winner.name === playerDa.name ?\n                <div>\n                    <h2> You battered them !</h2>\n                    {das.length < 2 ?\n                        <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        :\n                        <Link to=\"/fight\">\n                            <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        </Link>\n                    }\n                </div>\n                :\n                <div>\n                    <h2> You got smashed ...</h2>\n                    <Link to=\"/select\"><button type=\"button\" onClick={handleOnClick}>Play again ...</button></Link>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ResultScreen\n\n// if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Scoreboard.js",["120","121"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ScoreboardDa from './ScoreboardDa';\nimport ScoreboardPoints from './ScoreboardPoints';\nimport '../Scoreboard.css'\n\nconst Scoreboard = ({ das, handleUpdate }) => {\n\n    const [stateDa, setStateDa] = useState(\n        {\n            \"id\": \"\",\n            \"name\": \"\",\n            \"bio\": \"\",\n            \"daType\": \"\",\n            \"attackOneName\": \"\",\n            \"attackTwoName\": \"\",\n            \"healName\": \"\",\n            \"imgName\": \"\",\n            \"startingHealth\": 100,\n            \"currentHealth\": 100,\n            \"points\": 0\n        }\n    )\n\n    const [disable, setDisable] = useState(false);\n\n    const findDaById = function () {\n        let url = window.location.pathname\n        let id = url.substring(url.lastIndexOf('/') + 1);\n        return das.find((da) => {\n            return da.id === parseInt(id);\n        })\n    }\n\n    let daWinner = findDaById()\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        let copiedDa = { ...stateDa }\n        copiedDa['id'] = daWinner.id\n        copiedDa[\"name\"] = daWinner.name\n        copiedDa[\"bio\"] = daWinner.bio\n        copiedDa[\"daType\"] = daWinner.daType\n        copiedDa[\"attackOneName\"] = daWinner.attackOneName\n        copiedDa[\"attackTwoName\"] = daWinner.attackTwoName\n        copiedDa[\"healName\"] = daWinner.healName\n        copiedDa[\"imgName\"] = daWinner.imgName\n        copiedDa[\"points\"] = daWinner.points += 100\n        handleUpdate(copiedDa)\n        setDisable(true)\n    }\n\n    // das.sort(function (a, b) {\n    //     return b.points - a.points;\n    // })\n\n    const dasNodes = das.map((da, index) => {\n        return (\n            <ScoreboardDa da={da} key={index} />\n        )\n    })\n\n    const daPoints = das.map((da, index) => {\n        return (\n            <ScoreboardPoints da={da} key={index} />\n        )\n    })\n\n    return (\n        <div >\n            <table className=\"scoreboard\">\n                <thead >\n                    <tr>\n                    <th colspan={das.length} className=\"header\">\n                        <form onSubmit={handleSubmit}>\n                            <button type=\"submit\" disabled={disable} className=\"buttonScoreboard\">Collect Points</button>\n                        </form>\n                    </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td><span className=\"daName\">Da League</span></td>\n                        <td><span className=\"daPoints\">Points</span></td>\n                    </tr>\n                    <tr>\n                        <td>{dasNodes}</td>\n                        <td>{daPoints}</td>\n    \n                    </tr>\n                \n                </tbody>\n        \n            </table>\n        \n            <Link to=\"/\"> <img className=\"home\" src={`${process.env.PUBLIC_URL}/logo.png`}></img> </Link>\n        </div>\n    )\n}\n\nexport default Scoreboard;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/DaList.js",["122","123"],"import React from 'react';\nimport Da from './Da';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\n\nconst DaList = ({ das, onDaClicked }) => {\n\n\tconst dasNodes = das.map((da, index) => {\n\t\treturn (\n\t\t\t<li key={index} >\n\t\t\t\t<Da da={da} key={index} onDaClicked={onDaClicked}/>\n\t\t\t</li>\n\t\t)\n\t})\n\n\treturn (\n\t\t<div >\n\t\t<Link to=\"/\"> <img className=\"home_button\" src={`${process.env.PUBLIC_URL}/logo.png`}></img> </Link>\n\t\t<ul className = \"flex-container\">\n\t\t\t{dasNodes}\n\t\t</ul>\n\t\t<Link to=\"/fight\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/SquareGo.png`}></img> </Link>\n\t\t</div>\n\t)\n}\nexport default DaList;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ModeScreen.js",["124","125","126"],"import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nconst ModeScreen = () => {\n\n    return (\n        <div>\n            <Link to=\"/select\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/pvc.png`}></img> </Link>\n            <Link to=\"/multiplayer\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/pvp.png`}></img> </Link>\n            <Link to=\"/simulation\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/cvc.png`}></img> </Link>\n\n        </div>\n    )\n}\n\nexport default ModeScreen","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Multiplayer.js",["127","128","129"],"import React from \"react\";\nimport Da from \"./Da\";\nimport PlayerOneDa from './PlayerOneDa'\nimport PlayerTwoDa from \"./PlayerTwoDa\"\nimport { Link } from 'react-router-dom';\n\nconst Multiplayer = ({ das, onDaClicked, onPlayerTwoDaClicked }) => {\n\n    const playerOneDasNodes = das.map((da, index) => {\n        return (\n            <li key={index}>\n                <PlayerOneDa da={da} key={index} onDaClicked={onDaClicked} />\n            </li>\n        )\n    })\n\n    const playerTwoDasNodes = das.map((da, index) => {\n        return (\n            <li key={index}>\n                <PlayerTwoDa da={da} key={index} onPlayerTwoDaClicked={onPlayerTwoDaClicked} />\n            </li>\n        )\n    })\n\n    return (\n        <div>\n            <Link to=\"/\"> <img className=\"home_button\" src={`${process.env.PUBLIC_URL}/logo.png`}></img> </Link>\n            <div>\n                <h2 className=\"health\">Player One : </h2>\n                <ul className = \"flex-container\">\n\t\t\t        {playerOneDasNodes}\n\t\t        </ul>\n            </div>\n            <div>\n                <h2 className=\"health\">Player Two : </h2>\n                <ul className = \"flex-container\">\n\t\t\t        {playerTwoDasNodes}\n\t\t        </ul>\n            </div>\n            <Link to=\"/multiplayerfight\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/SquareGo.png`}></img> </Link>\n        </div>\n    )\n\n}\n\nexport default Multiplayer","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Simulation.js",["130","131"],"import React from \"react\";\nimport PlayerOneDa from \"./PlayerOneDa\";\nimport PlayerTwoDa from \"./PlayerTwoDa\"\nimport { Link } from 'react-router-dom';\n\nconst Simulation = ({ das, onDaClicked, onPlayerTwoDaClicked }) => {\n\n    const playerOneDasNodes = das.map((da, index) => {\n        return (\n            <li key={index}>\n                <PlayerOneDa da={da} key={index} onDaClicked={onDaClicked} />\n            </li>\n        )\n    })\n\n    const playerTwoDasNodes = das.map((da, index) => {\n        return (\n            <li key={index}>\n                <PlayerTwoDa da={da} key={index} onPlayerTwoDaClicked={onPlayerTwoDaClicked} />\n            </li>\n        )\n    })\n\n    return (\n        \n        <div >\n        <Link to=\"/\"> <img className=\"home_button\" src={`${process.env.PUBLIC_URL}/logo.png`}></img> </Link>\n            <div>\n                <h2 className=\"health\">Computer Da One : </h2>\n                <ul className = \"flex-container\">\n                {playerOneDasNodes}\n                </ul>\n            </div>\n            <div>\n            <h2 className=\"health\">Computer Da Two : </h2>\n            <ul className = \"flex-container\">\n                {playerTwoDasNodes}\n            </ul>\n            <Link to=\"/simulationfight\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/SquareGo.png`}></img> </Link>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Simulation","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/MultiplayerFightScreen.js",["132","133","134","135","136","137","138","139","140","141","142"],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/helpers/request.js",[],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/SimulationFightScreen.js",["143","144","145","146","147","148","149"],"import React, { useEffect, useState } from 'react'\nimport CountUp from 'react-countup';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\nimport { getFID } from 'web-vitals';\n\nconst SimulationFightScreen = ({ computerDaOne, computerDaTwo, onGameFinished }) => {\n\n    const [computerDaTwoHealth, setComputerDaTwoHealth] = useState(100);\n    const [previousComputerDaTwoHealth, setPreviousComputerDaTwoHealth] = useState(0);\n    const [computerDaOneHealth, setComputerDaOneHealth] = useState(100);\n    const [previousComputerDaOneHealth, setPreviousComputerDaOneHealth] = useState(0);\n    const [computerDaTwoSpecialUsed, setComputerDaTwoSpecialUsed] = useState(false);\n    const [computerDaOneSpecialUsed, setComputerDaOneSpecialUsed] = useState(false);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [gif, setGif] = useState(false)\n\n    useEffect(() => {\n        if (computerDaTwoHealth <= 0 & computerDaOneHealth > 0) {\n            onGameFinished(computerDaOne);\n        } else if (computerDaOneHealth <= 0 & computerDaTwoHealth > 0) {\n            onGameFinished(computerDaTwo);\n        }\n    }, [computerDaTwoHealth, computerDaOneHealth])\n\n    const getRandomNumber = function (min, max) {\n        return Math.floor(Math.random() * ((max - min) + 1) + min);\n    }\n\n    const computerDaOneTurn = function () {\n        const Attack1 = function () {\n            let damage = 0;\n            if (computerDaOne.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (computerDaOne.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n            setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - damage)\n            console.log(\"computer one hit computer two for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Attack2 = function () {\n            let damage = getRandomNumber(10, 35);\n            setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n            setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - damage);\n            console.log(\"computer one hit computer two for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDaOne.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerDaOneHealth + heal) >= 100) {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => 100);\n            } else if (computerDaOneHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth + heal)\n            } else {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth + heal)\n            }\n            console.log(\"computer one healed for : \" + heal);\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - opponentDamage);\n                setComputerDaOneSpecialUsed(true);\n                computerDaOne.specialName = \"Special Used\"\n                console.log(\"computer one hit computer two for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - selfDamage);\n                setComputerDaOneSpecialUsed(true);\n                computerDaOne.specialName = \"Special Used\"\n                console.log(\"computer one hit themselves for : \" + selfDamage);\n            }\n        }\n        if (computerDaOneHealth >= 80) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaOneHealth >= 60) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaOneHealth >= 40) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaOneHealth <= 39) {\n            if (computerDaOneSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n        computerDaTwoTurn();\n    };\n\n    const computerDaTwoTurn = function () {\n        const Attack1 = function () {\n            let damage = 0;\n            if (computerDaTwo.daType === \"BUFFDA\") {\n                damage = getRandomNumber(18, 30)\n            } else if (computerDaTwo.daType === \"AVERAGEDA\") {\n                damage = getRandomNumber(23, 25)\n            } else {\n                damage = getRandomNumber(18, 25)\n            }\n            setPreviousComputerDaOneHealth(computerDaOneHealth)\n            setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - damage)\n            console.log(\"computer two hit computer one for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Attack2 = function () {\n            let damage = getRandomNumber(10, 35);\n            setPreviousComputerDaOneHealth(computerDaOneHealth)\n            setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - damage);\n            console.log(\"computer two hit computer one for : \" + damage);\n            // checkIfGameFinished();\n            setGif(true)\n            setTimeout(function () {\n                setGif(false)\n            }, 1500)\n        }\n        const Heal = function () {\n            let heal = 0;\n            if (computerDaTwo.daType === \"SOFTDA\") {\n                heal = getRandomNumber(23, 25)\n            } else {\n                heal = getRandomNumber(18, 25)\n            }\n            if ((computerDaTwoHealth + heal) >= 100) {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => 100);\n            } else if (computerDaTwoHealth <= 30) {\n                heal = getRandomNumber(24, 25)\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth + heal)\n            } else {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth + heal)\n            }\n            console.log(\"computer two healed for : \" + heal);\n        }\n        const Special = function () {\n            let opponentDamage = 45;\n            let selfDamage = 25;\n            const specialOutcome = [opponentDamage, opponentDamage, selfDamage]\n            const specialNumber = Math.floor(Math.random() * 3);\n            if (specialOutcome[specialNumber] === opponentDamage) {\n                setPreviousComputerDaOneHealth(computerDaOneHealth)\n                setComputerDaOneHealth(computerDaOneHealth => computerDaOneHealth - opponentDamage);\n                setComputerDaTwoSpecialUsed(true);\n                computerDaTwo.specialName = \"Special Used\"\n                console.log(\"computer two hit computer one for : \" + opponentDamage);\n            } else if (specialOutcome[specialNumber] === selfDamage) {\n                setPreviousComputerDaTwoHealth(computerDaTwoHealth)\n                setComputerDaTwoHealth(computerDaTwoHealth => computerDaTwoHealth - selfDamage);\n                setComputerDaTwoSpecialUsed(true);\n                computerDaTwo.specialName = \"Special Used\"\n                console.log(\"computer two hit themselves for : \" + selfDamage);\n            }\n        }\n        if (computerDaTwoHealth >= 80) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Special]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2]\n                const randomNumber = Math.floor(Math.random() * 2);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaTwoHealth >= 60) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal]\n                const randomNumber = Math.floor(Math.random() * 3);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaTwoHealth >= 40) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 5);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 4);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        } else if (computerDaTwoHealth <= 39) {\n            if (computerDaTwoSpecialUsed === false) {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal, Special]\n                const randomNumber = Math.floor(Math.random() * 7);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            } else {\n                const randomMove = [Attack1, Attack2, Heal, Heal, Heal, Heal]\n                const randomNumber = Math.floor(Math.random() * 6);\n                setTimeout(function () {\n                    randomMove[randomNumber]()\n                }, 1000)\n            }\n        }\n    };\n\n    const showFist = function () {\n        return <img src={`${process.env.PUBLIC_URL}/fist.gif`} height=\"200px\" width=\"200px\" />\n    }\n\n\n    if (gameFinished === false) {\n        return (\n            <>\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${computerDaOne.imgName}`} width=\"200\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{computerDaOne.name}</li>\n                        <li className=\"health\">{computerDaOne.bio}</li>\n                        <li className=\"health\">{computerDaOne.attackOneName}...</li>\n                        <li className=\"health\">{computerDaOne.attackTwoName}...</li>\n                        <li className=\"health\">{computerDaOne.healName}...</li>\n                    </ul>\n                    {previousComputerDaOneHealth > computerDaOneHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousComputerDaOneHealth}\n                            end={computerDaOneHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousComputerDaOneHealth}\n                            end={computerDaOneHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n                {gif === true ? showFist() : null}\n                <div>\n                    <img src={`${process.env.PUBLIC_URL}/${computerDaTwo.imgName}`} width=\"220\" height=\"250\" />\n                    <ul>\n                        <li className=\"health\">{computerDaTwo.name}</li>\n                        <li className=\"health\">{computerDaTwo.bio}</li>\n                        <li className=\"health\">{computerDaTwo.attackOneName}...</li>\n                        <li className=\"health\">{computerDaTwo.attackTwoName}...</li>\n                        <li className=\"health\">{computerDaTwo.healName}...</li>\n                    </ul>\n                    {previousComputerDaTwoHealth > computerDaTwoHealth ?\n                        <CountUp\n                            className=\"countUpRed\"\n                            start={previousComputerDaTwoHealth}\n                            end={computerDaTwoHealth}\n                            duration=\"1\"\n                        /> :\n                        <CountUp\n                            className=\"countUpGreen\"\n                            start={previousComputerDaTwoHealth}\n                            end={computerDaTwoHealth}\n                            duration=\"1\"\n                        />}\n                </div>\n                <div>\n                    <button onClick={computerDaOneTurn}>FIGHT</button>\n                </div>\n            </>\n        )\n    } else {\n        if (computerDaTwoHealth <= 0) {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDaTwo.name} smashed {computerDaTwo.name}</h1>\n                        <h2>Computer One Wins !</h2>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"health\">\n                        <h1>{computerDaTwo.name} wrecked {computerDaOne.name}</h1>\n                        <h2>Computer Two Wins !</h2>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nexport default SimulationFightScreen","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/Da.js",["150"],"import React from 'react';\nimport '../App.css'\n\nconst Da = ({ da, onDaClicked }) => {\n  \n\n  const handleClick = function(){\n    onDaClicked(da)\n  }\n\n  return (\n    <>\n    <div >\n      <img className = \"flex-item\" src={`${process.env.PUBLIC_URL}/${da.imgName}`} onClick={handleClick}/>\n      </div>\n    </>\n   \n  )\n}\n\nexport default Da;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ScoreboardPoints.js",[],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/ScoreboardDa.js",[],"/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/PlayerTwoDa.js",["151"],"import React from 'react';\n\nconst PlayerTwoDa = ({ da, onPlayerTwoDaClicked }) => {\n  \n\n  const handleClick = function(){\n    onPlayerTwoDaClicked(da)\n  }\n\n  return (\n    <>\n      <img src={`${process.env.PUBLIC_URL}/${da.imgName}`} className=\"flex-multiplayer-item\" onClick={handleClick}  width=\"280\" height=\"350\"/>\n    </>\n  )\n}\n\nexport default PlayerTwoDa;","/Users/morven/Desktop/G27/codeclan_work/java_project/front-end-da-fighters/java-project-da-fighters-frontend/src/components/PlayerOneDa.js",["152"],"import React from 'react';\nimport '../App.css'\n\nconst PlayerOneDa = ({ da, onDaClicked }) => {\n  \n\n  const handleClick = function(){\n    onDaClicked(da)\n  }\n\n  return (\n    <>\n    <div >\n      <img className = \"flex-multiplayer-item\" src={`${process.env.PUBLIC_URL}/${da.imgName}`} onClick={handleClick}/>\n      </div>\n    </>\n   \n  )\n}\n\nexport default PlayerOneDa;",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":12,"column":13,"nodeType":"159","endLine":12,"endColumn":98},{"ruleId":"157","severity":1,"message":"158","line":15,"column":21,"nodeType":"159","endLine":15,"endColumn":115},{"ruleId":"160","severity":1,"message":"161","line":41,"column":6,"nodeType":"162","endLine":41,"endColumn":16,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":139,"column":19,"nodeType":"166","messageId":"167","endLine":139,"endColumn":21},{"ruleId":"164","severity":1,"message":"168","line":15,"column":26,"nodeType":"166","messageId":"167","endLine":15,"endColumn":41},{"ruleId":"160","severity":1,"message":"169","line":28,"column":8,"nodeType":"162","endLine":28,"endColumn":38,"suggestions":"170"},{"ruleId":"164","severity":1,"message":"171","line":103,"column":19,"nodeType":"166","messageId":"167","endLine":103,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":340,"column":21,"nodeType":"159","endLine":340,"endColumn":130},{"ruleId":"157","severity":1,"message":"158","line":51,"column":12,"nodeType":"159","endLine":51,"endColumn":104},{"ruleId":"164","severity":1,"message":"172","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":20},{"ruleId":"164","severity":1,"message":"173","line":9,"column":21,"nodeType":"166","messageId":"167","endLine":9,"endColumn":31},{"ruleId":"157","severity":1,"message":"158","line":96,"column":27,"nodeType":"159","endLine":96,"endColumn":92},{"ruleId":"157","severity":1,"message":"158","line":18,"column":17,"nodeType":"159","endLine":18,"endColumn":89},{"ruleId":"157","severity":1,"message":"158","line":22,"column":22,"nodeType":"159","endLine":22,"endColumn":99},{"ruleId":"157","severity":1,"message":"158","line":8,"column":33,"nodeType":"159","endLine":8,"endColumn":105},{"ruleId":"157","severity":1,"message":"158","line":9,"column":38,"nodeType":"159","endLine":9,"endColumn":110},{"ruleId":"157","severity":1,"message":"158","line":10,"column":37,"nodeType":"159","endLine":10,"endColumn":109},{"ruleId":"164","severity":1,"message":"174","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":10},{"ruleId":"157","severity":1,"message":"158","line":27,"column":27,"nodeType":"159","endLine":27,"endColumn":99},{"ruleId":"157","severity":1,"message":"158","line":40,"column":43,"nodeType":"159","endLine":40,"endColumn":120},{"ruleId":"157","severity":1,"message":"158","line":27,"column":23,"nodeType":"159","endLine":27,"endColumn":95},{"ruleId":"157","severity":1,"message":"158","line":39,"column":42,"nodeType":"159","endLine":39,"endColumn":119},{"ruleId":"164","severity":1,"message":"175","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"164","severity":1,"message":"176","line":5,"column":10,"nodeType":"166","messageId":"167","endLine":5,"endColumn":16},{"ruleId":"164","severity":1,"message":"168","line":15,"column":26,"nodeType":"166","messageId":"167","endLine":15,"endColumn":41},{"ruleId":"164","severity":1,"message":"177","line":17,"column":21,"nodeType":"166","messageId":"167","endLine":17,"endColumn":31},{"ruleId":"164","severity":1,"message":"178","line":18,"column":22,"nodeType":"166","messageId":"167","endLine":18,"endColumn":33},{"ruleId":"164","severity":1,"message":"179","line":19,"column":21,"nodeType":"166","messageId":"167","endLine":19,"endColumn":31},{"ruleId":"164","severity":1,"message":"180","line":20,"column":21,"nodeType":"166","messageId":"167","endLine":20,"endColumn":31},{"ruleId":"160","severity":1,"message":"181","line":28,"column":8,"nodeType":"162","endLine":28,"endColumn":39,"suggestions":"182"},{"ruleId":"164","severity":1,"message":"183","line":158,"column":11,"nodeType":"166","messageId":"167","endLine":158,"endColumn":38},{"ruleId":"157","severity":1,"message":"158","line":219,"column":21,"nodeType":"159","endLine":219,"endColumn":106},{"ruleId":"157","severity":1,"message":"158","line":252,"column":21,"nodeType":"159","endLine":252,"endColumn":106},{"ruleId":"164","severity":1,"message":"175","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"164","severity":1,"message":"176","line":5,"column":10,"nodeType":"166","messageId":"167","endLine":5,"endColumn":16},{"ruleId":"164","severity":1,"message":"168","line":15,"column":26,"nodeType":"166","messageId":"167","endLine":15,"endColumn":41},{"ruleId":"160","severity":1,"message":"184","line":24,"column":8,"nodeType":"162","endLine":24,"endColumn":50,"suggestions":"185"},{"ruleId":"157","severity":1,"message":"158","line":288,"column":16,"nodeType":"159","endLine":288,"endColumn":95},{"ruleId":"157","severity":1,"message":"158","line":296,"column":21,"nodeType":"159","endLine":296,"endColumn":112},{"ruleId":"157","severity":1,"message":"158","line":320,"column":21,"nodeType":"159","endLine":320,"endColumn":112},{"ruleId":"157","severity":1,"message":"158","line":14,"column":7,"nodeType":"159","endLine":14,"endColumn":107},{"ruleId":"157","severity":1,"message":"158","line":12,"column":7,"nodeType":"159","endLine":12,"endColumn":143},{"ruleId":"157","severity":1,"message":"158","line":14,"column":7,"nodeType":"159","endLine":14,"endColumn":119},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectComputerDa'. Either include it or remove the dependency array.","ArrayExpression",["188"],"no-unused-vars","'da' is assigned a value but never used.","Identifier","unusedVar","'setGameFinished' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'computerDa', 'onGameFinished', and 'playerDa'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["189"],"'health' is assigned a value but never used.","'FinishScreen' is defined but never used.","'setStateDa' is assigned a value but never used.","'Da' is defined but never used.","'Link' is defined but never used.","'getFID' is defined but never used.","'setLeftGif' is assigned a value but never used.","'setRightGif' is assigned a value but never used.","'setHealGif' is assigned a value but never used.","'setStunGif' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onGameFinished', 'playerDa', and 'playerTwoDa'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["190"],"'handlePlayerTwoSpecialClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'computerDaOne', 'computerDaTwo', and 'onGameFinished'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["191"],"no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},"Update the dependencies array to be: [playerDa, selectComputerDa]",{"range":"200","text":"201"},"Update the dependencies array to be: [computerDa, computerHealth, onGameFinished, playerDa, playerHealth]",{"range":"202","text":"203"},"Update the dependencies array to be: [playerTwoHealth, playerHealth, onGameFinished, playerDa, playerTwoDa]",{"range":"204","text":"205"},"Update the dependencies array to be: [computerDaTwoHealth, computerDaOneHealth, onGameFinished, computerDaOne, computerDaTwo]",{"range":"206","text":"207"},[1384,1394],"[playerDa, selectComputerDa]",[1169,1199],"[computerDa, computerHealth, onGameFinished, playerDa, playerHealth]",[1232,1263],"[playerTwoHealth, playerHealth, onGameFinished, playerDa, playerTwoDa]",[1132,1174],"[computerDaTwoHealth, computerDaOneHealth, onGameFinished, computerDaOne, computerDaTwo]"]