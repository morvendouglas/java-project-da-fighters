[{"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/index.js":"1","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/reportWebVitals.js":"2","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/App.js":"3","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/containers/MainContainer.js":"4","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/containers/DaContainer.js":"5","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/Home.js":"6","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/DaForm.js":"7","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/DaList.js":"8","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/helpers/request.js":"9","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/ResultScreen.js":"10","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/FinishScreen.js":"11","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/FightScreen.js":"12","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/Da.js":"13","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/index.js":"14","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/App.js":"15","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/reportWebVitals.js":"16","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/containers/MainContainer.js":"17","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/containers/DaContainer.js":"18","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Home.js":"19","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/DaList.js":"20","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/FinishScreen.js":"21","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/FightScreen.js":"22","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/ResultScreen.js":"23","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/DaForm.js":"24","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/helpers/request.js":"25","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Da.js":"26"},{"size":500,"mtime":1638454929506,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1638454929506,"results":"29","hashOfConfig":"28"},{"size":200,"mtime":1638454985023,"results":"30","hashOfConfig":"28"},{"size":689,"mtime":1638733016220,"results":"31","hashOfConfig":"28"},{"size":3373,"mtime":1638786346572,"results":"32","hashOfConfig":"28"},{"size":581,"mtime":1638454985025,"results":"33","hashOfConfig":"28"},{"size":2150,"mtime":1638454985024,"results":"34","hashOfConfig":"28"},{"size":613,"mtime":1638788516032,"results":"35","hashOfConfig":"28"},{"size":592,"mtime":1638454985027,"results":"36","hashOfConfig":"28"},{"size":2120,"mtime":1638733016217,"results":"37","hashOfConfig":"28"},{"size":273,"mtime":1638733016214,"results":"38","hashOfConfig":"28"},{"size":15683,"mtime":1638791553207,"results":"39","hashOfConfig":"28"},{"size":378,"mtime":1638786706762,"results":"40","hashOfConfig":"28"},{"size":500,"mtime":1638791680069,"results":"41","hashOfConfig":"42"},{"size":200,"mtime":1638791720408,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":1638791680069,"results":"44","hashOfConfig":"42"},{"size":689,"mtime":1638791720411,"results":"45","hashOfConfig":"42"},{"size":3391,"mtime":1638795778143,"results":"46","hashOfConfig":"42"},{"size":581,"mtime":1638791720410,"results":"47","hashOfConfig":"42"},{"size":613,"mtime":1638791720409,"results":"48","hashOfConfig":"42"},{"size":273,"mtime":1638791720410,"results":"49","hashOfConfig":"42"},{"size":15759,"mtime":1638803890832,"results":"50","hashOfConfig":"42"},{"size":2120,"mtime":1638791720410,"results":"51","hashOfConfig":"42"},{"size":2150,"mtime":1638791720409,"results":"52","hashOfConfig":"42"},{"size":592,"mtime":1638791720412,"results":"53","hashOfConfig":"42"},{"size":378,"mtime":1638791720408,"results":"54","hashOfConfig":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"jihhiw",{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"1atgjtq",{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"89"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"89"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"89"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"89"},"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/index.js",[],["115","116"],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/reportWebVitals.js",[],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/App.js",[],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/containers/MainContainer.js",[],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/containers/DaContainer.js",["117","118","119","120"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DaList from '../components/DaList';\nimport DaForm from '../components/DaForm';\nimport Request from '../helpers/request';\nimport FightScreen from '../components/FightScreen';\nimport Home from '../components/Home';\nimport ResultScreen from '../components/ResultScreen';\nimport FinishScreen from '../components/FinishScreen';\n\n\nconst DaContainer = () => {\n  const [das, setDas] = useState([]);\n  const [playerDa, setPlayerDa] = useState(null)\n  const [computerDa, setComputerDa] = useState(null)\n  const [winner, setWinner] = useState(null)\n  const [gameFinished, setGameFinished] = useState(null)\n\n  const requestAll = function () {\n    const request = new Request();\n    const dasPromise = request.get('/das')\n\n    Promise.all([dasPromise])\n      .then((data) => {\n        setDas(data[0]);\n      })\n  }\n\n  useEffect(() => {\n    requestAll()\n  }, [])\n\n  useEffect(() => {\n    selectComputerDa()\n  }, [playerDa])\n\n  const handlePost = function (da) {\n    const request = new Request();\n    request.post(\"/api/das\", da)\n      .then(() => window.location = '/das')\n  }\n\n  const onDaClicked = function (da) {\n    setPlayerDa(da);\n    <Route path=\"/result\" render={() => {\n      return <ResultScreen />\n    }} />\n  }\n\n  const onGameFinished = function (da) {\n    setWinner(da)\n  }\n\n  const onChooseNextRandomDa = function (da) {\n    setComputerDa(da)\n  }\n\n  const onPlayerDaContinue = function (da) {\n    setPlayerDa(da)\n  }\n\n  const onNewDasList = function (das) {\n    setDas(das)\n  }\n\n  const onAllDasBeaten = function (da) {\n    setGameFinished(da)\n  }\n\n  const selectComputerDa = function () {\n    const copiedDas = [...das]\n    for (var i = 0; i < copiedDas.length; i++) {\n      if (copiedDas[i] === playerDa) {\n        copiedDas.splice(i, 1);\n      }\n    }\n    const randomIndex = Math.floor(Math.random() * copiedDas.length);\n    const randomDa = copiedDas[randomIndex];\n    setComputerDa(randomDa)\n  }\n\n\n  if (winner === null) {\n    return (\n      <div>\n        <Switch>\n\n          {/* <Route exact path=\"/das/new\" render={() => {\n          return <DaForm handlePost={handlePost} />\n        }} /> */}\n        <Route path=\"/select\" render={() => {\n          return <DaList classname = \"DaList\" das={das} onDaClicked={onDaClicked} />\n        }} />\n        <Route path=\"/fight\" render={() => {\n          return <FightScreen playerDa={playerDa} computerDa={computerDa} das = {das}/>\n        }} />\n        {/* <Route path=\"/result\" render={() => {\n          <Route path=\"/select\" render={() => {\n            return <DaList das={das} onDaClicked={onDaClicked} />\n          }} />\n          <Route path=\"/fight\" render={() => {\n            return <FightScreen playerDa={playerDa} computerDa={computerDa} onGameFinished={onGameFinished} das={das} />\n          }} />*/}\n        </Switch>\n      </div>\n    )\n  } else if (gameFinished != null) {\n    return (\n      <div>\n        <FinishScreen />\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <ResultScreen winner={winner} playerDa={playerDa} onGameFinished={onGameFinished} das={das} computerDa={computerDa} onChooseNextRandomDa={onChooseNextRandomDa} onPlayerDaContinue={onPlayerDaContinue} onNewDasList={onNewDasList} onAllDasBeaten={onAllDasBeaten} />\n      </div>\n    )\n  }\n}\n\nexport default DaContainer;","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/Home.js",["121","122"],"import React from \"react\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\n\n    const audio = new Audio('public/home_page.mp3');\n    audio.play();\n\n\nconst Home = () => {\n    return(\t\t\n        <>\n    <img className=\"main_logo\" height=\"600\" src={`${process.env.PUBLIC_URL}/logo.gif`}  />\n      <div>\n        <a href=\"/select\">\n        <img className=\"press_start\" height=\"100\" src={`${process.env.PUBLIC_URL}/press_start.gif`}  />\n        </a>\n      </div>\n      <ReactAudioPlayer className=\"audio_player\" src= \"intro.mp3\" autoplay controls/>\n\n</>\n\n    )}\n\n\n\nexport default Home;","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/DaForm.js",[],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/DaList.js",["123","124"],"import React from 'react';\nimport Da from './Da';\nimport { Link } from 'react-router-dom';\n\nconst DaList = ({ das, onDaClicked }) => {\n\n\tconst dasNodes = das.map((da, index) => {\n\t\treturn (\n\t\t\t<li key={index}>\n\t\t\t\t<Da da={da} key={index} onDaClicked={onDaClicked}/>\n\t\t\t</li>\n\t\t)\n\t})\n\n\treturn (\n\t\t<div >\n\t\t<Link to=\"/\"> <img className=\"home_button\" src={`${process.env.PUBLIC_URL}/logo.png`}></img> </Link>\n\t\t<ul className = \"flex-container\">\n\t\t\t{dasNodes}\n\t\t</ul>\n\t\t<Link to=\"/fight\"> <img className=\"fight_button\" src={`${process.env.PUBLIC_URL}/SquareGo.png`}></img> </Link>\n\t\t</div>\n\t)\n}\nexport default DaList;","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/helpers/request.js",[],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/ResultScreen.js",["125"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport FinishScreen from './FinishScreen';\n\nconst ResultScreen = ({ winner, playerDa, onGameFinished, das, computerDa, onChooseNextRandomDa, onPlayerDaContinue, onNewDasList, onAllDasBeaten }) => {\n\n    const handleOnClick = function () {\n        onGameFinished(null);\n    }\n\n    const handleOnNextDaClick = function () {\n        const copiedDas = [...das]\n        if (copiedDas.length < 2) {\n            onAllDasBeaten(playerDa)\n        } else {\n            for (var i = 0; i < copiedDas.length; i++) {\n                if (copiedDas[i] === computerDa) {\n                    copiedDas.splice(i, 1);\n                }\n                if (copiedDas[i] === playerDa) {\n                    copiedDas.splice(i, 1);\n                }\n            }\n            const randomIndex = Math.floor(Math.random() * copiedDas.length);\n            const randomDa = copiedDas[randomIndex];\n            onChooseNextRandomDa(randomDa)\n            onGameFinished(null)\n            onPlayerDaContinue(playerDa)\n            onNewDasList(copiedDas)\n        }\n    }\n\n\n\n    return (\n        <div className=\"health\">\n            <h1>{winner.name} Won !</h1>\n            {winner.name === playerDa.name ?\n                <div>\n                    <h2> You battered them !</h2>\n                    {das.length < 2 ?\n                        <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        :\n                        <Link to=\"/fight\">\n                            <button type=\"button\" onClick={handleOnNextDaClick}>Mon then ...</button>\n                        </Link>\n                    }\n                </div>\n                :\n                <div>\n                    <h2> You got smashed ...</h2>\n                    <Link to=\"/select\"><button type=\"button\" onClick={handleOnClick}>Play again ...</button></Link>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ResultScreen\n\n// if player loses, 'play again' returns to select screen\n// if player wins, want to move on to next 'level' (new random da)","/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/FinishScreen.js",[],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/FightScreen.js",["126","127","128","129","130","131","132","133","134","135","136"],"/Users/jordanmckenna/Documents/GitHub/java-project-da-fighters-frontend/src/components/Da.js",["137"],"import React from 'react';\n\nconst Da = ({ da, onDaClicked }) => {\n  \n\n  const handleClick = function(){\n    onDaClicked(da)\n  }\n\n  return (\n    <>\n    <div >\n      {/* <button onClick={handleClick}>{da.name}</button> */}\n      <img className = \"flex-item\" src={`${process.env.PUBLIC_URL}/${da.imgName}`} onClick={handleClick}/>\n      </div>\n    </>\n   \n  )\n}\n\nexport default Da;","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/index.js",[],["138","139"],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/App.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/reportWebVitals.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/containers/MainContainer.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/containers/DaContainer.js",["140","141","142","143"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DaList from '../components/DaList';\nimport DaForm from '../components/DaForm';\nimport Request from '../helpers/request';\nimport FightScreen from '../components/FightScreen';\nimport Home from '../components/Home';\nimport ResultScreen from '../components/ResultScreen';\nimport FinishScreen from '../components/FinishScreen';\n\n\nconst DaContainer = () => {\n  const [das, setDas] = useState([]);\n  const [playerDa, setPlayerDa] = useState(null)\n  const [computerDa, setComputerDa] = useState(null)\n  const [winner, setWinner] = useState(null)\n  const [gameFinished, setGameFinished] = useState(null)\n\n  const requestAll = function () {\n    const request = new Request();\n    const dasPromise = request.get('/das')\n\n    Promise.all([dasPromise])\n      .then((data) => {\n        setDas(data[0]);\n      })\n  }\n\n  useEffect(() => {\n    requestAll()\n  }, [])\n\n  useEffect(() => {\n    selectComputerDa()\n  }, [playerDa])\n\n  const handlePost = function (da) {\n    const request = new Request();\n    request.post(\"/api/das\", da)\n      .then(() => window.location = '/das')\n  }\n\n  const onDaClicked = function (da) {\n    setPlayerDa(da);\n    <Route path=\"/result\" render={() => {\n      return <ResultScreen />\n    }} />\n  }\n\n  const onGameFinished = function (da) {\n    setWinner(da)\n  }\n\n  const onChooseNextRandomDa = function (da) {\n    setComputerDa(da)\n  }\n\n  const onPlayerDaContinue = function (da) {\n    setPlayerDa(da)\n  }\n\n  const onNewDasList = function (das) {\n    setDas(das)\n  }\n\n  const onAllDasBeaten = function (da) {\n    setGameFinished(da)\n  }\n\n  const selectComputerDa = function () {\n    const copiedDas = [...das]\n    for (var i = 0; i < copiedDas.length; i++) {\n      if (copiedDas[i] === playerDa) {\n        copiedDas.splice(i, 1);\n      }\n    }\n    const randomIndex = Math.floor(Math.random() * copiedDas.length);\n    const randomDa = copiedDas[randomIndex];\n    setComputerDa(randomDa)\n  }\n\n\n  if (winner === null) {\n    return (\n      <div>\n        <Switch>\n\n          {/* <Route exact path=\"/das/new\" render={() => {\n          return <DaForm handlePost={handlePost} />\n        }} /> */}\n        <Route path=\"/select\" render={() => {\n          return <DaList classname = \"DaList\" das={das} onDaClicked={onDaClicked} />\n        }} />\n        <Route path=\"/fight\" render={() => {\n          return <FightScreen classname=\"fight\" playerDa={playerDa} computerDa={computerDa} das = {das}/>\n        }} />\n        {/* <Route path=\"/result\" render={() => {\n          <Route path=\"/select\" render={() => {\n            return <DaList das={das} onDaClicked={onDaClicked} />\n          }} />\n          <Route path=\"/fight\" render={() => {\n            return <FightScreen playerDa={playerDa} computerDa={computerDa} onGameFinished={onGameFinished} das={das} />\n          }} />*/}\n        </Switch>\n      </div>\n    )\n  } else if (gameFinished != null) {\n    return (\n      <div>\n        <FinishScreen />\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <ResultScreen winner={winner} playerDa={playerDa} onGameFinished={onGameFinished} das={das} computerDa={computerDa} onChooseNextRandomDa={onChooseNextRandomDa} onPlayerDaContinue={onPlayerDaContinue} onNewDasList={onNewDasList} onAllDasBeaten={onAllDasBeaten} />\n      </div>\n    )\n  }\n}\n\nexport default DaContainer;","/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Home.js",["144","145"],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/DaList.js",["146","147"],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/FinishScreen.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/FightScreen.js",["148","149","150","151","152","153","154","155","156","157"],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/ResultScreen.js",["158"],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/DaForm.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/helpers/request.js",[],"/Users/jordanmckenna/Desktop/CodeClan/Projects/Da_fighters/java-project-da-fighters-frontend/src/components/Da.js",["159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":14},{"ruleId":"164","severity":1,"message":"168","line":7,"column":8,"nodeType":"166","messageId":"167","endLine":7,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":35,"column":6,"nodeType":"171","endLine":35,"endColumn":16,"suggestions":"172"},{"ruleId":"164","severity":1,"message":"173","line":37,"column":9,"nodeType":"166","messageId":"167","endLine":37,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":12,"column":5,"nodeType":"176","endLine":12,"endColumn":91},{"ruleId":"174","severity":1,"message":"175","line":15,"column":9,"nodeType":"176","endLine":15,"endColumn":104},{"ruleId":"174","severity":1,"message":"175","line":17,"column":17,"nodeType":"176","endLine":17,"endColumn":89},{"ruleId":"174","severity":1,"message":"175","line":21,"column":22,"nodeType":"176","endLine":21,"endColumn":99},{"ruleId":"164","severity":1,"message":"177","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":20},{"ruleId":"164","severity":1,"message":"178","line":1,"column":28,"nodeType":"166","messageId":"167","endLine":1,"endColumn":34},{"ruleId":"164","severity":1,"message":"179","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"164","severity":1,"message":"180","line":5,"column":10,"nodeType":"166","messageId":"167","endLine":5,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":7,"column":1,"nodeType":"176","endLine":7,"endColumn":6},{"ruleId":"164","severity":1,"message":"181","line":17,"column":26,"nodeType":"166","messageId":"167","endLine":17,"endColumn":41},{"ruleId":"169","severity":1,"message":"182","line":26,"column":8,"nodeType":"171","endLine":26,"endColumn":38,"suggestions":"183"},{"ruleId":"164","severity":1,"message":"184","line":84,"column":19,"nodeType":"166","messageId":"167","endLine":84,"endColumn":25},{"ruleId":"164","severity":1,"message":"185","line":94,"column":11,"nodeType":"166","messageId":"167","endLine":94,"endColumn":29},{"ruleId":"174","severity":1,"message":"175","line":254,"column":16,"nodeType":"176","endLine":254,"endColumn":95},{"ruleId":"174","severity":1,"message":"175","line":269,"column":21,"nodeType":"176","endLine":269,"endColumn":107},{"ruleId":"174","severity":1,"message":"175","line":293,"column":21,"nodeType":"176","endLine":293,"endColumn":109},{"ruleId":"174","severity":1,"message":"175","line":14,"column":7,"nodeType":"176","endLine":14,"endColumn":107},{"ruleId":"160","replacedBy":"186"},{"ruleId":"162","replacedBy":"187"},{"ruleId":"164","severity":1,"message":"165","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":14},{"ruleId":"164","severity":1,"message":"168","line":7,"column":8,"nodeType":"166","messageId":"167","endLine":7,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":35,"column":6,"nodeType":"171","endLine":35,"endColumn":16,"suggestions":"188"},{"ruleId":"164","severity":1,"message":"173","line":37,"column":9,"nodeType":"166","messageId":"167","endLine":37,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":12,"column":5,"nodeType":"176","endLine":12,"endColumn":91},{"ruleId":"174","severity":1,"message":"175","line":15,"column":9,"nodeType":"176","endLine":15,"endColumn":104},{"ruleId":"174","severity":1,"message":"175","line":17,"column":17,"nodeType":"176","endLine":17,"endColumn":89},{"ruleId":"174","severity":1,"message":"175","line":21,"column":22,"nodeType":"176","endLine":21,"endColumn":99},{"ruleId":"164","severity":1,"message":"178","line":1,"column":28,"nodeType":"166","messageId":"167","endLine":1,"endColumn":34},{"ruleId":"164","severity":1,"message":"179","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"164","severity":1,"message":"180","line":5,"column":10,"nodeType":"166","messageId":"167","endLine":5,"endColumn":16},{"ruleId":"164","severity":1,"message":"181","line":16,"column":26,"nodeType":"166","messageId":"167","endLine":16,"endColumn":41},{"ruleId":"169","severity":1,"message":"182","line":25,"column":8,"nodeType":"171","endLine":25,"endColumn":38,"suggestions":"189"},{"ruleId":"164","severity":1,"message":"184","line":83,"column":19,"nodeType":"166","messageId":"167","endLine":83,"endColumn":25},{"ruleId":"164","severity":1,"message":"185","line":93,"column":11,"nodeType":"166","messageId":"167","endLine":93,"endColumn":29},{"ruleId":"174","severity":1,"message":"175","line":253,"column":16,"nodeType":"176","endLine":253,"endColumn":95},{"ruleId":"174","severity":1,"message":"175","line":268,"column":21,"nodeType":"176","endLine":268,"endColumn":130},{"ruleId":"174","severity":1,"message":"175","line":292,"column":21,"nodeType":"176","endLine":292,"endColumn":109},{"ruleId":"164","severity":1,"message":"177","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":14,"column":7,"nodeType":"176","endLine":14,"endColumn":107},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'DaForm' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectComputerDa'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'handlePost' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FinishScreen' is defined but never used.","'useRef' is defined but never used.","'Link' is defined but never used.","'getFID' is defined but never used.","'setGameFinished' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'computerDa', 'onGameFinished', and 'playerDa'. Either include them or remove the dependency array. If 'onGameFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["193"],"'health' is assigned a value but never used.","'handleSpecialClick' is assigned a value but never used.",["190"],["191"],["194"],["195"],"no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"196","fix":"200"},{"desc":"198","fix":"201"},"Update the dependencies array to be: [playerDa, selectComputerDa]",{"range":"202","text":"203"},"Update the dependencies array to be: [computerDa, computerHealth, onGameFinished, playerDa, playerHealth]",{"range":"204","text":"205"},{"range":"206","text":"203"},{"range":"207","text":"205"},[1007,1017],"[playerDa, selectComputerDa]",[1036,1066],"[computerDa, computerHealth, onGameFinished, playerDa, playerHealth]",[1007,1017],[1024,1054]]